{
	"id": "5fcc7c5ff13949d53559170633eac07d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FCODE_flattened.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.2.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance < type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: contracts/FCODE.sol\n\n\npragma solidity ^0.8.0;\n\n\n\ncontract FCODE is ERC20, Ownable {\n    uint256 public balance;\n\n    constructor(uint256 initialSupply) ERC20(\"FCODE\", \"FCODE\") Ownable(msg.sender) {\n        _mint(msg.sender, initialSupply * 10 ** decimals());\n    }\n    \n    function mint(address to, uint256 amount) public onlyOwner {\n        _mint(to, amount);\n    }\n    \n    function burn(uint256 amount) public {\n        _burn(msg.sender, amount);\n    }\n\n    function withdraw(uint amount, address payable destAddress) public {\n        require(msg.sender==owner(), \"Only owner can withdraw.\");\n        require(amount <= balance, \"Insufficient funds.\");\n        destAddress.transfer(amount);\n        balance-=amount;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/FCODE_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FCODE_flattened.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FCODE_flattened.sol\":{\"keccak256\":\"0x0c74ffbbb1f8f3173359cd185e8c74000ccbc4a653e34b46c82853c3da09065f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66b87a5e218b05fa1dd040690b592c2edc6900d930f6250464d461c3e029572a\",\"dweb:/ipfs/Qme7ykacraz5pzTCetyALnMRoAc4mTaYHEfwi4fRSjsZoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FCODE_flattened.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FCODE_flattened.sol\":{\"keccak256\":\"0x0c74ffbbb1f8f3173359cd185e8c74000ccbc4a653e34b46c82853c3da09065f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66b87a5e218b05fa1dd040690b592c2edc6900d930f6250464d461c3e029572a\",\"dweb:/ipfs/Qme7ykacraz5pzTCetyALnMRoAc4mTaYHEfwi4fRSjsZoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/FCODE_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/FCODE_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/FCODE_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/FCODE_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/FCODE_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"FCODE": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "address payable",
									"name": "destAddress",
									"type": "address"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FCODE_flattened.sol\":24932:25609  contract FCODE is ERC20, Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FCODE_flattened.sol\":25000:25147  constructor(uint256 initialSupply) ERC20(\"FCODE\", \"FCODE\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/FCODE_flattened.sol\":25067:25077  msg.sender */\n  caller\n    /* \"contracts/FCODE_flattened.sol\":12501:12614  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x46434f4445000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x46434f4445000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"contracts/FCODE_flattened.sol\":12575:12580  name_ */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":12567:12572  _name */\n  0x03\n    /* \"contracts/FCODE_flattened.sol\":12567:12580  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"contracts/FCODE_flattened.sol\":12600:12607  symbol_ */\n  dup1\n    /* \"contracts/FCODE_flattened.sol\":12590:12597  _symbol */\n  0x04\n    /* \"contracts/FCODE_flattened.sol\":12590:12607  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/FCODE_flattened.sol\":12501:12614  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"contracts/FCODE_flattened.sol\":23068:23069  0 */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":23044:23070  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FCODE_flattened.sol\":23044:23056  initialOwner */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":23044:23070  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/FCODE_flattened.sol\":23040:23135  if (initialOwner == address(0)) {... */\n  tag_12\n  jumpi\n    /* \"contracts/FCODE_flattened.sol\":23121:23122  0 */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":23093:23124  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_13\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_13:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/FCODE_flattened.sol\":23040:23135  if (initialOwner == address(0)) {... */\ntag_12:\n    /* \"contracts/FCODE_flattened.sol\":23144:23176  _transferOwnership(initialOwner) */\n  tag_15\n    /* \"contracts/FCODE_flattened.sol\":23163:23175  initialOwner */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":23144:23162  _transferOwnership */\n  shl(0x20, tag_16)\n    /* \"contracts/FCODE_flattened.sol\":23144:23176  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_15:\n    /* \"contracts/FCODE_flattened.sol\":22996:23183  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/FCODE_flattened.sol\":25089:25140  _mint(msg.sender, initialSupply * 10 ** decimals()) */\n  tag_18\n    /* \"contracts/FCODE_flattened.sol\":25095:25105  msg.sender */\n  caller\n    /* \"contracts/FCODE_flattened.sol\":25129:25139  decimals() */\n  tag_19\n    /* \"contracts/FCODE_flattened.sol\":25129:25137  decimals */\n  shl(0x20, tag_20)\n    /* \"contracts/FCODE_flattened.sol\":25129:25139  decimals() */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"contracts/FCODE_flattened.sol\":25123:25125  10 */\n  0x0a\n    /* \"contracts/FCODE_flattened.sol\":25123:25139  10 ** decimals() */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/FCODE_flattened.sol\":25107:25120  initialSupply */\n  dup4\n    /* \"contracts/FCODE_flattened.sol\":25107:25139  initialSupply * 10 ** decimals() */\n  tag_23\n  swap2\n  swap1\n  tag_24\n  jump\t// in\ntag_23:\n    /* \"contracts/FCODE_flattened.sol\":25089:25094  _mint */\n  shl(0x20, tag_25)\n    /* \"contracts/FCODE_flattened.sol\":25089:25140  _mint(msg.sender, initialSupply * 10 ** decimals()) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/FCODE_flattened.sol\":25000:25147  constructor(uint256 initialSupply) ERC20(\"FCODE\", \"FCODE\") Ownable(msg.sender) {... */\n  pop\n    /* \"contracts/FCODE_flattened.sol\":24932:25609  contract FCODE is ERC20, Ownable {... */\n  jump(tag_26)\n    /* \"contracts/FCODE_flattened.sol\":24683:24870  function _transferOwnership(address newOwner) internal virtual {... */\ntag_16:\n    /* \"contracts/FCODE_flattened.sol\":24756:24772  address oldOwner */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":24775:24781  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FCODE_flattened.sol\":24756:24781  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"contracts/FCODE_flattened.sol\":24800:24808  newOwner */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":24791:24797  _owner */\n  0x05\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":24791:24808  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/FCODE_flattened.sol\":24854:24862  newOwner */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":24823:24863  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FCODE_flattened.sol\":24844:24852  oldOwner */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":24823:24863  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/FCODE_flattened.sol\":24746:24870  {... */\n  pop\n    /* \"contracts/FCODE_flattened.sol\":24683:24870  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/FCODE_flattened.sol\":13607:13689  function decimals() public view virtual returns (uint8) {... */\ntag_20:\n    /* \"contracts/FCODE_flattened.sol\":13656:13661  uint8 */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":13680:13682  18 */\n  0x12\n    /* \"contracts/FCODE_flattened.sol\":13673:13682  return 18 */\n  swap1\n  pop\n    /* \"contracts/FCODE_flattened.sol\":13607:13689  function decimals() public view virtual returns (uint8) {... */\n  swap1\n  jump\t// out\n    /* \"contracts/FCODE_flattened.sol\":18358:18566  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"contracts/FCODE_flattened.sol\":18447:18448  0 */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":18428:18449  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FCODE_flattened.sol\":18428:18435  account */\n  dup3\n    /* \"contracts/FCODE_flattened.sol\":18428:18449  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/FCODE_flattened.sol\":18424:18515  if (account == address(0)) {... */\n  tag_30\n  jumpi\n    /* \"contracts/FCODE_flattened.sol\":18501:18502  0 */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":18472:18504  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_31\n  swap2\n  swap1\n  tag_14\n  jump\t// in\ntag_31:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/FCODE_flattened.sol\":18424:18515  if (account == address(0)) {... */\ntag_30:\n    /* \"contracts/FCODE_flattened.sol\":18524:18559  _update(address(0), account, value) */\n  tag_32\n    /* \"contracts/FCODE_flattened.sol\":18540:18541  0 */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":18544:18551  account */\n  dup4\n    /* \"contracts/FCODE_flattened.sol\":18553:18558  value */\n  dup4\n    /* \"contracts/FCODE_flattened.sol\":18524:18531  _update */\n  shl(0x20, tag_33)\n    /* \"contracts/FCODE_flattened.sol\":18524:18559  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_32:\n    /* \"contracts/FCODE_flattened.sol\":18358:18566  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/FCODE_flattened.sol\":16908:18015  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_33:\n    /* \"contracts/FCODE_flattened.sol\":17013:17014  0 */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":16997:17015  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FCODE_flattened.sol\":16997:17001  from */\n  dup4\n    /* \"contracts/FCODE_flattened.sol\":16997:17015  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/FCODE_flattened.sol\":16993:17533  if (from == address(0)) {... */\n  tag_35\n  jumpi\n    /* \"contracts/FCODE_flattened.sol\":17149:17154  value */\n  dup1\n    /* \"contracts/FCODE_flattened.sol\":17133:17145  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17133:17154  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_36\n  swap2\n  swap1\n  tag_37\n  jump\t// in\ntag_36:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FCODE_flattened.sol\":16993:17533  if (from == address(0)) {... */\n  jump(tag_38)\ntag_35:\n    /* \"contracts/FCODE_flattened.sol\":17185:17204  uint256 fromBalance */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17207:17216  _balances */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17207:17222  _balances[from] */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17217:17221  from */\n  dup6\n    /* \"contracts/FCODE_flattened.sol\":17207:17222  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"contracts/FCODE_flattened.sol\":17185:17222  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"contracts/FCODE_flattened.sol\":17254:17259  value */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":17240:17251  fromBalance */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":17240:17259  fromBalance < value */\n  lt\n    /* \"contracts/FCODE_flattened.sol\":17236:17351  if (fromBalance < value) {... */\n  iszero\n  tag_39\n  jumpi\n    /* \"contracts/FCODE_flattened.sol\":17311:17315  from */\n  dup4\n    /* \"contracts/FCODE_flattened.sol\":17317:17328  fromBalance */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":17330:17335  value */\n  dup4\n    /* \"contracts/FCODE_flattened.sol\":17286:17336  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_40\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_41\n  jump\t// in\ntag_40:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/FCODE_flattened.sol\":17236:17351  if (fromBalance < value) {... */\ntag_39:\n    /* \"contracts/FCODE_flattened.sol\":17503:17508  value */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":17489:17500  fromBalance */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":17489:17508  fromBalance - value */\n  sub\n    /* \"contracts/FCODE_flattened.sol\":17471:17480  _balances */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17471:17486  _balances[from] */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17481:17485  from */\n  dup7\n    /* \"contracts/FCODE_flattened.sol\":17471:17486  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"contracts/FCODE_flattened.sol\":17471:17508  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FCODE_flattened.sol\":17171:17533  {... */\n  pop\n    /* \"contracts/FCODE_flattened.sol\":16993:17533  if (from == address(0)) {... */\ntag_38:\n    /* \"contracts/FCODE_flattened.sol\":17561:17562  0 */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17547:17563  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FCODE_flattened.sol\":17547:17549  to */\n  dup3\n    /* \"contracts/FCODE_flattened.sol\":17547:17563  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"contracts/FCODE_flattened.sol\":17543:17968  if (to == address(0)) {... */\n  tag_42\n  jumpi\n    /* \"contracts/FCODE_flattened.sol\":17726:17731  value */\n  dup1\n    /* \"contracts/FCODE_flattened.sol\":17710:17722  _totalSupply */\n  0x02\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17710:17731  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FCODE_flattened.sol\":17543:17968  if (to == address(0)) {... */\n  jump(tag_43)\ntag_42:\n    /* \"contracts/FCODE_flattened.sol\":17938:17943  value */\n  dup1\n    /* \"contracts/FCODE_flattened.sol\":17921:17930  _balances */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17921:17934  _balances[to] */\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17931:17933  to */\n  dup5\n    /* \"contracts/FCODE_flattened.sol\":17921:17934  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/FCODE_flattened.sol\":17921:17943  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/FCODE_flattened.sol\":17543:17968  if (to == address(0)) {... */\ntag_43:\n    /* \"contracts/FCODE_flattened.sol\":17998:18000  to */\n  dup2\n    /* \"contracts/FCODE_flattened.sol\":17983:18008  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/FCODE_flattened.sol\":17992:17996  from */\n  dup4\n    /* \"contracts/FCODE_flattened.sol\":17983:18008  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"contracts/FCODE_flattened.sol\":18002:18007  value */\n  dup4\n    /* \"contracts/FCODE_flattened.sol\":17983:18008  Transfer(from, to, value) */\n  mload(0x40)\n  tag_44\n  swap2\n  swap1\n  tag_45\n  jump\t// in\ntag_44:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"contracts/FCODE_flattened.sol\":16908:18015  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_47:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_49:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_50:\n    /* \"#utility.yul\":490:514   */\n  tag_86\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_49\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  0x00\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_87:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_51:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_89\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_50\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_91\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_92\n  tag_47\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":781:900   */\ntag_91:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_93\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_51\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1150   */\ntag_52:\n    /* \"#utility.yul\":1103:1109   */\n  0x00\n    /* \"#utility.yul\":1137:1142   */\n  dup2\n    /* \"#utility.yul\":1131:1143   */\n  mload\n    /* \"#utility.yul\":1121:1143   */\n  swap1\n  pop\n    /* \"#utility.yul\":1051:1150   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1156:1336   */\ntag_53:\n    /* \"#utility.yul\":1204:1281   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1201:1202   */\n  0x00\n    /* \"#utility.yul\":1194:1282   */\n  mstore\n    /* \"#utility.yul\":1301:1305   */\n  0x41\n    /* \"#utility.yul\":1298:1299   */\n  0x04\n    /* \"#utility.yul\":1291:1306   */\n  mstore\n    /* \"#utility.yul\":1325:1329   */\n  0x24\n    /* \"#utility.yul\":1322:1323   */\n  0x00\n    /* \"#utility.yul\":1315:1330   */\n  revert\n    /* \"#utility.yul\":1342:1522   */\ntag_54:\n    /* \"#utility.yul\":1390:1467   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1387:1388   */\n  0x00\n    /* \"#utility.yul\":1380:1468   */\n  mstore\n    /* \"#utility.yul\":1487:1491   */\n  0x22\n    /* \"#utility.yul\":1484:1485   */\n  0x04\n    /* \"#utility.yul\":1477:1492   */\n  mstore\n    /* \"#utility.yul\":1511:1515   */\n  0x24\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1516   */\n  revert\n    /* \"#utility.yul\":1528:1848   */\ntag_55:\n    /* \"#utility.yul\":1572:1578   */\n  0x00\n    /* \"#utility.yul\":1609:1610   */\n  0x02\n    /* \"#utility.yul\":1603:1607   */\n  dup3\n    /* \"#utility.yul\":1599:1611   */\n  div\n    /* \"#utility.yul\":1589:1611   */\n  swap1\n  pop\n    /* \"#utility.yul\":1656:1657   */\n  0x01\n    /* \"#utility.yul\":1650:1654   */\n  dup3\n    /* \"#utility.yul\":1646:1658   */\n  and\n    /* \"#utility.yul\":1677:1695   */\n  dup1\n    /* \"#utility.yul\":1667:1748   */\n  tag_98\n  jumpi\n    /* \"#utility.yul\":1733:1737   */\n  0x7f\n    /* \"#utility.yul\":1725:1731   */\n  dup3\n    /* \"#utility.yul\":1721:1738   */\n  and\n    /* \"#utility.yul\":1711:1738   */\n  swap2\n  pop\n    /* \"#utility.yul\":1667:1748   */\ntag_98:\n    /* \"#utility.yul\":1795:1797   */\n  0x20\n    /* \"#utility.yul\":1787:1793   */\n  dup3\n    /* \"#utility.yul\":1784:1798   */\n  lt\n    /* \"#utility.yul\":1764:1782   */\n  dup2\n    /* \"#utility.yul\":1761:1799   */\n  sub\n    /* \"#utility.yul\":1758:1842   */\n  tag_99\n  jumpi\n    /* \"#utility.yul\":1814:1832   */\n  tag_100\n  tag_54\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":1758:1842   */\ntag_99:\n    /* \"#utility.yul\":1579:1848   */\n  pop\n    /* \"#utility.yul\":1528:1848   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1854:1995   */\ntag_56:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_57:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_58:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_59:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_105\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_58\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2473:2512   */\n  tag_106\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_58\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_60:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_61:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_109\n    /* \"#utility.yul\":2779:2813   */\n  tag_110\n    /* \"#utility.yul\":2788:2812   */\n  tag_111\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_49\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2779:2813   */\n  tag_60\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":2761:2814   */\n  tag_49\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_62:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_63:\n    /* \"#utility.yul\":3017:3056   */\n  tag_114\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_61\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3078:3169   */\n  tag_115\n    /* \"#utility.yul\":3127:3168   */\n  tag_116\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_62\n  jump\t// in\ntag_116:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_59\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_64:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3248:3249   */\n  0x00\n    /* \"#utility.yul\":3241:3249   */\n  swap1\n  pop\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_65:\n    /* \"#utility.yul\":3338:3370   */\n  tag_119\n  tag_64\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3379:3444   */\n  tag_120\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_63\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_66:\n    /* \"#utility.yul\":3516:3636   */\ntag_122:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_125\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_65\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_122)\ntag_124:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_67:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_127\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_128\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_56\n  jump\t// in\ntag_128:\n    /* \"#utility.yul\":3867:3896   */\n  tag_129\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_57\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_130:\n    /* \"#utility.yul\":4094:4174   */\n  tag_131\n    /* \"#utility.yul\":4150:4172   */\n  tag_132\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_57\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_66\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_127:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_68:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_69:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_135\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_68\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_70:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_137\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_69\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_9:\n    /* \"#utility.yul\":4911:4948   */\n  tag_139\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_52\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_141\n  tag_53\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":4999:5055   */\ntag_140:\n    /* \"#utility.yul\":5079:5117   */\n  tag_142\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_55\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5164:5231   */\n  tag_143\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_67\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_146:\n    /* \"#utility.yul\":6105:6172   */\n  tag_147\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_70\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_144)\n    /* \"#utility.yul\":5326:5944   */\ntag_145:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_148\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_56\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_149:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_151\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_149)\ntag_151:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_152\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_153\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_69\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_152:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_144:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6321   */\ntag_71:\n    /* \"#utility.yul\":6232:6239   */\n  0x00\n    /* \"#utility.yul\":6272:6314   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6265:6270   */\n  dup3\n    /* \"#utility.yul\":6261:6315   */\n  and\n    /* \"#utility.yul\":6250:6315   */\n  swap1\n  pop\n    /* \"#utility.yul\":6195:6321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6423   */\ntag_72:\n    /* \"#utility.yul\":6364:6371   */\n  0x00\n    /* \"#utility.yul\":6393:6417   */\n  tag_156\n    /* \"#utility.yul\":6411:6416   */\n  dup3\n    /* \"#utility.yul\":6393:6417   */\n  tag_71\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6382:6417   */\n  swap1\n  pop\n    /* \"#utility.yul\":6327:6423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_73:\n    /* \"#utility.yul\":6516:6540   */\n  tag_158\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_72\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_14:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_160\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_73\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_74:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7069   */\ntag_75:\n    /* \"#utility.yul\":7009:7017   */\n  0x00\n    /* \"#utility.yul\":7056:7061   */\n  dup2\n    /* \"#utility.yul\":7053:7054   */\n  0x01\n    /* \"#utility.yul\":7049:7062   */\n  shr\n    /* \"#utility.yul\":7028:7062   */\n  swap1\n  pop\n    /* \"#utility.yul\":6967:7069   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7075:7923   */\ntag_76:\n    /* \"#utility.yul\":7136:7141   */\n  0x00\n    /* \"#utility.yul\":7143:7147   */\n  0x00\n    /* \"#utility.yul\":7167:7173   */\n  dup3\n    /* \"#utility.yul\":7158:7173   */\n  swap2\n  pop\n    /* \"#utility.yul\":7191:7196   */\n  dup4\n    /* \"#utility.yul\":7182:7196   */\n  swap1\n  pop\n    /* \"#utility.yul\":7205:7917   */\ntag_164:\n    /* \"#utility.yul\":7226:7227   */\n  0x01\n    /* \"#utility.yul\":7216:7224   */\n  dup6\n    /* \"#utility.yul\":7213:7228   */\n  gt\n    /* \"#utility.yul\":7205:7917   */\n  iszero\n  tag_166\n  jumpi\n    /* \"#utility.yul\":7321:7325   */\n  dup1\n    /* \"#utility.yul\":7316:7319   */\n  dup7\n    /* \"#utility.yul\":7312:7326   */\n  div\n    /* \"#utility.yul\":7306:7310   */\n  dup2\n    /* \"#utility.yul\":7303:7327   */\n  gt\n    /* \"#utility.yul\":7300:7350   */\n  iszero\n  tag_167\n  jumpi\n    /* \"#utility.yul\":7330:7348   */\n  tag_168\n  tag_74\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7300:7350   */\ntag_167:\n    /* \"#utility.yul\":7380:7381   */\n  0x01\n    /* \"#utility.yul\":7370:7378   */\n  dup6\n    /* \"#utility.yul\":7366:7382   */\n  and\n    /* \"#utility.yul\":7363:7814   */\n  iszero\n  tag_169\n  jumpi\n    /* \"#utility.yul\":7795:7799   */\n  dup1\n    /* \"#utility.yul\":7788:7793   */\n  dup3\n    /* \"#utility.yul\":7784:7800   */\n  mul\n    /* \"#utility.yul\":7775:7800   */\n  swap2\n  pop\n    /* \"#utility.yul\":7363:7814   */\ntag_169:\n    /* \"#utility.yul\":7845:7849   */\n  dup1\n    /* \"#utility.yul\":7839:7843   */\n  dup2\n    /* \"#utility.yul\":7835:7850   */\n  mul\n    /* \"#utility.yul\":7827:7850   */\n  swap1\n  pop\n    /* \"#utility.yul\":7875:7907   */\n  tag_170\n    /* \"#utility.yul\":7898:7906   */\n  dup6\n    /* \"#utility.yul\":7875:7907   */\n  tag_75\n  jump\t// in\ntag_170:\n    /* \"#utility.yul\":7863:7907   */\n  swap5\n  pop\n    /* \"#utility.yul\":7205:7917   */\n  jump(tag_164)\ntag_166:\n    /* \"#utility.yul\":7075:7923   */\n  swap5\n  pop\n  swap5\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7929:9002   */\ntag_77:\n    /* \"#utility.yul\":7983:7988   */\n  0x00\n    /* \"#utility.yul\":8174:8182   */\n  dup3\n    /* \"#utility.yul\":8164:8204   */\n  tag_172\n  jumpi\n    /* \"#utility.yul\":8195:8196   */\n  0x01\n    /* \"#utility.yul\":8186:8196   */\n  swap1\n  pop\n    /* \"#utility.yul\":8197:8202   */\n  jump(tag_171)\n    /* \"#utility.yul\":8164:8204   */\ntag_172:\n    /* \"#utility.yul\":8223:8227   */\n  dup2\n    /* \"#utility.yul\":8213:8249   */\n  tag_173\n  jumpi\n    /* \"#utility.yul\":8240:8241   */\n  0x00\n    /* \"#utility.yul\":8231:8241   */\n  swap1\n  pop\n    /* \"#utility.yul\":8242:8247   */\n  jump(tag_171)\n    /* \"#utility.yul\":8213:8249   */\ntag_173:\n    /* \"#utility.yul\":8309:8313   */\n  dup2\n    /* \"#utility.yul\":8357:8358   */\n  0x01\n    /* \"#utility.yul\":8352:8379   */\n  dup2\n  eq\n  tag_175\n  jumpi\n    /* \"#utility.yul\":8393:8394   */\n  0x02\n    /* \"#utility.yul\":8388:8579   */\n  dup2\n  eq\n  tag_176\n  jumpi\n    /* \"#utility.yul\":8302:8579   */\n  jump(tag_174)\n    /* \"#utility.yul\":8352:8379   */\ntag_175:\n    /* \"#utility.yul\":8370:8371   */\n  0x01\n    /* \"#utility.yul\":8361:8371   */\n  swap2\n  pop\n    /* \"#utility.yul\":8372:8377   */\n  pop\n  jump(tag_171)\n    /* \"#utility.yul\":8388:8579   */\ntag_176:\n    /* \"#utility.yul\":8433:8436   */\n  0xff\n    /* \"#utility.yul\":8423:8431   */\n  dup5\n    /* \"#utility.yul\":8420:8437   */\n  gt\n    /* \"#utility.yul\":8417:8460   */\n  iszero\n  tag_177\n  jumpi\n    /* \"#utility.yul\":8440:8458   */\n  tag_178\n  tag_74\n  jump\t// in\ntag_178:\n    /* \"#utility.yul\":8417:8460   */\ntag_177:\n    /* \"#utility.yul\":8489:8497   */\n  dup4\n    /* \"#utility.yul\":8486:8487   */\n  0x02\n    /* \"#utility.yul\":8482:8498   */\n  exp\n    /* \"#utility.yul\":8473:8498   */\n  swap2\n  pop\n    /* \"#utility.yul\":8524:8527   */\n  dup5\n    /* \"#utility.yul\":8517:8522   */\n  dup3\n    /* \"#utility.yul\":8514:8528   */\n  gt\n    /* \"#utility.yul\":8511:8551   */\n  iszero\n  tag_179\n  jumpi\n    /* \"#utility.yul\":8531:8549   */\n  tag_180\n  tag_74\n  jump\t// in\ntag_180:\n    /* \"#utility.yul\":8511:8551   */\ntag_179:\n    /* \"#utility.yul\":8564:8569   */\n  pop\n  jump(tag_171)\n    /* \"#utility.yul\":8302:8579   */\ntag_174:\n  pop\n    /* \"#utility.yul\":8688:8690   */\n  0x20\n    /* \"#utility.yul\":8678:8686   */\n  dup4\n    /* \"#utility.yul\":8675:8691   */\n  lt\n    /* \"#utility.yul\":8669:8672   */\n  0x0133\n    /* \"#utility.yul\":8663:8667   */\n  dup4\n    /* \"#utility.yul\":8660:8673   */\n  lt\n    /* \"#utility.yul\":8656:8692   */\n  and\n    /* \"#utility.yul\":8638:8640   */\n  0x4e\n    /* \"#utility.yul\":8628:8636   */\n  dup5\n    /* \"#utility.yul\":8625:8641   */\n  lt\n    /* \"#utility.yul\":8620:8622   */\n  0x0b\n    /* \"#utility.yul\":8614:8618   */\n  dup5\n    /* \"#utility.yul\":8611:8623   */\n  lt\n    /* \"#utility.yul\":8607:8642   */\n  and\n    /* \"#utility.yul\":8591:8702   */\n  or\n    /* \"#utility.yul\":8588:8834   */\n  iszero\n  tag_181\n  jumpi\n    /* \"#utility.yul\":8744:8752   */\n  dup3\n    /* \"#utility.yul\":8738:8742   */\n  dup3\n    /* \"#utility.yul\":8734:8753   */\n  exp\n    /* \"#utility.yul\":8725:8753   */\n  swap1\n  pop\n    /* \"#utility.yul\":8779:8782   */\n  dup4\n    /* \"#utility.yul\":8772:8777   */\n  dup2\n    /* \"#utility.yul\":8769:8783   */\n  gt\n    /* \"#utility.yul\":8766:8806   */\n  iszero\n  tag_182\n  jumpi\n    /* \"#utility.yul\":8786:8804   */\n  tag_183\n  tag_74\n  jump\t// in\ntag_183:\n    /* \"#utility.yul\":8766:8806   */\ntag_182:\n    /* \"#utility.yul\":8819:8824   */\n  jump(tag_171)\n    /* \"#utility.yul\":8588:8834   */\ntag_181:\n    /* \"#utility.yul\":8859:8901   */\n  tag_184\n    /* \"#utility.yul\":8897:8900   */\n  dup5\n    /* \"#utility.yul\":8887:8895   */\n  dup5\n    /* \"#utility.yul\":8881:8885   */\n  dup5\n    /* \"#utility.yul\":8878:8879   */\n  0x01\n    /* \"#utility.yul\":8859:8901   */\n  tag_76\n  jump\t// in\ntag_184:\n    /* \"#utility.yul\":8844:8901   */\n  swap3\n  pop\n  swap1\n  pop\n    /* \"#utility.yul\":8933:8937   */\n  dup2\n    /* \"#utility.yul\":8928:8931   */\n  dup5\n    /* \"#utility.yul\":8924:8938   */\n  div\n    /* \"#utility.yul\":8917:8922   */\n  dup2\n    /* \"#utility.yul\":8914:8939   */\n  gt\n    /* \"#utility.yul\":8911:8962   */\n  iszero\n  tag_185\n  jumpi\n    /* \"#utility.yul\":8942:8960   */\n  tag_186\n  tag_74\n  jump\t// in\ntag_186:\n    /* \"#utility.yul\":8911:8962   */\ntag_185:\n    /* \"#utility.yul\":8991:8995   */\n  dup2\n    /* \"#utility.yul\":8984:8989   */\n  dup2\n    /* \"#utility.yul\":8980:8996   */\n  mul\n    /* \"#utility.yul\":8971:8996   */\n  swap1\n  pop\n    /* \"#utility.yul\":7929:9002   */\ntag_171:\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9008:9094   */\ntag_78:\n    /* \"#utility.yul\":9043:9050   */\n  0x00\n    /* \"#utility.yul\":9083:9087   */\n  0xff\n    /* \"#utility.yul\":9076:9081   */\n  dup3\n    /* \"#utility.yul\":9072:9088   */\n  and\n    /* \"#utility.yul\":9061:9088   */\n  swap1\n  pop\n    /* \"#utility.yul\":9008:9094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9100:9381   */\ntag_22:\n    /* \"#utility.yul\":9158:9163   */\n  0x00\n    /* \"#utility.yul\":9182:9205   */\n  tag_189\n    /* \"#utility.yul\":9200:9204   */\n  dup3\n    /* \"#utility.yul\":9182:9205   */\n  tag_49\n  jump\t// in\ntag_189:\n    /* \"#utility.yul\":9174:9205   */\n  swap2\n  pop\n    /* \"#utility.yul\":9226:9251   */\n  tag_190\n    /* \"#utility.yul\":9242:9250   */\n  dup4\n    /* \"#utility.yul\":9226:9251   */\n  tag_78\n  jump\t// in\ntag_190:\n    /* \"#utility.yul\":9214:9251   */\n  swap3\n  pop\n    /* \"#utility.yul\":9270:9374   */\n  tag_191\n    /* \"#utility.yul\":9307:9373   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":9297:9305   */\n  dup5\n    /* \"#utility.yul\":9291:9295   */\n  dup5\n    /* \"#utility.yul\":9270:9374   */\n  tag_77\n  jump\t// in\ntag_191:\n    /* \"#utility.yul\":9261:9374   */\n  swap1\n  pop\n    /* \"#utility.yul\":9100:9381   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9387:9797   */\ntag_24:\n    /* \"#utility.yul\":9427:9434   */\n  0x00\n    /* \"#utility.yul\":9450:9470   */\n  tag_193\n    /* \"#utility.yul\":9468:9469   */\n  dup3\n    /* \"#utility.yul\":9450:9470   */\n  tag_49\n  jump\t// in\ntag_193:\n    /* \"#utility.yul\":9445:9470   */\n  swap2\n  pop\n    /* \"#utility.yul\":9484:9504   */\n  tag_194\n    /* \"#utility.yul\":9502:9503   */\n  dup4\n    /* \"#utility.yul\":9484:9504   */\n  tag_49\n  jump\t// in\ntag_194:\n    /* \"#utility.yul\":9479:9504   */\n  swap3\n  pop\n    /* \"#utility.yul\":9539:9540   */\n  dup3\n    /* \"#utility.yul\":9536:9537   */\n  dup3\n    /* \"#utility.yul\":9532:9541   */\n  mul\n    /* \"#utility.yul\":9561:9591   */\n  tag_195\n    /* \"#utility.yul\":9579:9590   */\n  dup2\n    /* \"#utility.yul\":9561:9591   */\n  tag_49\n  jump\t// in\ntag_195:\n    /* \"#utility.yul\":9550:9591   */\n  swap2\n  pop\n    /* \"#utility.yul\":9740:9741   */\n  dup3\n    /* \"#utility.yul\":9731:9738   */\n  dup3\n    /* \"#utility.yul\":9727:9742   */\n  div\n    /* \"#utility.yul\":9724:9725   */\n  dup5\n    /* \"#utility.yul\":9721:9743   */\n  eq\n    /* \"#utility.yul\":9701:9702   */\n  dup4\n    /* \"#utility.yul\":9694:9703   */\n  iszero\n    /* \"#utility.yul\":9674:9757   */\n  or\n    /* \"#utility.yul\":9651:9790   */\n  tag_196\n  jumpi\n    /* \"#utility.yul\":9770:9788   */\n  tag_197\n  tag_74\n  jump\t// in\ntag_197:\n    /* \"#utility.yul\":9651:9790   */\ntag_196:\n    /* \"#utility.yul\":9435:9797   */\n  pop\n    /* \"#utility.yul\":9387:9797   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":9803:9994   */\ntag_37:\n    /* \"#utility.yul\":9843:9846   */\n  0x00\n    /* \"#utility.yul\":9862:9882   */\n  tag_199\n    /* \"#utility.yul\":9880:9881   */\n  dup3\n    /* \"#utility.yul\":9862:9882   */\n  tag_49\n  jump\t// in\ntag_199:\n    /* \"#utility.yul\":9857:9882   */\n  swap2\n  pop\n    /* \"#utility.yul\":9896:9916   */\n  tag_200\n    /* \"#utility.yul\":9914:9915   */\n  dup4\n    /* \"#utility.yul\":9896:9916   */\n  tag_49\n  jump\t// in\ntag_200:\n    /* \"#utility.yul\":9891:9916   */\n  swap3\n  pop\n    /* \"#utility.yul\":9939:9940   */\n  dup3\n    /* \"#utility.yul\":9936:9937   */\n  dup3\n    /* \"#utility.yul\":9932:9941   */\n  add\n    /* \"#utility.yul\":9925:9941   */\n  swap1\n  pop\n    /* \"#utility.yul\":9960:9963   */\n  dup1\n    /* \"#utility.yul\":9957:9958   */\n  dup3\n    /* \"#utility.yul\":9954:9964   */\n  gt\n    /* \"#utility.yul\":9951:9987   */\n  iszero\n  tag_201\n  jumpi\n    /* \"#utility.yul\":9967:9985   */\n  tag_202\n  tag_74\n  jump\t// in\ntag_202:\n    /* \"#utility.yul\":9951:9987   */\ntag_201:\n    /* \"#utility.yul\":9803:9994   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10000:10118   */\ntag_79:\n    /* \"#utility.yul\":10087:10111   */\n  tag_204\n    /* \"#utility.yul\":10105:10110   */\n  dup2\n    /* \"#utility.yul\":10087:10111   */\n  tag_49\n  jump\t// in\ntag_204:\n    /* \"#utility.yul\":10082:10085   */\n  dup3\n    /* \"#utility.yul\":10075:10112   */\n  mstore\n    /* \"#utility.yul\":10000:10118   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10124:10566   */\ntag_41:\n    /* \"#utility.yul\":10273:10277   */\n  0x00\n    /* \"#utility.yul\":10311:10313   */\n  0x60\n    /* \"#utility.yul\":10300:10309   */\n  dup3\n    /* \"#utility.yul\":10296:10314   */\n  add\n    /* \"#utility.yul\":10288:10314   */\n  swap1\n  pop\n    /* \"#utility.yul\":10324:10395   */\n  tag_206\n    /* \"#utility.yul\":10392:10393   */\n  0x00\n    /* \"#utility.yul\":10381:10390   */\n  dup4\n    /* \"#utility.yul\":10377:10394   */\n  add\n    /* \"#utility.yul\":10368:10374   */\n  dup7\n    /* \"#utility.yul\":10324:10395   */\n  tag_73\n  jump\t// in\ntag_206:\n    /* \"#utility.yul\":10405:10477   */\n  tag_207\n    /* \"#utility.yul\":10473:10475   */\n  0x20\n    /* \"#utility.yul\":10462:10471   */\n  dup4\n    /* \"#utility.yul\":10458:10476   */\n  add\n    /* \"#utility.yul\":10449:10455   */\n  dup6\n    /* \"#utility.yul\":10405:10477   */\n  tag_79\n  jump\t// in\ntag_207:\n    /* \"#utility.yul\":10487:10559   */\n  tag_208\n    /* \"#utility.yul\":10555:10557   */\n  0x40\n    /* \"#utility.yul\":10544:10553   */\n  dup4\n    /* \"#utility.yul\":10540:10558   */\n  add\n    /* \"#utility.yul\":10531:10537   */\n  dup5\n    /* \"#utility.yul\":10487:10559   */\n  tag_79\n  jump\t// in\ntag_208:\n    /* \"#utility.yul\":10124:10566   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":10572:10794   */\ntag_45:\n    /* \"#utility.yul\":10665:10669   */\n  0x00\n    /* \"#utility.yul\":10703:10705   */\n  0x20\n    /* \"#utility.yul\":10692:10701   */\n  dup3\n    /* \"#utility.yul\":10688:10706   */\n  add\n    /* \"#utility.yul\":10680:10706   */\n  swap1\n  pop\n    /* \"#utility.yul\":10716:10787   */\n  tag_210\n    /* \"#utility.yul\":10784:10785   */\n  0x00\n    /* \"#utility.yul\":10773:10782   */\n  dup4\n    /* \"#utility.yul\":10769:10786   */\n  add\n    /* \"#utility.yul\":10760:10766   */\n  dup5\n    /* \"#utility.yul\":10716:10787   */\n  tag_79\n  jump\t// in\ntag_210:\n    /* \"#utility.yul\":10572:10794   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/FCODE_flattened.sol\":24932:25609  contract FCODE is ERC20, Ownable {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FCODE_flattened.sol\":24932:25609  contract FCODE is ERC20, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x70a08231\n      gt\n      tag_19\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb69ef8a8\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_18\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x70a08231\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x23b872dd\n      gt\n      tag_21\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x42966c68\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0xf714ce\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/FCODE_flattened.sol\":25345:25607  function withdraw(uint amount, address payable destAddress) public {... */\n    tag_3:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      tag_25\n      jump\t// in\n    tag_22:\n      stop\n        /* \"contracts/FCODE_flattened.sol\":12679:12768  function name() public view virtual returns (string memory) {... */\n    tag_4:\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      tag_28\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":14898:15084  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":13749:13846  function totalSupply() public view virtual returns (uint256) {... */\n    tag_6:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":15676:15920  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_40\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":13607:13689  function decimals() public view virtual returns (uint8) {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":25157:25250  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_9:\n      tag_49\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_50\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_50:\n      tag_51\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/FCODE_flattened.sol\":25260:25339  function burn(uint256 amount) public {... */\n    tag_10:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/FCODE_flattened.sol\":13904:14020  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_11:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":24064:24165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      stop\n        /* \"contracts/FCODE_flattened.sol\":23409:23494  function owner() public view virtual returns (address) {... */\n    tag_13:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":12881:12974  function symbol() public view virtual returns (string memory) {... */\n    tag_14:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":14215:14393  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_15:\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_71:\n      tag_72\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":24971:24993  uint256 public balance */\n    tag_16:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":14451:14591  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FCODE_flattened.sol\":24314:24529  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_18:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_83:\n      tag_84\n      jump\t// in\n    tag_82:\n      stop\n        /* \"contracts/FCODE_flattened.sol\":25345:25607  function withdraw(uint amount, address payable destAddress) public {... */\n    tag_25:\n        /* \"contracts/FCODE_flattened.sol\":25442:25449  owner() */\n      tag_86\n        /* \"contracts/FCODE_flattened.sol\":25442:25447  owner */\n      tag_64\n        /* \"contracts/FCODE_flattened.sol\":25442:25449  owner() */\n      jump\t// in\n    tag_86:\n        /* \"contracts/FCODE_flattened.sol\":25430:25449  msg.sender==owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":25430:25440  msg.sender */\n      caller\n        /* \"contracts/FCODE_flattened.sol\":25430:25449  msg.sender==owner() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/FCODE_flattened.sol\":25422:25478  require(msg.sender==owner(), \"Only owner can withdraw.\") */\n      tag_87\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_88\n      swap1\n      tag_89\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_87:\n        /* \"contracts/FCODE_flattened.sol\":25506:25513  balance */\n      sload(0x06)\n        /* \"contracts/FCODE_flattened.sol\":25496:25502  amount */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":25496:25513  amount <= balance */\n      gt\n      iszero\n        /* \"contracts/FCODE_flattened.sol\":25488:25537  require(amount <= balance, \"Insufficient funds.\") */\n      tag_90\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_91\n      swap1\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_90:\n        /* \"contracts/FCODE_flattened.sol\":25547:25558  destAddress */\n      dup1\n        /* \"contracts/FCODE_flattened.sol\":25547:25567  destAddress.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":25547:25575  destAddress.transfer(amount) */\n      0x08fc\n        /* \"contracts/FCODE_flattened.sol\":25568:25574  amount */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":25547:25575  destAddress.transfer(amount) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_94:\n      pop\n        /* \"contracts/FCODE_flattened.sol\":25594:25600  amount */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":25585:25592  balance */\n      0x06\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":25585:25600  balance-=amount */\n      dup3\n      dup3\n      sload\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FCODE_flattened.sol\":25345:25607  function withdraw(uint amount, address payable destAddress) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":12679:12768  function name() public view virtual returns (string memory) {... */\n    tag_27:\n        /* \"contracts/FCODE_flattened.sol\":12724:12737  string memory */\n      0x60\n        /* \"contracts/FCODE_flattened.sol\":12756:12761  _name */\n      0x03\n        /* \"contracts/FCODE_flattened.sol\":12749:12761  return _name */\n      dup1\n      sload\n      tag_98\n      swap1\n      tag_99\n      jump\t// in\n    tag_98:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_100\n      swap1\n      tag_99\n      jump\t// in\n    tag_100:\n      dup1\n      iszero\n      tag_101\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_102\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_101)\n    tag_102:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_103:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_103\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_101:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":12679:12768  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":14898:15084  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_33:\n        /* \"contracts/FCODE_flattened.sol\":14971:14975  bool */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":14987:15000  address owner */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":15003:15015  _msgSender() */\n      tag_105\n        /* \"contracts/FCODE_flattened.sol\":15003:15013  _msgSender */\n      tag_106\n        /* \"contracts/FCODE_flattened.sol\":15003:15015  _msgSender() */\n      jump\t// in\n    tag_105:\n        /* \"contracts/FCODE_flattened.sol\":14987:15015  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":15025:15056  _approve(owner, spender, value) */\n      tag_107\n        /* \"contracts/FCODE_flattened.sol\":15034:15039  owner */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":15041:15048  spender */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":15050:15055  value */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":15025:15033  _approve */\n      tag_108\n        /* \"contracts/FCODE_flattened.sol\":15025:15056  _approve(owner, spender, value) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/FCODE_flattened.sol\":15073:15077  true */\n      0x01\n        /* \"contracts/FCODE_flattened.sol\":15066:15077  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/FCODE_flattened.sol\":14898:15084  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":13749:13846  function totalSupply() public view virtual returns (uint256) {... */\n    tag_37:\n        /* \"contracts/FCODE_flattened.sol\":13801:13808  uint256 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":13827:13839  _totalSupply */\n      sload(0x02)\n        /* \"contracts/FCODE_flattened.sol\":13820:13839  return _totalSupply */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":13749:13846  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":15676:15920  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_43:\n        /* \"contracts/FCODE_flattened.sol\":15763:15767  bool */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":15779:15794  address spender */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":15797:15809  _msgSender() */\n      tag_111\n        /* \"contracts/FCODE_flattened.sol\":15797:15807  _msgSender */\n      tag_106\n        /* \"contracts/FCODE_flattened.sol\":15797:15809  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/FCODE_flattened.sol\":15779:15809  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":15819:15856  _spendAllowance(from, spender, value) */\n      tag_112\n        /* \"contracts/FCODE_flattened.sol\":15835:15839  from */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":15841:15848  spender */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":15850:15855  value */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":15819:15834  _spendAllowance */\n      tag_113\n        /* \"contracts/FCODE_flattened.sol\":15819:15856  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_112:\n        /* \"contracts/FCODE_flattened.sol\":15866:15892  _transfer(from, to, value) */\n      tag_114\n        /* \"contracts/FCODE_flattened.sol\":15876:15880  from */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":15882:15884  to */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":15886:15891  value */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":15866:15875  _transfer */\n      tag_115\n        /* \"contracts/FCODE_flattened.sol\":15866:15892  _transfer(from, to, value) */\n      jump\t// in\n    tag_114:\n        /* \"contracts/FCODE_flattened.sol\":15909:15913  true */\n      0x01\n        /* \"contracts/FCODE_flattened.sol\":15902:15913  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/FCODE_flattened.sol\":15676:15920  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":13607:13689  function decimals() public view virtual returns (uint8) {... */\n    tag_46:\n        /* \"contracts/FCODE_flattened.sol\":13656:13661  uint8 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":13680:13682  18 */\n      0x12\n        /* \"contracts/FCODE_flattened.sol\":13673:13682  return 18 */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":13607:13689  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":25157:25250  function mint(address to, uint256 amount) public onlyOwner {... */\n    tag_51:\n        /* \"contracts/FCODE_flattened.sol\":23302:23315  _checkOwner() */\n      tag_118\n        /* \"contracts/FCODE_flattened.sol\":23302:23313  _checkOwner */\n      tag_119\n        /* \"contracts/FCODE_flattened.sol\":23302:23315  _checkOwner() */\n      jump\t// in\n    tag_118:\n        /* \"contracts/FCODE_flattened.sol\":25226:25243  _mint(to, amount) */\n      tag_121\n        /* \"contracts/FCODE_flattened.sol\":25232:25234  to */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":25236:25242  amount */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":25226:25231  _mint */\n      tag_122\n        /* \"contracts/FCODE_flattened.sol\":25226:25243  _mint(to, amount) */\n      jump\t// in\n    tag_121:\n        /* \"contracts/FCODE_flattened.sol\":25157:25250  function mint(address to, uint256 amount) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":25260:25339  function burn(uint256 amount) public {... */\n    tag_55:\n        /* \"contracts/FCODE_flattened.sol\":25307:25332  _burn(msg.sender, amount) */\n      tag_124\n        /* \"contracts/FCODE_flattened.sol\":25313:25323  msg.sender */\n      caller\n        /* \"contracts/FCODE_flattened.sol\":25325:25331  amount */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":25307:25312  _burn */\n      tag_125\n        /* \"contracts/FCODE_flattened.sol\":25307:25332  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/FCODE_flattened.sol\":25260:25339  function burn(uint256 amount) public {... */\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":13904:14020  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_59:\n        /* \"contracts/FCODE_flattened.sol\":13969:13976  uint256 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":13995:14004  _balances */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":13995:14013  _balances[account] */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":14005:14012  account */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":13995:14013  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FCODE_flattened.sol\":13988:14013  return _balances[account] */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":13904:14020  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":24064:24165  function renounceOwnership() public virtual onlyOwner {... */\n    tag_62:\n        /* \"contracts/FCODE_flattened.sol\":23302:23315  _checkOwner() */\n      tag_128\n        /* \"contracts/FCODE_flattened.sol\":23302:23313  _checkOwner */\n      tag_119\n        /* \"contracts/FCODE_flattened.sol\":23302:23315  _checkOwner() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/FCODE_flattened.sol\":24128:24158  _transferOwnership(address(0)) */\n      tag_130\n        /* \"contracts/FCODE_flattened.sol\":24155:24156  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":24128:24146  _transferOwnership */\n      tag_131\n        /* \"contracts/FCODE_flattened.sol\":24128:24158  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/FCODE_flattened.sol\":24064:24165  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":23409:23494  function owner() public view virtual returns (address) {... */\n    tag_64:\n        /* \"contracts/FCODE_flattened.sol\":23455:23462  address */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":23481:23487  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":23474:23487  return _owner */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":23409:23494  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":12881:12974  function symbol() public view virtual returns (string memory) {... */\n    tag_68:\n        /* \"contracts/FCODE_flattened.sol\":12928:12941  string memory */\n      0x60\n        /* \"contracts/FCODE_flattened.sol\":12960:12967  _symbol */\n      0x04\n        /* \"contracts/FCODE_flattened.sol\":12953:12967  return _symbol */\n      dup1\n      sload\n      tag_134\n      swap1\n      tag_99\n      jump\t// in\n    tag_134:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_135\n      swap1\n      tag_99\n      jump\t// in\n    tag_135:\n      dup1\n      iszero\n      tag_136\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_137\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_136)\n    tag_137:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_138:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_138\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":12881:12974  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":14215:14393  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_72:\n        /* \"contracts/FCODE_flattened.sol\":14284:14288  bool */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":14300:14313  address owner */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":14316:14328  _msgSender() */\n      tag_140\n        /* \"contracts/FCODE_flattened.sol\":14316:14326  _msgSender */\n      tag_106\n        /* \"contracts/FCODE_flattened.sol\":14316:14328  _msgSender() */\n      jump\t// in\n    tag_140:\n        /* \"contracts/FCODE_flattened.sol\":14300:14328  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":14338:14365  _transfer(owner, to, value) */\n      tag_141\n        /* \"contracts/FCODE_flattened.sol\":14348:14353  owner */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":14355:14357  to */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":14359:14364  value */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":14338:14347  _transfer */\n      tag_115\n        /* \"contracts/FCODE_flattened.sol\":14338:14365  _transfer(owner, to, value) */\n      jump\t// in\n    tag_141:\n        /* \"contracts/FCODE_flattened.sol\":14382:14386  true */\n      0x01\n        /* \"contracts/FCODE_flattened.sol\":14375:14386  return true */\n      swap2\n      pop\n      pop\n        /* \"contracts/FCODE_flattened.sol\":14215:14393  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":24971:24993  uint256 public balance */\n    tag_75:\n      sload(0x06)\n      dup2\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":14451:14591  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_80:\n        /* \"contracts/FCODE_flattened.sol\":14531:14538  uint256 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":14557:14568  _allowances */\n      0x01\n        /* \"contracts/FCODE_flattened.sol\":14557:14575  _allowances[owner] */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":14569:14574  owner */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":14557:14575  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FCODE_flattened.sol\":14557:14584  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":14576:14583  spender */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":14557:14584  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FCODE_flattened.sol\":14550:14584  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":14451:14591  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":24314:24529  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_84:\n        /* \"contracts/FCODE_flattened.sol\":23302:23315  _checkOwner() */\n      tag_144\n        /* \"contracts/FCODE_flattened.sol\":23302:23313  _checkOwner */\n      tag_119\n        /* \"contracts/FCODE_flattened.sol\":23302:23315  _checkOwner() */\n      jump\t// in\n    tag_144:\n        /* \"contracts/FCODE_flattened.sol\":24418:24419  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":24398:24420  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":24398:24406  newOwner */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":24398:24420  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FCODE_flattened.sol\":24394:24485  if (newOwner == address(0)) {... */\n      tag_146\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":24471:24472  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":24443:24474  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FCODE_flattened.sol\":24394:24485  if (newOwner == address(0)) {... */\n    tag_146:\n        /* \"contracts/FCODE_flattened.sol\":24494:24522  _transferOwnership(newOwner) */\n      tag_148\n        /* \"contracts/FCODE_flattened.sol\":24513:24521  newOwner */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":24494:24512  _transferOwnership */\n      tag_131\n        /* \"contracts/FCODE_flattened.sol\":24494:24522  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/FCODE_flattened.sol\":24314:24529  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":4208:4304  function _msgSender() internal view virtual returns (address) {... */\n    tag_106:\n        /* \"contracts/FCODE_flattened.sol\":4261:4268  address */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":4287:4297  msg.sender */\n      caller\n        /* \"contracts/FCODE_flattened.sol\":4280:4297  return msg.sender */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":4208:4304  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":19626:19754  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_108:\n        /* \"contracts/FCODE_flattened.sol\":19710:19747  _approve(owner, spender, value, true) */\n      tag_151\n        /* \"contracts/FCODE_flattened.sol\":19719:19724  owner */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":19726:19733  spender */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":19735:19740  value */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":19742:19746  true */\n      0x01\n        /* \"contracts/FCODE_flattened.sol\":19710:19718  _approve */\n      tag_152\n        /* \"contracts/FCODE_flattened.sol\":19710:19747  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_151:\n        /* \"contracts/FCODE_flattened.sol\":19626:19754  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":21315:21791  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_113:\n        /* \"contracts/FCODE_flattened.sol\":21414:21438  uint256 currentAllowance */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":21441:21466  allowance(owner, spender) */\n      tag_154\n        /* \"contracts/FCODE_flattened.sol\":21451:21456  owner */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":21458:21465  spender */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":21441:21450  allowance */\n      tag_80\n        /* \"contracts/FCODE_flattened.sol\":21441:21466  allowance(owner, spender) */\n      jump\t// in\n    tag_154:\n        /* \"contracts/FCODE_flattened.sol\":21414:21466  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":21499:21516  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"contracts/FCODE_flattened.sol\":21480:21496  currentAllowance */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":21480:21516  currentAllowance < type(uint256).max */\n      lt\n        /* \"contracts/FCODE_flattened.sol\":21476:21785  if (currentAllowance < type(uint256).max) {... */\n      iszero\n      tag_155\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":21555:21560  value */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":21536:21552  currentAllowance */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":21536:21560  currentAllowance < value */\n      lt\n        /* \"contracts/FCODE_flattened.sol\":21532:21662  if (currentAllowance < value) {... */\n      iszero\n      tag_156\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":21614:21621  spender */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":21623:21639  currentAllowance */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":21641:21646  value */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":21587:21647  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_157\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FCODE_flattened.sol\":21532:21662  if (currentAllowance < value) {... */\n    tag_156:\n        /* \"contracts/FCODE_flattened.sol\":21703:21760  _approve(owner, spender, currentAllowance - value, false) */\n      tag_159\n        /* \"contracts/FCODE_flattened.sol\":21712:21717  owner */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":21719:21726  spender */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":21747:21752  value */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":21728:21744  currentAllowance */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":21728:21752  currentAllowance - value */\n      sub\n        /* \"contracts/FCODE_flattened.sol\":21754:21759  false */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":21703:21711  _approve */\n      tag_152\n        /* \"contracts/FCODE_flattened.sol\":21703:21760  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/FCODE_flattened.sol\":21476:21785  if (currentAllowance < type(uint256).max) {... */\n    tag_155:\n        /* \"contracts/FCODE_flattened.sol\":21404:21791  {... */\n      pop\n        /* \"contracts/FCODE_flattened.sol\":21315:21791  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":16293:16593  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_115:\n        /* \"contracts/FCODE_flattened.sol\":16392:16393  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":16376:16394  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":16376:16380  from */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":16376:16394  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FCODE_flattened.sol\":16372:16458  if (from == address(0)) {... */\n      tag_161\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":16444:16445  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":16417:16447  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FCODE_flattened.sol\":16372:16458  if (from == address(0)) {... */\n    tag_161:\n        /* \"contracts/FCODE_flattened.sol\":16485:16486  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":16471:16487  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":16471:16473  to */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":16471:16487  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FCODE_flattened.sol\":16467:16553  if (to == address(0)) {... */\n      tag_163\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":16539:16540  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":16510:16542  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_164\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_164:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FCODE_flattened.sol\":16467:16553  if (to == address(0)) {... */\n    tag_163:\n        /* \"contracts/FCODE_flattened.sol\":16562:16586  _update(from, to, value) */\n      tag_165\n        /* \"contracts/FCODE_flattened.sol\":16570:16574  from */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":16576:16578  to */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":16580:16585  value */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":16562:16569  _update */\n      tag_166\n        /* \"contracts/FCODE_flattened.sol\":16562:16586  _update(from, to, value) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/FCODE_flattened.sol\":16293:16593  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":23567:23729  function _checkOwner() internal view virtual {... */\n    tag_119:\n        /* \"contracts/FCODE_flattened.sol\":23637:23649  _msgSender() */\n      tag_168\n        /* \"contracts/FCODE_flattened.sol\":23637:23647  _msgSender */\n      tag_106\n        /* \"contracts/FCODE_flattened.sol\":23637:23649  _msgSender() */\n      jump\t// in\n    tag_168:\n        /* \"contracts/FCODE_flattened.sol\":23626:23649  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":23626:23633  owner() */\n      tag_169\n        /* \"contracts/FCODE_flattened.sol\":23626:23631  owner */\n      tag_64\n        /* \"contracts/FCODE_flattened.sol\":23626:23633  owner() */\n      jump\t// in\n    tag_169:\n        /* \"contracts/FCODE_flattened.sol\":23626:23649  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/FCODE_flattened.sol\":23622:23723  if (owner() != _msgSender()) {... */\n      tag_170\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":23699:23711  _msgSender() */\n      tag_171\n        /* \"contracts/FCODE_flattened.sol\":23699:23709  _msgSender */\n      tag_106\n        /* \"contracts/FCODE_flattened.sol\":23699:23711  _msgSender() */\n      jump\t// in\n    tag_171:\n        /* \"contracts/FCODE_flattened.sol\":23672:23712  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_172\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FCODE_flattened.sol\":23622:23723  if (owner() != _msgSender()) {... */\n    tag_170:\n        /* \"contracts/FCODE_flattened.sol\":23567:23729  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":18358:18566  function _mint(address account, uint256 value) internal {... */\n    tag_122:\n        /* \"contracts/FCODE_flattened.sol\":18447:18448  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":18428:18449  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":18428:18435  account */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":18428:18449  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FCODE_flattened.sol\":18424:18515  if (account == address(0)) {... */\n      tag_174\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":18501:18502  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":18472:18504  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_175\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FCODE_flattened.sol\":18424:18515  if (account == address(0)) {... */\n    tag_174:\n        /* \"contracts/FCODE_flattened.sol\":18524:18559  _update(address(0), account, value) */\n      tag_176\n        /* \"contracts/FCODE_flattened.sol\":18540:18541  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":18544:18551  account */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":18553:18558  value */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":18524:18531  _update */\n      tag_166\n        /* \"contracts/FCODE_flattened.sol\":18524:18559  _update(address(0), account, value) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/FCODE_flattened.sol\":18358:18566  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":18884:19090  function _burn(address account, uint256 value) internal {... */\n    tag_125:\n        /* \"contracts/FCODE_flattened.sol\":18973:18974  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":18954:18975  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":18954:18961  account */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":18954:18975  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FCODE_flattened.sol\":18950:19039  if (account == address(0)) {... */\n      tag_178\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":19025:19026  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":18998:19028  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FCODE_flattened.sol\":18950:19039  if (account == address(0)) {... */\n    tag_178:\n        /* \"contracts/FCODE_flattened.sol\":19048:19083  _update(account, address(0), value) */\n      tag_180\n        /* \"contracts/FCODE_flattened.sol\":19056:19063  account */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":19073:19074  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":19077:19082  value */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":19048:19055  _update */\n      tag_166\n        /* \"contracts/FCODE_flattened.sol\":19048:19083  _update(account, address(0), value) */\n      jump\t// in\n    tag_180:\n        /* \"contracts/FCODE_flattened.sol\":18884:19090  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":24683:24870  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_131:\n        /* \"contracts/FCODE_flattened.sol\":24756:24772  address oldOwner */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":24775:24781  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":24756:24781  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":24800:24808  newOwner */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":24791:24797  _owner */\n      0x05\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":24791:24808  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FCODE_flattened.sol\":24854:24862  newOwner */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":24823:24863  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":24844:24852  oldOwner */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":24823:24863  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FCODE_flattened.sol\":24746:24870  {... */\n      pop\n        /* \"contracts/FCODE_flattened.sol\":24683:24870  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":20601:21033  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_152:\n        /* \"contracts/FCODE_flattened.sol\":20730:20731  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":20713:20732  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":20713:20718  owner */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":20713:20732  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FCODE_flattened.sol\":20709:20798  if (owner == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":20784:20785  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":20755:20787  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FCODE_flattened.sol\":20709:20798  if (owner == address(0)) {... */\n    tag_183:\n        /* \"contracts/FCODE_flattened.sol\":20830:20831  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":20811:20832  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":20811:20818  spender */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":20811:20832  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FCODE_flattened.sol\":20807:20897  if (spender == address(0)) {... */\n      tag_185\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":20883:20884  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":20855:20886  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FCODE_flattened.sol\":20807:20897  if (spender == address(0)) {... */\n    tag_185:\n        /* \"contracts/FCODE_flattened.sol\":20936:20941  value */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":20906:20917  _allowances */\n      0x01\n        /* \"contracts/FCODE_flattened.sol\":20906:20924  _allowances[owner] */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":20918:20923  owner */\n      dup7\n        /* \"contracts/FCODE_flattened.sol\":20906:20924  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FCODE_flattened.sol\":20906:20933  _allowances[owner][spender] */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":20925:20932  spender */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":20906:20933  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FCODE_flattened.sol\":20906:20941  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FCODE_flattened.sol\":20955:20964  emitEvent */\n      dup1\n        /* \"contracts/FCODE_flattened.sol\":20951:21027  if (emitEvent) {... */\n      iszero\n      tag_187\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":21001:21008  spender */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":20985:21016  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":20994:20999  owner */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":20985:21016  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"contracts/FCODE_flattened.sol\":21010:21015  value */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":20985:21016  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_188\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_188:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FCODE_flattened.sol\":20951:21027  if (emitEvent) {... */\n    tag_187:\n        /* \"contracts/FCODE_flattened.sol\":20601:21033  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FCODE_flattened.sol\":16908:18015  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_166:\n        /* \"contracts/FCODE_flattened.sol\":17013:17014  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":16997:17015  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":16997:17001  from */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":16997:17015  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FCODE_flattened.sol\":16993:17533  if (from == address(0)) {... */\n      tag_190\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":17149:17154  value */\n      dup1\n        /* \"contracts/FCODE_flattened.sol\":17133:17145  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17133:17154  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_191\n      swap2\n      swap1\n      tag_192\n      jump\t// in\n    tag_191:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FCODE_flattened.sol\":16993:17533  if (from == address(0)) {... */\n      jump(tag_193)\n    tag_190:\n        /* \"contracts/FCODE_flattened.sol\":17185:17204  uint256 fromBalance */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17207:17216  _balances */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17207:17222  _balances[from] */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17217:17221  from */\n      dup6\n        /* \"contracts/FCODE_flattened.sol\":17207:17222  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/FCODE_flattened.sol\":17185:17222  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"contracts/FCODE_flattened.sol\":17254:17259  value */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":17240:17251  fromBalance */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":17240:17259  fromBalance < value */\n      lt\n        /* \"contracts/FCODE_flattened.sol\":17236:17351  if (fromBalance < value) {... */\n      iszero\n      tag_194\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":17311:17315  from */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":17317:17328  fromBalance */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":17330:17335  value */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":17286:17336  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_195\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_195:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/FCODE_flattened.sol\":17236:17351  if (fromBalance < value) {... */\n    tag_194:\n        /* \"contracts/FCODE_flattened.sol\":17503:17508  value */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":17489:17500  fromBalance */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":17489:17508  fromBalance - value */\n      sub\n        /* \"contracts/FCODE_flattened.sol\":17471:17480  _balances */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17471:17486  _balances[from] */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17481:17485  from */\n      dup7\n        /* \"contracts/FCODE_flattened.sol\":17471:17486  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FCODE_flattened.sol\":17471:17508  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FCODE_flattened.sol\":17171:17533  {... */\n      pop\n        /* \"contracts/FCODE_flattened.sol\":16993:17533  if (from == address(0)) {... */\n    tag_193:\n        /* \"contracts/FCODE_flattened.sol\":17561:17562  0 */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17547:17563  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":17547:17549  to */\n      dup3\n        /* \"contracts/FCODE_flattened.sol\":17547:17563  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FCODE_flattened.sol\":17543:17968  if (to == address(0)) {... */\n      tag_196\n      jumpi\n        /* \"contracts/FCODE_flattened.sol\":17726:17731  value */\n      dup1\n        /* \"contracts/FCODE_flattened.sol\":17710:17722  _totalSupply */\n      0x02\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17710:17731  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FCODE_flattened.sol\":17543:17968  if (to == address(0)) {... */\n      jump(tag_197)\n    tag_196:\n        /* \"contracts/FCODE_flattened.sol\":17938:17943  value */\n      dup1\n        /* \"contracts/FCODE_flattened.sol\":17921:17930  _balances */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17921:17934  _balances[to] */\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17931:17933  to */\n      dup5\n        /* \"contracts/FCODE_flattened.sol\":17921:17934  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/FCODE_flattened.sol\":17921:17943  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FCODE_flattened.sol\":17543:17968  if (to == address(0)) {... */\n    tag_197:\n        /* \"contracts/FCODE_flattened.sol\":17998:18000  to */\n      dup2\n        /* \"contracts/FCODE_flattened.sol\":17983:18008  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FCODE_flattened.sol\":17992:17996  from */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":17983:18008  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"contracts/FCODE_flattened.sol\":18002:18007  value */\n      dup4\n        /* \"contracts/FCODE_flattened.sol\":17983:18008  Transfer(from, to, value) */\n      mload(0x40)\n      tag_198\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/FCODE_flattened.sol\":16908:18015  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_200:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_202:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_203:\n        /* \"#utility.yul\":490:514   */\n      tag_235\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_202\n      jump\t// in\n    tag_235:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_236\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_236:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_204:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_238\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_203\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:816   */\n    tag_205:\n        /* \"#utility.yul\":727:734   */\n      0x00\n        /* \"#utility.yul\":767:809   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":760:765   */\n      dup3\n        /* \"#utility.yul\":756:810   */\n      and\n        /* \"#utility.yul\":745:810   */\n      swap1\n      pop\n        /* \"#utility.yul\":690:816   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":822:926   */\n    tag_206:\n        /* \"#utility.yul\":867:874   */\n      0x00\n        /* \"#utility.yul\":896:920   */\n      tag_241\n        /* \"#utility.yul\":914:919   */\n      dup3\n        /* \"#utility.yul\":896:920   */\n      tag_205\n      jump\t// in\n    tag_241:\n        /* \"#utility.yul\":885:920   */\n      swap1\n      pop\n        /* \"#utility.yul\":822:926   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":932:1070   */\n    tag_207:\n        /* \"#utility.yul\":1013:1045   */\n      tag_243\n        /* \"#utility.yul\":1039:1044   */\n      dup2\n        /* \"#utility.yul\":1013:1045   */\n      tag_206\n      jump\t// in\n    tag_243:\n        /* \"#utility.yul\":1006:1011   */\n      dup2\n        /* \"#utility.yul\":1003:1046   */\n      eq\n        /* \"#utility.yul\":993:1064   */\n      tag_244\n      jumpi\n        /* \"#utility.yul\":1060:1061   */\n      0x00\n        /* \"#utility.yul\":1057:1058   */\n      0x00\n        /* \"#utility.yul\":1050:1062   */\n      revert\n        /* \"#utility.yul\":993:1064   */\n    tag_244:\n        /* \"#utility.yul\":932:1070   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1076:1231   */\n    tag_208:\n        /* \"#utility.yul\":1130:1135   */\n      0x00\n        /* \"#utility.yul\":1168:1174   */\n      dup2\n        /* \"#utility.yul\":1155:1175   */\n      calldataload\n        /* \"#utility.yul\":1146:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1184:1225   */\n      tag_246\n        /* \"#utility.yul\":1219:1224   */\n      dup2\n        /* \"#utility.yul\":1184:1225   */\n      tag_207\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":1076:1231   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1237:1727   */\n    tag_24:\n        /* \"#utility.yul\":1313:1319   */\n      0x00\n        /* \"#utility.yul\":1321:1327   */\n      0x00\n        /* \"#utility.yul\":1370:1372   */\n      0x40\n        /* \"#utility.yul\":1358:1367   */\n      dup4\n        /* \"#utility.yul\":1349:1356   */\n      dup6\n        /* \"#utility.yul\":1345:1368   */\n      sub\n        /* \"#utility.yul\":1341:1373   */\n      slt\n        /* \"#utility.yul\":1338:1457   */\n      iszero\n      tag_248\n      jumpi\n        /* \"#utility.yul\":1376:1455   */\n      tag_249\n      tag_200\n      jump\t// in\n    tag_249:\n        /* \"#utility.yul\":1338:1457   */\n    tag_248:\n        /* \"#utility.yul\":1496:1497   */\n      0x00\n        /* \"#utility.yul\":1521:1574   */\n      tag_250\n        /* \"#utility.yul\":1566:1573   */\n      dup6\n        /* \"#utility.yul\":1557:1563   */\n      dup3\n        /* \"#utility.yul\":1546:1555   */\n      dup7\n        /* \"#utility.yul\":1542:1564   */\n      add\n        /* \"#utility.yul\":1521:1574   */\n      tag_204\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":1511:1574   */\n      swap3\n      pop\n        /* \"#utility.yul\":1467:1584   */\n      pop\n        /* \"#utility.yul\":1623:1625   */\n      0x20\n        /* \"#utility.yul\":1649:1710   */\n      tag_251\n        /* \"#utility.yul\":1702:1709   */\n      dup6\n        /* \"#utility.yul\":1693:1699   */\n      dup3\n        /* \"#utility.yul\":1682:1691   */\n      dup7\n        /* \"#utility.yul\":1678:1700   */\n      add\n        /* \"#utility.yul\":1649:1710   */\n      tag_208\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":1639:1710   */\n      swap2\n      pop\n        /* \"#utility.yul\":1594:1720   */\n      pop\n        /* \"#utility.yul\":1237:1727   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1733:1832   */\n    tag_209:\n        /* \"#utility.yul\":1785:1791   */\n      0x00\n        /* \"#utility.yul\":1819:1824   */\n      dup2\n        /* \"#utility.yul\":1813:1825   */\n      mload\n        /* \"#utility.yul\":1803:1825   */\n      swap1\n      pop\n        /* \"#utility.yul\":1733:1832   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1838:2007   */\n    tag_210:\n        /* \"#utility.yul\":1922:1933   */\n      0x00\n        /* \"#utility.yul\":1956:1962   */\n      dup3\n        /* \"#utility.yul\":1951:1954   */\n      dup3\n        /* \"#utility.yul\":1944:1963   */\n      mstore\n        /* \"#utility.yul\":1996:2000   */\n      0x20\n        /* \"#utility.yul\":1991:1994   */\n      dup3\n        /* \"#utility.yul\":1987:2001   */\n      add\n        /* \"#utility.yul\":1972:2001   */\n      swap1\n      pop\n        /* \"#utility.yul\":1838:2007   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2013:2152   */\n    tag_211:\n        /* \"#utility.yul\":2102:2108   */\n      dup3\n        /* \"#utility.yul\":2097:2100   */\n      dup2\n        /* \"#utility.yul\":2092:2095   */\n      dup4\n        /* \"#utility.yul\":2086:2109   */\n      mcopy\n        /* \"#utility.yul\":2143:2144   */\n      0x00\n        /* \"#utility.yul\":2134:2140   */\n      dup4\n        /* \"#utility.yul\":2129:2132   */\n      dup4\n        /* \"#utility.yul\":2125:2141   */\n      add\n        /* \"#utility.yul\":2118:2145   */\n      mstore\n        /* \"#utility.yul\":2013:2152   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2158:2260   */\n    tag_212:\n        /* \"#utility.yul\":2199:2205   */\n      0x00\n        /* \"#utility.yul\":2250:2252   */\n      0x1f\n        /* \"#utility.yul\":2246:2253   */\n      not\n        /* \"#utility.yul\":2241:2243   */\n      0x1f\n        /* \"#utility.yul\":2234:2239   */\n      dup4\n        /* \"#utility.yul\":2230:2244   */\n      add\n        /* \"#utility.yul\":2226:2254   */\n      and\n        /* \"#utility.yul\":2216:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2158:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2643   */\n    tag_213:\n        /* \"#utility.yul\":2354:2357   */\n      0x00\n        /* \"#utility.yul\":2382:2421   */\n      tag_257\n        /* \"#utility.yul\":2415:2420   */\n      dup3\n        /* \"#utility.yul\":2382:2421   */\n      tag_209\n      jump\t// in\n    tag_257:\n        /* \"#utility.yul\":2437:2508   */\n      tag_258\n        /* \"#utility.yul\":2501:2507   */\n      dup2\n        /* \"#utility.yul\":2496:2499   */\n      dup6\n        /* \"#utility.yul\":2437:2508   */\n      tag_210\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":2430:2508   */\n      swap4\n      pop\n        /* \"#utility.yul\":2517:2582   */\n      tag_259\n        /* \"#utility.yul\":2575:2581   */\n      dup2\n        /* \"#utility.yul\":2570:2573   */\n      dup6\n        /* \"#utility.yul\":2563:2567   */\n      0x20\n        /* \"#utility.yul\":2556:2561   */\n      dup7\n        /* \"#utility.yul\":2552:2568   */\n      add\n        /* \"#utility.yul\":2517:2582   */\n      tag_211\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2607:2636   */\n      tag_260\n        /* \"#utility.yul\":2629:2635   */\n      dup2\n        /* \"#utility.yul\":2607:2636   */\n      tag_212\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2602:2605   */\n      dup5\n        /* \"#utility.yul\":2598:2637   */\n      add\n        /* \"#utility.yul\":2591:2637   */\n      swap2\n      pop\n        /* \"#utility.yul\":2358:2643   */\n      pop\n        /* \"#utility.yul\":2266:2643   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2649:2962   */\n    tag_29:\n        /* \"#utility.yul\":2762:2766   */\n      0x00\n        /* \"#utility.yul\":2800:2802   */\n      0x20\n        /* \"#utility.yul\":2789:2798   */\n      dup3\n        /* \"#utility.yul\":2785:2803   */\n      add\n        /* \"#utility.yul\":2777:2803   */\n      swap1\n      pop\n        /* \"#utility.yul\":2849:2858   */\n      dup2\n        /* \"#utility.yul\":2843:2847   */\n      dup2\n        /* \"#utility.yul\":2839:2859   */\n      sub\n        /* \"#utility.yul\":2835:2836   */\n      0x00\n        /* \"#utility.yul\":2824:2833   */\n      dup4\n        /* \"#utility.yul\":2820:2837   */\n      add\n        /* \"#utility.yul\":2813:2860   */\n      mstore\n        /* \"#utility.yul\":2877:2955   */\n      tag_262\n        /* \"#utility.yul\":2950:2954   */\n      dup2\n        /* \"#utility.yul\":2941:2947   */\n      dup5\n        /* \"#utility.yul\":2877:2955   */\n      tag_213\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":2869:2955   */\n      swap1\n      pop\n        /* \"#utility.yul\":2649:2962   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2968:3064   */\n    tag_214:\n        /* \"#utility.yul\":3005:3012   */\n      0x00\n        /* \"#utility.yul\":3034:3058   */\n      tag_264\n        /* \"#utility.yul\":3052:3057   */\n      dup3\n        /* \"#utility.yul\":3034:3058   */\n      tag_205\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":3023:3058   */\n      swap1\n      pop\n        /* \"#utility.yul\":2968:3064   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3070:3192   */\n    tag_215:\n        /* \"#utility.yul\":3143:3167   */\n      tag_266\n        /* \"#utility.yul\":3161:3166   */\n      dup2\n        /* \"#utility.yul\":3143:3167   */\n      tag_214\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3136:3141   */\n      dup2\n        /* \"#utility.yul\":3133:3168   */\n      eq\n        /* \"#utility.yul\":3123:3186   */\n      tag_267\n      jumpi\n        /* \"#utility.yul\":3182:3183   */\n      0x00\n        /* \"#utility.yul\":3179:3180   */\n      0x00\n        /* \"#utility.yul\":3172:3184   */\n      revert\n        /* \"#utility.yul\":3123:3186   */\n    tag_267:\n        /* \"#utility.yul\":3070:3192   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3198:3337   */\n    tag_216:\n        /* \"#utility.yul\":3244:3249   */\n      0x00\n        /* \"#utility.yul\":3282:3288   */\n      dup2\n        /* \"#utility.yul\":3269:3289   */\n      calldataload\n        /* \"#utility.yul\":3260:3289   */\n      swap1\n      pop\n        /* \"#utility.yul\":3298:3331   */\n      tag_269\n        /* \"#utility.yul\":3325:3330   */\n      dup2\n        /* \"#utility.yul\":3298:3331   */\n      tag_215\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3198:3337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3343:3817   */\n    tag_32:\n        /* \"#utility.yul\":3411:3417   */\n      0x00\n        /* \"#utility.yul\":3419:3425   */\n      0x00\n        /* \"#utility.yul\":3468:3470   */\n      0x40\n        /* \"#utility.yul\":3456:3465   */\n      dup4\n        /* \"#utility.yul\":3447:3454   */\n      dup6\n        /* \"#utility.yul\":3443:3466   */\n      sub\n        /* \"#utility.yul\":3439:3471   */\n      slt\n        /* \"#utility.yul\":3436:3555   */\n      iszero\n      tag_271\n      jumpi\n        /* \"#utility.yul\":3474:3553   */\n      tag_272\n      tag_200\n      jump\t// in\n    tag_272:\n        /* \"#utility.yul\":3436:3555   */\n    tag_271:\n        /* \"#utility.yul\":3594:3595   */\n      0x00\n        /* \"#utility.yul\":3619:3672   */\n      tag_273\n        /* \"#utility.yul\":3664:3671   */\n      dup6\n        /* \"#utility.yul\":3655:3661   */\n      dup3\n        /* \"#utility.yul\":3644:3653   */\n      dup7\n        /* \"#utility.yul\":3640:3662   */\n      add\n        /* \"#utility.yul\":3619:3672   */\n      tag_216\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":3609:3672   */\n      swap3\n      pop\n        /* \"#utility.yul\":3565:3682   */\n      pop\n        /* \"#utility.yul\":3721:3723   */\n      0x20\n        /* \"#utility.yul\":3747:3800   */\n      tag_274\n        /* \"#utility.yul\":3792:3799   */\n      dup6\n        /* \"#utility.yul\":3783:3789   */\n      dup3\n        /* \"#utility.yul\":3772:3781   */\n      dup7\n        /* \"#utility.yul\":3768:3790   */\n      add\n        /* \"#utility.yul\":3747:3800   */\n      tag_204\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":3737:3800   */\n      swap2\n      pop\n        /* \"#utility.yul\":3692:3810   */\n      pop\n        /* \"#utility.yul\":3343:3817   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3823:3913   */\n    tag_217:\n        /* \"#utility.yul\":3857:3864   */\n      0x00\n        /* \"#utility.yul\":3900:3905   */\n      dup2\n        /* \"#utility.yul\":3893:3906   */\n      iszero\n        /* \"#utility.yul\":3886:3907   */\n      iszero\n        /* \"#utility.yul\":3875:3907   */\n      swap1\n      pop\n        /* \"#utility.yul\":3823:3913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3919:4028   */\n    tag_218:\n        /* \"#utility.yul\":4000:4021   */\n      tag_277\n        /* \"#utility.yul\":4015:4020   */\n      dup2\n        /* \"#utility.yul\":4000:4021   */\n      tag_217\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":3995:3998   */\n      dup3\n        /* \"#utility.yul\":3988:4022   */\n      mstore\n        /* \"#utility.yul\":3919:4028   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4034:4244   */\n    tag_35:\n        /* \"#utility.yul\":4121:4125   */\n      0x00\n        /* \"#utility.yul\":4159:4161   */\n      0x20\n        /* \"#utility.yul\":4148:4157   */\n      dup3\n        /* \"#utility.yul\":4144:4162   */\n      add\n        /* \"#utility.yul\":4136:4162   */\n      swap1\n      pop\n        /* \"#utility.yul\":4172:4237   */\n      tag_279\n        /* \"#utility.yul\":4234:4235   */\n      0x00\n        /* \"#utility.yul\":4223:4232   */\n      dup4\n        /* \"#utility.yul\":4219:4236   */\n      add\n        /* \"#utility.yul\":4210:4216   */\n      dup5\n        /* \"#utility.yul\":4172:4237   */\n      tag_218\n      jump\t// in\n    tag_279:\n        /* \"#utility.yul\":4034:4244   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4250:4368   */\n    tag_219:\n        /* \"#utility.yul\":4337:4361   */\n      tag_281\n        /* \"#utility.yul\":4355:4360   */\n      dup2\n        /* \"#utility.yul\":4337:4361   */\n      tag_202\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":4332:4335   */\n      dup3\n        /* \"#utility.yul\":4325:4362   */\n      mstore\n        /* \"#utility.yul\":4250:4368   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4374:4596   */\n    tag_39:\n        /* \"#utility.yul\":4467:4471   */\n      0x00\n        /* \"#utility.yul\":4505:4507   */\n      0x20\n        /* \"#utility.yul\":4494:4503   */\n      dup3\n        /* \"#utility.yul\":4490:4508   */\n      add\n        /* \"#utility.yul\":4482:4508   */\n      swap1\n      pop\n        /* \"#utility.yul\":4518:4589   */\n      tag_283\n        /* \"#utility.yul\":4586:4587   */\n      0x00\n        /* \"#utility.yul\":4575:4584   */\n      dup4\n        /* \"#utility.yul\":4571:4588   */\n      add\n        /* \"#utility.yul\":4562:4568   */\n      dup5\n        /* \"#utility.yul\":4518:4589   */\n      tag_219\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":4374:4596   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4602:5221   */\n    tag_42:\n        /* \"#utility.yul\":4679:4685   */\n      0x00\n        /* \"#utility.yul\":4687:4693   */\n      0x00\n        /* \"#utility.yul\":4695:4701   */\n      0x00\n        /* \"#utility.yul\":4744:4746   */\n      0x60\n        /* \"#utility.yul\":4732:4741   */\n      dup5\n        /* \"#utility.yul\":4723:4730   */\n      dup7\n        /* \"#utility.yul\":4719:4742   */\n      sub\n        /* \"#utility.yul\":4715:4747   */\n      slt\n        /* \"#utility.yul\":4712:4831   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":4750:4829   */\n      tag_286\n      tag_200\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":4712:4831   */\n    tag_285:\n        /* \"#utility.yul\":4870:4871   */\n      0x00\n        /* \"#utility.yul\":4895:4948   */\n      tag_287\n        /* \"#utility.yul\":4940:4947   */\n      dup7\n        /* \"#utility.yul\":4931:4937   */\n      dup3\n        /* \"#utility.yul\":4920:4929   */\n      dup8\n        /* \"#utility.yul\":4916:4938   */\n      add\n        /* \"#utility.yul\":4895:4948   */\n      tag_216\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":4885:4948   */\n      swap4\n      pop\n        /* \"#utility.yul\":4841:4958   */\n      pop\n        /* \"#utility.yul\":4997:4999   */\n      0x20\n        /* \"#utility.yul\":5023:5076   */\n      tag_288\n        /* \"#utility.yul\":5068:5075   */\n      dup7\n        /* \"#utility.yul\":5059:5065   */\n      dup3\n        /* \"#utility.yul\":5048:5057   */\n      dup8\n        /* \"#utility.yul\":5044:5066   */\n      add\n        /* \"#utility.yul\":5023:5076   */\n      tag_216\n      jump\t// in\n    tag_288:\n        /* \"#utility.yul\":5013:5076   */\n      swap3\n      pop\n        /* \"#utility.yul\":4968:5086   */\n      pop\n        /* \"#utility.yul\":5125:5127   */\n      0x40\n        /* \"#utility.yul\":5151:5204   */\n      tag_289\n        /* \"#utility.yul\":5196:5203   */\n      dup7\n        /* \"#utility.yul\":5187:5193   */\n      dup3\n        /* \"#utility.yul\":5176:5185   */\n      dup8\n        /* \"#utility.yul\":5172:5194   */\n      add\n        /* \"#utility.yul\":5151:5204   */\n      tag_204\n      jump\t// in\n    tag_289:\n        /* \"#utility.yul\":5141:5204   */\n      swap2\n      pop\n        /* \"#utility.yul\":5096:5214   */\n      pop\n        /* \"#utility.yul\":4602:5221   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5227:5313   */\n    tag_220:\n        /* \"#utility.yul\":5262:5269   */\n      0x00\n        /* \"#utility.yul\":5302:5306   */\n      0xff\n        /* \"#utility.yul\":5295:5300   */\n      dup3\n        /* \"#utility.yul\":5291:5307   */\n      and\n        /* \"#utility.yul\":5280:5307   */\n      swap1\n      pop\n        /* \"#utility.yul\":5227:5313   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5319:5431   */\n    tag_221:\n        /* \"#utility.yul\":5402:5424   */\n      tag_292\n        /* \"#utility.yul\":5418:5423   */\n      dup2\n        /* \"#utility.yul\":5402:5424   */\n      tag_220\n      jump\t// in\n    tag_292:\n        /* \"#utility.yul\":5397:5400   */\n      dup3\n        /* \"#utility.yul\":5390:5425   */\n      mstore\n        /* \"#utility.yul\":5319:5431   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5437:5651   */\n    tag_48:\n        /* \"#utility.yul\":5526:5530   */\n      0x00\n        /* \"#utility.yul\":5564:5566   */\n      0x20\n        /* \"#utility.yul\":5553:5562   */\n      dup3\n        /* \"#utility.yul\":5549:5567   */\n      add\n        /* \"#utility.yul\":5541:5567   */\n      swap1\n      pop\n        /* \"#utility.yul\":5577:5644   */\n      tag_294\n        /* \"#utility.yul\":5641:5642   */\n      0x00\n        /* \"#utility.yul\":5630:5639   */\n      dup4\n        /* \"#utility.yul\":5626:5643   */\n      add\n        /* \"#utility.yul\":5617:5623   */\n      dup5\n        /* \"#utility.yul\":5577:5644   */\n      tag_221\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":5437:5651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5657:5986   */\n    tag_54:\n        /* \"#utility.yul\":5716:5722   */\n      0x00\n        /* \"#utility.yul\":5765:5767   */\n      0x20\n        /* \"#utility.yul\":5753:5762   */\n      dup3\n        /* \"#utility.yul\":5744:5751   */\n      dup5\n        /* \"#utility.yul\":5740:5763   */\n      sub\n        /* \"#utility.yul\":5736:5768   */\n      slt\n        /* \"#utility.yul\":5733:5852   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":5771:5850   */\n      tag_297\n      tag_200\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5733:5852   */\n    tag_296:\n        /* \"#utility.yul\":5891:5892   */\n      0x00\n        /* \"#utility.yul\":5916:5969   */\n      tag_298\n        /* \"#utility.yul\":5961:5968   */\n      dup5\n        /* \"#utility.yul\":5952:5958   */\n      dup3\n        /* \"#utility.yul\":5941:5950   */\n      dup6\n        /* \"#utility.yul\":5937:5959   */\n      add\n        /* \"#utility.yul\":5916:5969   */\n      tag_204\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5906:5969   */\n      swap2\n      pop\n        /* \"#utility.yul\":5862:5979   */\n      pop\n        /* \"#utility.yul\":5657:5986   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5992:6321   */\n    tag_58:\n        /* \"#utility.yul\":6051:6057   */\n      0x00\n        /* \"#utility.yul\":6100:6102   */\n      0x20\n        /* \"#utility.yul\":6088:6097   */\n      dup3\n        /* \"#utility.yul\":6079:6086   */\n      dup5\n        /* \"#utility.yul\":6075:6098   */\n      sub\n        /* \"#utility.yul\":6071:6103   */\n      slt\n        /* \"#utility.yul\":6068:6187   */\n      iszero\n      tag_300\n      jumpi\n        /* \"#utility.yul\":6106:6185   */\n      tag_301\n      tag_200\n      jump\t// in\n    tag_301:\n        /* \"#utility.yul\":6068:6187   */\n    tag_300:\n        /* \"#utility.yul\":6226:6227   */\n      0x00\n        /* \"#utility.yul\":6251:6304   */\n      tag_302\n        /* \"#utility.yul\":6296:6303   */\n      dup5\n        /* \"#utility.yul\":6287:6293   */\n      dup3\n        /* \"#utility.yul\":6276:6285   */\n      dup6\n        /* \"#utility.yul\":6272:6294   */\n      add\n        /* \"#utility.yul\":6251:6304   */\n      tag_216\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6241:6304   */\n      swap2\n      pop\n        /* \"#utility.yul\":6197:6314   */\n      pop\n        /* \"#utility.yul\":5992:6321   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6327:6445   */\n    tag_222:\n        /* \"#utility.yul\":6414:6438   */\n      tag_304\n        /* \"#utility.yul\":6432:6437   */\n      dup2\n        /* \"#utility.yul\":6414:6438   */\n      tag_214\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":6409:6412   */\n      dup3\n        /* \"#utility.yul\":6402:6439   */\n      mstore\n        /* \"#utility.yul\":6327:6445   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6451:6673   */\n    tag_66:\n        /* \"#utility.yul\":6544:6548   */\n      0x00\n        /* \"#utility.yul\":6582:6584   */\n      0x20\n        /* \"#utility.yul\":6571:6580   */\n      dup3\n        /* \"#utility.yul\":6567:6585   */\n      add\n        /* \"#utility.yul\":6559:6585   */\n      swap1\n      pop\n        /* \"#utility.yul\":6595:6666   */\n      tag_306\n        /* \"#utility.yul\":6663:6664   */\n      0x00\n        /* \"#utility.yul\":6652:6661   */\n      dup4\n        /* \"#utility.yul\":6648:6665   */\n      add\n        /* \"#utility.yul\":6639:6645   */\n      dup5\n        /* \"#utility.yul\":6595:6666   */\n      tag_222\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":6451:6673   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6679:7153   */\n    tag_79:\n        /* \"#utility.yul\":6747:6753   */\n      0x00\n        /* \"#utility.yul\":6755:6761   */\n      0x00\n        /* \"#utility.yul\":6804:6806   */\n      0x40\n        /* \"#utility.yul\":6792:6801   */\n      dup4\n        /* \"#utility.yul\":6783:6790   */\n      dup6\n        /* \"#utility.yul\":6779:6802   */\n      sub\n        /* \"#utility.yul\":6775:6807   */\n      slt\n        /* \"#utility.yul\":6772:6891   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":6810:6889   */\n      tag_309\n      tag_200\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":6772:6891   */\n    tag_308:\n        /* \"#utility.yul\":6930:6931   */\n      0x00\n        /* \"#utility.yul\":6955:7008   */\n      tag_310\n        /* \"#utility.yul\":7000:7007   */\n      dup6\n        /* \"#utility.yul\":6991:6997   */\n      dup3\n        /* \"#utility.yul\":6980:6989   */\n      dup7\n        /* \"#utility.yul\":6976:6998   */\n      add\n        /* \"#utility.yul\":6955:7008   */\n      tag_216\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":6945:7008   */\n      swap3\n      pop\n        /* \"#utility.yul\":6901:7018   */\n      pop\n        /* \"#utility.yul\":7057:7059   */\n      0x20\n        /* \"#utility.yul\":7083:7136   */\n      tag_311\n        /* \"#utility.yul\":7128:7135   */\n      dup6\n        /* \"#utility.yul\":7119:7125   */\n      dup3\n        /* \"#utility.yul\":7108:7117   */\n      dup7\n        /* \"#utility.yul\":7104:7126   */\n      add\n        /* \"#utility.yul\":7083:7136   */\n      tag_216\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7073:7136   */\n      swap2\n      pop\n        /* \"#utility.yul\":7028:7146   */\n      pop\n        /* \"#utility.yul\":6679:7153   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7159:7333   */\n    tag_223:\n        /* \"#utility.yul\":7299:7325   */\n      0x4f6e6c79206f776e65722063616e2077697468647261772e0000000000000000\n        /* \"#utility.yul\":7295:7296   */\n      0x00\n        /* \"#utility.yul\":7287:7293   */\n      dup3\n        /* \"#utility.yul\":7283:7297   */\n      add\n        /* \"#utility.yul\":7276:7326   */\n      mstore\n        /* \"#utility.yul\":7159:7333   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7339:7705   */\n    tag_224:\n        /* \"#utility.yul\":7481:7484   */\n      0x00\n        /* \"#utility.yul\":7502:7569   */\n      tag_314\n        /* \"#utility.yul\":7566:7568   */\n      0x18\n        /* \"#utility.yul\":7561:7564   */\n      dup4\n        /* \"#utility.yul\":7502:7569   */\n      tag_210\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":7495:7569   */\n      swap2\n      pop\n        /* \"#utility.yul\":7578:7671   */\n      tag_315\n        /* \"#utility.yul\":7667:7670   */\n      dup3\n        /* \"#utility.yul\":7578:7671   */\n      tag_223\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":7696:7698   */\n      0x20\n        /* \"#utility.yul\":7691:7694   */\n      dup3\n        /* \"#utility.yul\":7687:7699   */\n      add\n        /* \"#utility.yul\":7680:7699   */\n      swap1\n      pop\n        /* \"#utility.yul\":7339:7705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7711:8130   */\n    tag_89:\n        /* \"#utility.yul\":7877:7881   */\n      0x00\n        /* \"#utility.yul\":7915:7917   */\n      0x20\n        /* \"#utility.yul\":7904:7913   */\n      dup3\n        /* \"#utility.yul\":7900:7918   */\n      add\n        /* \"#utility.yul\":7892:7918   */\n      swap1\n      pop\n        /* \"#utility.yul\":7964:7973   */\n      dup2\n        /* \"#utility.yul\":7958:7962   */\n      dup2\n        /* \"#utility.yul\":7954:7974   */\n      sub\n        /* \"#utility.yul\":7950:7951   */\n      0x00\n        /* \"#utility.yul\":7939:7948   */\n      dup4\n        /* \"#utility.yul\":7935:7952   */\n      add\n        /* \"#utility.yul\":7928:7975   */\n      mstore\n        /* \"#utility.yul\":7992:8123   */\n      tag_317\n        /* \"#utility.yul\":8118:8122   */\n      dup2\n        /* \"#utility.yul\":7992:8123   */\n      tag_224\n      jump\t// in\n    tag_317:\n        /* \"#utility.yul\":7984:8123   */\n      swap1\n      pop\n        /* \"#utility.yul\":7711:8130   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8136:8305   */\n    tag_225:\n        /* \"#utility.yul\":8276:8297   */\n      0x496e73756666696369656e742066756e64732e00000000000000000000000000\n        /* \"#utility.yul\":8272:8273   */\n      0x00\n        /* \"#utility.yul\":8264:8270   */\n      dup3\n        /* \"#utility.yul\":8260:8274   */\n      add\n        /* \"#utility.yul\":8253:8298   */\n      mstore\n        /* \"#utility.yul\":8136:8305   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8311:8677   */\n    tag_226:\n        /* \"#utility.yul\":8453:8456   */\n      0x00\n        /* \"#utility.yul\":8474:8541   */\n      tag_320\n        /* \"#utility.yul\":8538:8540   */\n      0x13\n        /* \"#utility.yul\":8533:8536   */\n      dup4\n        /* \"#utility.yul\":8474:8541   */\n      tag_210\n      jump\t// in\n    tag_320:\n        /* \"#utility.yul\":8467:8541   */\n      swap2\n      pop\n        /* \"#utility.yul\":8550:8643   */\n      tag_321\n        /* \"#utility.yul\":8639:8642   */\n      dup3\n        /* \"#utility.yul\":8550:8643   */\n      tag_225\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":8668:8670   */\n      0x20\n        /* \"#utility.yul\":8663:8666   */\n      dup3\n        /* \"#utility.yul\":8659:8671   */\n      add\n        /* \"#utility.yul\":8652:8671   */\n      swap1\n      pop\n        /* \"#utility.yul\":8311:8677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8683:9102   */\n    tag_92:\n        /* \"#utility.yul\":8849:8853   */\n      0x00\n        /* \"#utility.yul\":8887:8889   */\n      0x20\n        /* \"#utility.yul\":8876:8885   */\n      dup3\n        /* \"#utility.yul\":8872:8890   */\n      add\n        /* \"#utility.yul\":8864:8890   */\n      swap1\n      pop\n        /* \"#utility.yul\":8936:8945   */\n      dup2\n        /* \"#utility.yul\":8930:8934   */\n      dup2\n        /* \"#utility.yul\":8926:8946   */\n      sub\n        /* \"#utility.yul\":8922:8923   */\n      0x00\n        /* \"#utility.yul\":8911:8920   */\n      dup4\n        /* \"#utility.yul\":8907:8924   */\n      add\n        /* \"#utility.yul\":8900:8947   */\n      mstore\n        /* \"#utility.yul\":8964:9095   */\n      tag_323\n        /* \"#utility.yul\":9090:9094   */\n      dup2\n        /* \"#utility.yul\":8964:9095   */\n      tag_226\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":8956:9095   */\n      swap1\n      pop\n        /* \"#utility.yul\":8683:9102   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9108:9288   */\n    tag_227:\n        /* \"#utility.yul\":9156:9233   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9153:9154   */\n      0x00\n        /* \"#utility.yul\":9146:9234   */\n      mstore\n        /* \"#utility.yul\":9253:9257   */\n      0x11\n        /* \"#utility.yul\":9250:9251   */\n      0x04\n        /* \"#utility.yul\":9243:9258   */\n      mstore\n        /* \"#utility.yul\":9277:9281   */\n      0x24\n        /* \"#utility.yul\":9274:9275   */\n      0x00\n        /* \"#utility.yul\":9267:9282   */\n      revert\n        /* \"#utility.yul\":9294:9488   */\n    tag_96:\n        /* \"#utility.yul\":9334:9338   */\n      0x00\n        /* \"#utility.yul\":9354:9374   */\n      tag_326\n        /* \"#utility.yul\":9372:9373   */\n      dup3\n        /* \"#utility.yul\":9354:9374   */\n      tag_202\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":9349:9374   */\n      swap2\n      pop\n        /* \"#utility.yul\":9388:9408   */\n      tag_327\n        /* \"#utility.yul\":9406:9407   */\n      dup4\n        /* \"#utility.yul\":9388:9408   */\n      tag_202\n      jump\t// in\n    tag_327:\n        /* \"#utility.yul\":9383:9408   */\n      swap3\n      pop\n        /* \"#utility.yul\":9432:9433   */\n      dup3\n        /* \"#utility.yul\":9429:9430   */\n      dup3\n        /* \"#utility.yul\":9425:9434   */\n      sub\n        /* \"#utility.yul\":9417:9434   */\n      swap1\n      pop\n        /* \"#utility.yul\":9456:9457   */\n      dup2\n        /* \"#utility.yul\":9450:9454   */\n      dup2\n        /* \"#utility.yul\":9447:9458   */\n      gt\n        /* \"#utility.yul\":9444:9481   */\n      iszero\n      tag_328\n      jumpi\n        /* \"#utility.yul\":9461:9479   */\n      tag_329\n      tag_227\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":9444:9481   */\n    tag_328:\n        /* \"#utility.yul\":9294:9488   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9494:9674   */\n    tag_228:\n        /* \"#utility.yul\":9542:9619   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9539:9540   */\n      0x00\n        /* \"#utility.yul\":9532:9620   */\n      mstore\n        /* \"#utility.yul\":9639:9643   */\n      0x22\n        /* \"#utility.yul\":9636:9637   */\n      0x04\n        /* \"#utility.yul\":9629:9644   */\n      mstore\n        /* \"#utility.yul\":9663:9667   */\n      0x24\n        /* \"#utility.yul\":9660:9661   */\n      0x00\n        /* \"#utility.yul\":9653:9668   */\n      revert\n        /* \"#utility.yul\":9680:10000   */\n    tag_99:\n        /* \"#utility.yul\":9724:9730   */\n      0x00\n        /* \"#utility.yul\":9761:9762   */\n      0x02\n        /* \"#utility.yul\":9755:9759   */\n      dup3\n        /* \"#utility.yul\":9751:9763   */\n      div\n        /* \"#utility.yul\":9741:9763   */\n      swap1\n      pop\n        /* \"#utility.yul\":9808:9809   */\n      0x01\n        /* \"#utility.yul\":9802:9806   */\n      dup3\n        /* \"#utility.yul\":9798:9810   */\n      and\n        /* \"#utility.yul\":9829:9847   */\n      dup1\n        /* \"#utility.yul\":9819:9900   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":9885:9889   */\n      0x7f\n        /* \"#utility.yul\":9877:9883   */\n      dup3\n        /* \"#utility.yul\":9873:9890   */\n      and\n        /* \"#utility.yul\":9863:9890   */\n      swap2\n      pop\n        /* \"#utility.yul\":9819:9900   */\n    tag_332:\n        /* \"#utility.yul\":9947:9949   */\n      0x20\n        /* \"#utility.yul\":9939:9945   */\n      dup3\n        /* \"#utility.yul\":9936:9950   */\n      lt\n        /* \"#utility.yul\":9916:9934   */\n      dup2\n        /* \"#utility.yul\":9913:9951   */\n      sub\n        /* \"#utility.yul\":9910:9994   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":9966:9984   */\n      tag_334\n      tag_228\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":9910:9994   */\n    tag_333:\n        /* \"#utility.yul\":9731:10000   */\n      pop\n        /* \"#utility.yul\":9680:10000   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10006:10448   */\n    tag_158:\n        /* \"#utility.yul\":10155:10159   */\n      0x00\n        /* \"#utility.yul\":10193:10195   */\n      0x60\n        /* \"#utility.yul\":10182:10191   */\n      dup3\n        /* \"#utility.yul\":10178:10196   */\n      add\n        /* \"#utility.yul\":10170:10196   */\n      swap1\n      pop\n        /* \"#utility.yul\":10206:10277   */\n      tag_336\n        /* \"#utility.yul\":10274:10275   */\n      0x00\n        /* \"#utility.yul\":10263:10272   */\n      dup4\n        /* \"#utility.yul\":10259:10276   */\n      add\n        /* \"#utility.yul\":10250:10256   */\n      dup7\n        /* \"#utility.yul\":10206:10277   */\n      tag_222\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":10287:10359   */\n      tag_337\n        /* \"#utility.yul\":10355:10357   */\n      0x20\n        /* \"#utility.yul\":10344:10353   */\n      dup4\n        /* \"#utility.yul\":10340:10358   */\n      add\n        /* \"#utility.yul\":10331:10337   */\n      dup6\n        /* \"#utility.yul\":10287:10359   */\n      tag_219\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":10369:10441   */\n      tag_338\n        /* \"#utility.yul\":10437:10439   */\n      0x40\n        /* \"#utility.yul\":10426:10435   */\n      dup4\n        /* \"#utility.yul\":10422:10440   */\n      add\n        /* \"#utility.yul\":10413:10419   */\n      dup5\n        /* \"#utility.yul\":10369:10441   */\n      tag_219\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":10006:10448   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10454:10645   */\n    tag_192:\n        /* \"#utility.yul\":10494:10497   */\n      0x00\n        /* \"#utility.yul\":10513:10533   */\n      tag_340\n        /* \"#utility.yul\":10531:10532   */\n      dup3\n        /* \"#utility.yul\":10513:10533   */\n      tag_202\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":10508:10533   */\n      swap2\n      pop\n        /* \"#utility.yul\":10547:10567   */\n      tag_341\n        /* \"#utility.yul\":10565:10566   */\n      dup4\n        /* \"#utility.yul\":10547:10567   */\n      tag_202\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":10542:10567   */\n      swap3\n      pop\n        /* \"#utility.yul\":10590:10591   */\n      dup3\n        /* \"#utility.yul\":10587:10588   */\n      dup3\n        /* \"#utility.yul\":10583:10592   */\n      add\n        /* \"#utility.yul\":10576:10592   */\n      swap1\n      pop\n        /* \"#utility.yul\":10611:10614   */\n      dup1\n        /* \"#utility.yul\":10608:10609   */\n      dup3\n        /* \"#utility.yul\":10605:10615   */\n      gt\n        /* \"#utility.yul\":10602:10638   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":10618:10636   */\n      tag_343\n      tag_227\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":10602:10638   */\n    tag_342:\n        /* \"#utility.yul\":10454:10645   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204ae2b8f2f4082fd9c3a4c99dfac43b43db676a32e4f46c3a481c3ed53c9b1fa864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_308": {
									"entryPoint": null,
									"id": 308,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_819": {
									"entryPoint": null,
									"id": 819,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_948": {
									"entryPoint": null,
									"id": 948,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 581,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 378,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 714,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 573,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2168,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2183,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2773,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1497,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2707,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_helper": {
									"entryPoint": 2265,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 2
								},
								"checked_exp_t_uint256_t_uint8": {
									"entryPoint": 2568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_exp_unsigned": {
									"entryPoint": 2347,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1776,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2151,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2120,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1255,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 2556,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1742,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1913,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1515,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1449,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1886,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1858,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2208,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1404,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1359,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1251,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1530,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_1_unsigned": {
									"entryPoint": 2253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1846,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1718,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1542,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1674,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1264,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1711,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10797:1",
										"nodeType": "YulBlock",
										"src": "0:10797:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "608:80:1",
													"nodeType": "YulBlock",
													"src": "608:80:1",
													"statements": [
														{
															"nativeSrc": "618:22:1",
															"nodeType": "YulAssignment",
															"src": "618:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:1"
																},
																"nativeSrc": "627:13:1",
																"nodeType": "YulFunctionCall",
																"src": "627:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:1"
																},
																"nativeSrc": "649:33:1",
																"nodeType": "YulFunctionCall",
																"src": "649:33:1"
															},
															"nativeSrc": "649:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:1",
														"nodeType": "YulTypedName",
														"src": "586:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:1",
														"nodeType": "YulTypedName",
														"src": "594:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:1",
														"nodeType": "YulTypedName",
														"src": "602:5:1",
														"type": ""
													}
												],
												"src": "545:143:1"
											},
											{
												"body": {
													"nativeSrc": "771:274:1",
													"nodeType": "YulBlock",
													"src": "771:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:1",
																"nodeType": "YulBlock",
																"src": "817:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:1"
																			},
																			"nativeSrc": "819:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:1"
																		},
																		"nativeSrc": "819:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:1"
																		},
																		"nativeSrc": "788:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:1",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:1"
																},
																"nativeSrc": "784:32:1",
																"nodeType": "YulFunctionCall",
																"src": "784:32:1"
															},
															"nativeSrc": "781:119:1",
															"nodeType": "YulIf",
															"src": "781:119:1"
														},
														{
															"nativeSrc": "910:128:1",
															"nodeType": "YulBlock",
															"src": "910:128:1",
															"statements": [
																{
																	"nativeSrc": "925:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:1",
																		"nodeType": "YulLiteral",
																		"src": "939:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:1",
																			"nodeType": "YulTypedName",
																			"src": "929:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:1",
																	"nodeType": "YulAssignment",
																	"src": "954:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:1"
																				},
																				"nativeSrc": "996:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:1"
																		},
																		"nativeSrc": "964:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:1",
														"nodeType": "YulTypedName",
														"src": "741:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:1",
														"nodeType": "YulTypedName",
														"src": "752:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:1",
														"nodeType": "YulTypedName",
														"src": "764:6:1",
														"type": ""
													}
												],
												"src": "694:351:1"
											},
											{
												"body": {
													"nativeSrc": "1110:40:1",
													"nodeType": "YulBlock",
													"src": "1110:40:1",
													"statements": [
														{
															"nativeSrc": "1121:22:1",
															"nodeType": "YulAssignment",
															"src": "1121:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1137:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1137:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1131:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1131:5:1"
																},
																"nativeSrc": "1131:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1131:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1121:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1121:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1051:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1093:5:1",
														"nodeType": "YulTypedName",
														"src": "1093:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1103:6:1",
														"nodeType": "YulTypedName",
														"src": "1103:6:1",
														"type": ""
													}
												],
												"src": "1051:99:1"
											},
											{
												"body": {
													"nativeSrc": "1184:152:1",
													"nodeType": "YulBlock",
													"src": "1184:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1201:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1201:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1204:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1204:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:1"
																},
																"nativeSrc": "1194:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1194:88:1"
															},
															"nativeSrc": "1194:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1194:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1298:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1298:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1301:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1301:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1291:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1291:6:1"
																},
																"nativeSrc": "1291:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1291:15:1"
															},
															"nativeSrc": "1291:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1291:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1322:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1322:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1325:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1325:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1315:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1315:6:1"
																},
																"nativeSrc": "1315:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1315:15:1"
															},
															"nativeSrc": "1315:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1315:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1156:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1156:180:1"
											},
											{
												"body": {
													"nativeSrc": "1370:152:1",
													"nodeType": "YulBlock",
													"src": "1370:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1387:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1387:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1390:77:1",
																		"nodeType": "YulLiteral",
																		"src": "1390:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1380:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1380:6:1"
																},
																"nativeSrc": "1380:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1380:88:1"
															},
															"nativeSrc": "1380:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "1380:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1484:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1484:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1487:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1487:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1477:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1477:6:1"
																},
																"nativeSrc": "1477:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1477:15:1"
															},
															"nativeSrc": "1477:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1477:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1511:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1501:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:1"
																},
																"nativeSrc": "1501:15:1",
																"nodeType": "YulFunctionCall",
																"src": "1501:15:1"
															},
															"nativeSrc": "1501:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "1501:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1342:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "1342:180:1"
											},
											{
												"body": {
													"nativeSrc": "1579:269:1",
													"nodeType": "YulBlock",
													"src": "1579:269:1",
													"statements": [
														{
															"nativeSrc": "1589:22:1",
															"nodeType": "YulAssignment",
															"src": "1589:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1603:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1603:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1609:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1609:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1599:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1599:3:1"
																},
																"nativeSrc": "1599:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1599:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1589:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1589:6:1"
																}
															]
														},
														{
															"nativeSrc": "1620:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "1620:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1650:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "1650:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1656:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1656:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1646:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1646:3:1"
																},
																"nativeSrc": "1646:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1646:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1624:18:1",
																	"nodeType": "YulTypedName",
																	"src": "1624:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1697:51:1",
																"nodeType": "YulBlock",
																"src": "1697:51:1",
																"statements": [
																	{
																		"nativeSrc": "1711:27:1",
																		"nodeType": "YulAssignment",
																		"src": "1711:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1725:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "1725:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1733:4:1",
																					"nodeType": "YulLiteral",
																					"src": "1733:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1721:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "1721:3:1"
																			},
																			"nativeSrc": "1721:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1721:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1711:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1677:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1677:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1670:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1670:6:1"
																},
																"nativeSrc": "1670:26:1",
																"nodeType": "YulFunctionCall",
																"src": "1670:26:1"
															},
															"nativeSrc": "1667:81:1",
															"nodeType": "YulIf",
															"src": "1667:81:1"
														},
														{
															"body": {
																"nativeSrc": "1800:42:1",
																"nodeType": "YulBlock",
																"src": "1800:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1814:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "1814:16:1"
																			},
																			"nativeSrc": "1814:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1814:18:1"
																		},
																		"nativeSrc": "1814:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1814:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1764:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "1764:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1787:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1787:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1795:2:1",
																				"nodeType": "YulLiteral",
																				"src": "1795:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1784:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1784:2:1"
																		},
																		"nativeSrc": "1784:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1784:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1761:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "1761:2:1"
																},
																"nativeSrc": "1761:38:1",
																"nodeType": "YulFunctionCall",
																"src": "1761:38:1"
															},
															"nativeSrc": "1758:84:1",
															"nodeType": "YulIf",
															"src": "1758:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1528:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1563:4:1",
														"nodeType": "YulTypedName",
														"src": "1563:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1572:6:1",
														"nodeType": "YulTypedName",
														"src": "1572:6:1",
														"type": ""
													}
												],
												"src": "1528:320:1"
											},
											{
												"body": {
													"nativeSrc": "1908:87:1",
													"nodeType": "YulBlock",
													"src": "1908:87:1",
													"statements": [
														{
															"nativeSrc": "1918:11:1",
															"nodeType": "YulAssignment",
															"src": "1918:11:1",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:1",
																"nodeType": "YulIdentifier",
																"src": "1926:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:1"
																},
																"nativeSrc": "1939:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:1"
															},
															"nativeSrc": "1939:14:1",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:1"
														},
														{
															"nativeSrc": "1962:26:1",
															"nodeType": "YulAssignment",
															"src": "1962:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:1"
																},
																"nativeSrc": "1970:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:1",
														"nodeType": "YulTypedName",
														"src": "1895:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:1",
														"nodeType": "YulTypedName",
														"src": "1903:4:1",
														"type": ""
													}
												],
												"src": "1854:141:1"
											},
											{
												"body": {
													"nativeSrc": "2045:49:1",
													"nodeType": "YulBlock",
													"src": "2045:49:1",
													"statements": [
														{
															"nativeSrc": "2055:33:1",
															"nodeType": "YulAssignment",
															"src": "2055:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:1"
																		},
																		"nativeSrc": "2069:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:1"
																},
																"nativeSrc": "2065:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:1"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:1",
														"nodeType": "YulTypedName",
														"src": "2028:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:1",
														"nodeType": "YulTypedName",
														"src": "2038:6:1",
														"type": ""
													}
												],
												"src": "2001:93:1"
											},
											{
												"body": {
													"nativeSrc": "2153:54:1",
													"nodeType": "YulBlock",
													"src": "2153:54:1",
													"statements": [
														{
															"nativeSrc": "2163:37:1",
															"nodeType": "YulAssignment",
															"src": "2163:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:1"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:1"
																},
																"nativeSrc": "2184:16:1",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:1"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:1",
														"nodeType": "YulTypedName",
														"src": "2128:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:1",
														"nodeType": "YulTypedName",
														"src": "2134:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:1",
														"nodeType": "YulTypedName",
														"src": "2144:8:1",
														"type": ""
													}
												],
												"src": "2100:107:1"
											},
											{
												"body": {
													"nativeSrc": "2289:317:1",
													"nodeType": "YulBlock",
													"src": "2289:317:1",
													"statements": [
														{
															"nativeSrc": "2299:35:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:1",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:1",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:1"
																},
																"nativeSrc": "2316:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:1"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:1",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:1",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:1"
																},
																"nativeSrc": "2355:97:1",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:1",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:1",
															"nodeType": "YulAssignment",
															"src": "2461:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:1"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:1"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:1"
																},
																"nativeSrc": "2473:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:1"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:1"
																}
															]
														},
														{
															"nativeSrc": "2521:30:1",
															"nodeType": "YulAssignment",
															"src": "2521:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:1"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:1"
																		},
																		"nativeSrc": "2541:9:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:1"
																},
																"nativeSrc": "2530:21:1",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:1"
																}
															]
														},
														{
															"nativeSrc": "2560:40:1",
															"nodeType": "YulAssignment",
															"src": "2560:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:1"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:1"
																		},
																		"nativeSrc": "2580:19:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:1"
																},
																"nativeSrc": "2570:30:1",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:1"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:1",
														"nodeType": "YulTypedName",
														"src": "2250:5:1",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:1",
														"nodeType": "YulTypedName",
														"src": "2257:10:1",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:1",
														"nodeType": "YulTypedName",
														"src": "2269:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:1",
														"nodeType": "YulTypedName",
														"src": "2282:6:1",
														"type": ""
													}
												],
												"src": "2213:393:1"
											},
											{
												"body": {
													"nativeSrc": "2644:28:1",
													"nodeType": "YulBlock",
													"src": "2644:28:1",
													"statements": [
														{
															"nativeSrc": "2654:12:1",
															"nodeType": "YulAssignment",
															"src": "2654:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:1",
																"nodeType": "YulIdentifier",
																"src": "2661:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:1",
														"nodeType": "YulTypedName",
														"src": "2630:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:1",
														"nodeType": "YulTypedName",
														"src": "2640:3:1",
														"type": ""
													}
												],
												"src": "2612:60:1"
											},
											{
												"body": {
													"nativeSrc": "2738:82:1",
													"nodeType": "YulBlock",
													"src": "2738:82:1",
													"statements": [
														{
															"nativeSrc": "2748:66:1",
															"nodeType": "YulAssignment",
															"src": "2748:66:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:1"
																				},
																				"nativeSrc": "2788:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:1",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:1"
																		},
																		"nativeSrc": "2779:34:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:1"
																},
																"nativeSrc": "2761:53:1",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:1",
														"nodeType": "YulTypedName",
														"src": "2718:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:1",
														"nodeType": "YulTypedName",
														"src": "2728:9:1",
														"type": ""
													}
												],
												"src": "2678:142:1"
											},
											{
												"body": {
													"nativeSrc": "2873:28:1",
													"nodeType": "YulBlock",
													"src": "2873:28:1",
													"statements": [
														{
															"nativeSrc": "2883:12:1",
															"nodeType": "YulAssignment",
															"src": "2883:12:1",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:1",
																"nodeType": "YulIdentifier",
																"src": "2890:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:1"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:1",
														"nodeType": "YulTypedName",
														"src": "2859:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:1",
														"nodeType": "YulTypedName",
														"src": "2869:3:1",
														"type": ""
													}
												],
												"src": "2826:75:1"
											},
											{
												"body": {
													"nativeSrc": "2983:193:1",
													"nodeType": "YulBlock",
													"src": "2983:193:1",
													"statements": [
														{
															"nativeSrc": "2993:63:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:1",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:1",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:1"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:1"
																},
																"nativeSrc": "3017:39:1",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:1"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:1",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:1"
																				},
																				"nativeSrc": "3106:11:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:1"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:1",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:1"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:1",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:1"
																				},
																				"nativeSrc": "3127:41:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:1"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:1",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:1"
																		},
																		"nativeSrc": "3078:91:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:1"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:1"
																},
																"nativeSrc": "3065:105:1",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:1"
															},
															"nativeSrc": "3065:105:1",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:1"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:1",
														"nodeType": "YulTypedName",
														"src": "2960:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:1",
														"nodeType": "YulTypedName",
														"src": "2966:6:1",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:1",
														"nodeType": "YulTypedName",
														"src": "2974:7:1",
														"type": ""
													}
												],
												"src": "2907:269:1"
											},
											{
												"body": {
													"nativeSrc": "3231:24:1",
													"nodeType": "YulBlock",
													"src": "3231:24:1",
													"statements": [
														{
															"nativeSrc": "3241:8:1",
															"nodeType": "YulAssignment",
															"src": "3241:8:1",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:1",
																"nodeType": "YulLiteral",
																"src": "3248:1:1",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:1"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:1",
														"nodeType": "YulTypedName",
														"src": "3227:3:1",
														"type": ""
													}
												],
												"src": "3182:73:1"
											},
											{
												"body": {
													"nativeSrc": "3314:136:1",
													"nodeType": "YulBlock",
													"src": "3314:136:1",
													"statements": [
														{
															"nativeSrc": "3324:46:1",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:1",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:1"
																},
																"nativeSrc": "3338:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:1"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:1",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:1"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:1"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:1"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:1"
																},
																"nativeSrc": "3379:65:1",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:1"
															},
															"nativeSrc": "3379:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:1"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:1",
														"nodeType": "YulTypedName",
														"src": "3300:4:1",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:1",
														"nodeType": "YulTypedName",
														"src": "3306:6:1",
														"type": ""
													}
												],
												"src": "3261:189:1"
											},
											{
												"body": {
													"nativeSrc": "3506:136:1",
													"nodeType": "YulBlock",
													"src": "3506:136:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:1",
																"nodeType": "YulBlock",
																"src": "3573:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:1",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:1"
																			},
																			"nativeSrc": "3587:39:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:1"
																		},
																		"nativeSrc": "3587:39:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:1"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:1"
																},
																"nativeSrc": "3523:14:1",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:1"
															},
															"nativeSrc": "3516:120:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:1",
																"nodeType": "YulBlock",
																"src": "3538:26:1",
																"statements": [
																	{
																		"nativeSrc": "3540:22:1",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:1"
																			},
																			"nativeSrc": "3549:13:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:1"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:1",
																"nodeType": "YulBlock",
																"src": "3520:2:1",
																"statements": []
															},
															"src": "3516:120:1"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:1",
														"nodeType": "YulTypedName",
														"src": "3494:5:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:1",
														"nodeType": "YulTypedName",
														"src": "3501:3:1",
														"type": ""
													}
												],
												"src": "3456:186:1"
											},
											{
												"body": {
													"nativeSrc": "3727:464:1",
													"nodeType": "YulBlock",
													"src": "3727:464:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:1",
																"nodeType": "YulBlock",
																"src": "3753:431:1",
																"statements": [
																	{
																		"nativeSrc": "3767:54:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:1"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:1",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:1"
																			},
																			"nativeSrc": "3783:38:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:1"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:1",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:1",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:1",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:1"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:1",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:1"
																					},
																					"nativeSrc": "3867:29:1",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:1"
																			},
																			"nativeSrc": "3853:44:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:1",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:1",
																			"nodeType": "YulBlock",
																			"src": "4054:27:1",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:1",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:1",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:1",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:1",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:1",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:1"
																			},
																			"nativeSrc": "4035:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:1"
																		},
																		"nativeSrc": "4032:49:1",
																		"nodeType": "YulIf",
																		"src": "4032:49:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:1",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:1"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:1",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:1"
																							},
																							"nativeSrc": "4150:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:1"
																					},
																					"nativeSrc": "4136:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:1"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:1",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:1"
																			},
																			"nativeSrc": "4094:80:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:1"
																		},
																		"nativeSrc": "4094:80:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:1"
																},
																"nativeSrc": "3741:11:1",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:1"
															},
															"nativeSrc": "3738:446:1",
															"nodeType": "YulIf",
															"src": "3738:446:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:1",
														"nodeType": "YulTypedName",
														"src": "3703:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:1",
														"nodeType": "YulTypedName",
														"src": "3710:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:1",
														"nodeType": "YulTypedName",
														"src": "3715:10:1",
														"type": ""
													}
												],
												"src": "3648:543:1"
											},
											{
												"body": {
													"nativeSrc": "4260:54:1",
													"nodeType": "YulBlock",
													"src": "4260:54:1",
													"statements": [
														{
															"nativeSrc": "4270:37:1",
															"nodeType": "YulAssignment",
															"src": "4270:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:1"
																},
																"nativeSrc": "4291:16:1",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:1",
														"nodeType": "YulTypedName",
														"src": "4235:4:1",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:1",
														"nodeType": "YulTypedName",
														"src": "4241:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:1",
														"nodeType": "YulTypedName",
														"src": "4251:8:1",
														"type": ""
													}
												],
												"src": "4197:117:1"
											},
											{
												"body": {
													"nativeSrc": "4371:118:1",
													"nodeType": "YulBlock",
													"src": "4371:118:1",
													"statements": [
														{
															"nativeSrc": "4381:68:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:1",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:1"
																				},
																				"nativeSrc": "4426:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:1",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:1",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:1"
																				},
																				"nativeSrc": "4441:6:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:1"
																		},
																		"nativeSrc": "4397:51:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:1"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:1"
																},
																"nativeSrc": "4393:56:1",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:1"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:1",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:1",
															"nodeType": "YulAssignment",
															"src": "4458:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:1"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:1"
																},
																"nativeSrc": "4468:15:1",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:1"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:1",
														"nodeType": "YulTypedName",
														"src": "4348:4:1",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:1",
														"nodeType": "YulTypedName",
														"src": "4354:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:1",
														"nodeType": "YulTypedName",
														"src": "4364:6:1",
														"type": ""
													}
												],
												"src": "4320:169:1"
											},
											{
												"body": {
													"nativeSrc": "4575:214:1",
													"nodeType": "YulBlock",
													"src": "4575:214:1",
													"statements": [
														{
															"nativeSrc": "4708:37:1",
															"nodeType": "YulAssignment",
															"src": "4708:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:1"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:1"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:1"
																},
																"nativeSrc": "4716:29:1",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:1"
																}
															]
														},
														{
															"nativeSrc": "4754:29:1",
															"nodeType": "YulAssignment",
															"src": "4754:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:1"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:1"
																		},
																		"nativeSrc": "4771:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:1"
																},
																"nativeSrc": "4762:21:1",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:1",
														"nodeType": "YulTypedName",
														"src": "4556:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:1",
														"nodeType": "YulTypedName",
														"src": "4562:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:1",
														"nodeType": "YulTypedName",
														"src": "4570:4:1",
														"type": ""
													}
												],
												"src": "4494:295:1"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:1",
													"nodeType": "YulBlock",
													"src": "4886:1303:1",
													"statements": [
														{
															"nativeSrc": "4897:51:1",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:1"
																},
																"nativeSrc": "4911:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:1",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:1",
																"nodeType": "YulBlock",
																"src": "5033:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:1"
																			},
																			"nativeSrc": "5035:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:1"
																		},
																		"nativeSrc": "5035:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:1",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:1"
																},
																"nativeSrc": "5002:30:1",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:1"
															},
															"nativeSrc": "4999:56:1",
															"nodeType": "YulIf",
															"src": "4999:56:1"
														},
														{
															"nativeSrc": "5065:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:1"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:1",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:1"
																		},
																		"nativeSrc": "5105:11:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:1"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:1",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:1"
																},
																"nativeSrc": "5079:38:1",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:1"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:1",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:1"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:1"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:1",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:1"
																},
																"nativeSrc": "5164:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:1"
															},
															"nativeSrc": "5164:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:1"
														},
														{
															"nativeSrc": "5241:18:1",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:1",
																"nodeType": "YulLiteral",
																"src": "5258:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:1",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:1",
															"nodeType": "YulAssignment",
															"src": "5269:17:1",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:1",
																"nodeType": "YulLiteral",
																"src": "5282:4:1",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:1",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:1",
																		"nodeType": "YulBlock",
																		"src": "5333:611:1",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:1",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:1",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:1"
																							},
																							"nativeSrc": "5374:9:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:1"
																					},
																					"nativeSrc": "5362:22:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:1",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:1",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:1"
																					},
																					"nativeSrc": "5412:37:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:1",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:1",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:1",
																					"nodeType": "YulBlock",
																					"src": "5530:163:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:1",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:1",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:1"
																												},
																												"nativeSrc": "5569:19:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:1",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:1"
																										},
																										"nativeSrc": "5563:26:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:1"
																								},
																								"nativeSrc": "5548:42:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:1"
																							},
																							"nativeSrc": "5548:42:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:1"
																						},
																						{
																							"nativeSrc": "5607:24:1",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:1",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:1"
																								},
																								"nativeSrc": "5617:14:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:1"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:1",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:1",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:1",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:1",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:1"
																								},
																								"nativeSrc": "5661:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:1",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:1",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:1"
																					},
																					"nativeSrc": "5493:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:1"
																				},
																				"nativeSrc": "5485:208:1",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:1",
																					"nodeType": "YulBlock",
																					"src": "5508:21:1",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:1",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:1",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:1"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:1",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:1",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:1",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:1"
																								},
																								"nativeSrc": "5515:12:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:1",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:1",
																					"nodeType": "YulBlock",
																					"src": "5489:3:1",
																					"statements": []
																				},
																				"src": "5485:208:1"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:1",
																					"nodeType": "YulBlock",
																					"src": "5729:156:1",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:1",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:1"
																										},
																										"nativeSrc": "5770:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:1"
																								},
																								"nativeSrc": "5764:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:1",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:1",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:1",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:1"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:1",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:1",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:1",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:1"
																												},
																												"nativeSrc": "5852:17:1",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:1"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:1",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:1"
																										},
																										"nativeSrc": "5822:48:1",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:1"
																								},
																								"nativeSrc": "5807:64:1",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:1"
																							},
																							"nativeSrc": "5807:64:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:1",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:1"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:1",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:1"
																					},
																					"nativeSrc": "5709:19:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:1"
																				},
																				"nativeSrc": "5706:179:1",
																				"nodeType": "YulIf",
																				"src": "5706:179:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:1",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:1"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:1",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:1",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:1",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:1"
																									},
																									"nativeSrc": "5915:14:1",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:1"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:1",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:1",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:1"
																							},
																							"nativeSrc": "5911:22:1",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:1"
																					},
																					"nativeSrc": "5898:36:1",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:1"
																				},
																				"nativeSrc": "5898:36:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:1"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:1",
																	"nodeType": "YulCase",
																	"src": "5326:618:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:1",
																		"nodeType": "YulBlock",
																		"src": "5961:222:1",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:1",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:1",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:1",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:1",
																					"nodeType": "YulBlock",
																					"src": "6012:67:1",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:1",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:1",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:1",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:1",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:1"
																										},
																										"nativeSrc": "6045:19:1",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:1"
																								},
																								"nativeSrc": "6039:26:1",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:1"
																				},
																				"nativeSrc": "6002:77:1",
																				"nodeType": "YulIf",
																				"src": "6002:77:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:1",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:1"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:1",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:1",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:1"
																							},
																							"nativeSrc": "6105:67:1",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:1"
																					},
																					"nativeSrc": "6092:81:1",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:1"
																				},
																				"nativeSrc": "6092:81:1",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:1"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:1",
																	"nodeType": "YulCase",
																	"src": "5953:230:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:1"
																},
																"nativeSrc": "5303:14:1",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:1"
															},
															"nativeSrc": "5296:887:1",
															"nodeType": "YulSwitch",
															"src": "5296:887:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:1",
														"nodeType": "YulTypedName",
														"src": "4875:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:1",
														"nodeType": "YulTypedName",
														"src": "4881:3:1",
														"type": ""
													}
												],
												"src": "4794:1395:1"
											},
											{
												"body": {
													"nativeSrc": "6240:81:1",
													"nodeType": "YulBlock",
													"src": "6240:81:1",
													"statements": [
														{
															"nativeSrc": "6250:65:1",
															"nodeType": "YulAssignment",
															"src": "6250:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6265:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6265:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6272:42:1",
																		"nodeType": "YulLiteral",
																		"src": "6272:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6261:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:1"
																},
																"nativeSrc": "6261:54:1",
																"nodeType": "YulFunctionCall",
																"src": "6261:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6250:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6250:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6195:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6222:5:1",
														"nodeType": "YulTypedName",
														"src": "6222:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6232:7:1",
														"nodeType": "YulTypedName",
														"src": "6232:7:1",
														"type": ""
													}
												],
												"src": "6195:126:1"
											},
											{
												"body": {
													"nativeSrc": "6372:51:1",
													"nodeType": "YulBlock",
													"src": "6372:51:1",
													"statements": [
														{
															"nativeSrc": "6382:35:1",
															"nodeType": "YulAssignment",
															"src": "6382:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6411:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "6411:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6393:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "6393:17:1"
																},
																"nativeSrc": "6393:24:1",
																"nodeType": "YulFunctionCall",
																"src": "6393:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6382:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "6382:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6327:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6354:5:1",
														"nodeType": "YulTypedName",
														"src": "6354:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6364:7:1",
														"nodeType": "YulTypedName",
														"src": "6364:7:1",
														"type": ""
													}
												],
												"src": "6327:96:1"
											},
											{
												"body": {
													"nativeSrc": "6494:53:1",
													"nodeType": "YulBlock",
													"src": "6494:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:1"
																		},
																		"nativeSrc": "6516:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:1"
																},
																"nativeSrc": "6504:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:1"
															},
															"nativeSrc": "6504:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:1",
														"nodeType": "YulTypedName",
														"src": "6482:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:1",
														"nodeType": "YulTypedName",
														"src": "6489:3:1",
														"type": ""
													}
												],
												"src": "6429:118:1"
											},
											{
												"body": {
													"nativeSrc": "6651:124:1",
													"nodeType": "YulBlock",
													"src": "6651:124:1",
													"statements": [
														{
															"nativeSrc": "6661:26:1",
															"nodeType": "YulAssignment",
															"src": "6661:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:1"
																},
																"nativeSrc": "6669:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:1"
																		},
																		"nativeSrc": "6750:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:1"
																},
																"nativeSrc": "6697:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:1"
															},
															"nativeSrc": "6697:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:1",
														"nodeType": "YulTypedName",
														"src": "6623:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:1",
														"nodeType": "YulTypedName",
														"src": "6635:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:1",
														"nodeType": "YulTypedName",
														"src": "6646:4:1",
														"type": ""
													}
												],
												"src": "6553:222:1"
											},
											{
												"body": {
													"nativeSrc": "6809:152:1",
													"nodeType": "YulBlock",
													"src": "6809:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:1",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:1"
																},
																"nativeSrc": "6819:88:1",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:1"
															},
															"nativeSrc": "6819:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:1"
																},
																"nativeSrc": "6916:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:1"
															},
															"nativeSrc": "6916:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:1",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:1"
																},
																"nativeSrc": "6940:15:1",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:1"
															},
															"nativeSrc": "6940:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:1"
											},
											{
												"body": {
													"nativeSrc": "7018:51:1",
													"nodeType": "YulBlock",
													"src": "7018:51:1",
													"statements": [
														{
															"nativeSrc": "7028:34:1",
															"nodeType": "YulAssignment",
															"src": "7028:34:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7053:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7053:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "7056:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "7056:5:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "7049:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7049:3:1"
																},
																"nativeSrc": "7049:13:1",
																"nodeType": "YulFunctionCall",
																"src": "7049:13:1"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "7028:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "7028:8:1"
																}
															]
														}
													]
												},
												"name": "shift_right_1_unsigned",
												"nativeSrc": "6967:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6999:5:1",
														"nodeType": "YulTypedName",
														"src": "6999:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "7009:8:1",
														"nodeType": "YulTypedName",
														"src": "7009:8:1",
														"type": ""
													}
												],
												"src": "6967:102:1"
											},
											{
												"body": {
													"nativeSrc": "7148:775:1",
													"nodeType": "YulBlock",
													"src": "7148:775:1",
													"statements": [
														{
															"nativeSrc": "7158:15:1",
															"nodeType": "YulAssignment",
															"src": "7158:15:1",
															"value": {
																"name": "_power",
																"nativeSrc": "7167:6:1",
																"nodeType": "YulIdentifier",
																"src": "7167:6:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "7158:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "7158:5:1"
																}
															]
														},
														{
															"nativeSrc": "7182:14:1",
															"nodeType": "YulAssignment",
															"src": "7182:14:1",
															"value": {
																"name": "_base",
																"nativeSrc": "7191:5:1",
																"nodeType": "YulIdentifier",
																"src": "7191:5:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "7182:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7182:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7240:677:1",
																"nodeType": "YulBlock",
																"src": "7240:677:1",
																"statements": [
																	{
																		"body": {
																			"nativeSrc": "7328:22:1",
																			"nodeType": "YulBlock",
																			"src": "7328:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "7330:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "7330:16:1"
																						},
																						"nativeSrc": "7330:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7330:18:1"
																					},
																					"nativeSrc": "7330:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "7330:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7306:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7306:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "max",
																							"nativeSrc": "7316:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7316:3:1"
																						},
																						{
																							"name": "base",
																							"nativeSrc": "7321:4:1",
																							"nodeType": "YulIdentifier",
																							"src": "7321:4:1"
																						}
																					],
																					"functionName": {
																						"name": "div",
																						"nativeSrc": "7312:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "7312:3:1"
																					},
																					"nativeSrc": "7312:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "7312:14:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "7303:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "7303:2:1"
																			},
																			"nativeSrc": "7303:24:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7303:24:1"
																		},
																		"nativeSrc": "7300:50:1",
																		"nodeType": "YulIf",
																		"src": "7300:50:1"
																	},
																	{
																		"body": {
																			"nativeSrc": "7395:419:1",
																			"nodeType": "YulBlock",
																			"src": "7395:419:1",
																			"statements": [
																				{
																					"nativeSrc": "7775:25:1",
																					"nodeType": "YulAssignment",
																					"src": "7775:25:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "power",
																								"nativeSrc": "7788:5:1",
																								"nodeType": "YulIdentifier",
																								"src": "7788:5:1"
																							},
																							{
																								"name": "base",
																								"nativeSrc": "7795:4:1",
																								"nodeType": "YulIdentifier",
																								"src": "7795:4:1"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nativeSrc": "7784:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "7784:3:1"
																						},
																						"nativeSrc": "7784:16:1",
																						"nodeType": "YulFunctionCall",
																						"src": "7784:16:1"
																					},
																					"variableNames": [
																						{
																							"name": "power",
																							"nativeSrc": "7775:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "7775:5:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7370:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7370:8:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7380:1:1",
																					"nodeType": "YulLiteral",
																					"src": "7380:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7366:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7366:3:1"
																			},
																			"nativeSrc": "7366:16:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7366:16:1"
																		},
																		"nativeSrc": "7363:451:1",
																		"nodeType": "YulIf",
																		"src": "7363:451:1"
																	},
																	{
																		"nativeSrc": "7827:23:1",
																		"nodeType": "YulAssignment",
																		"src": "7827:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "7839:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7839:4:1"
																				},
																				{
																					"name": "base",
																					"nativeSrc": "7845:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "7845:4:1"
																				}
																			],
																			"functionName": {
																				"name": "mul",
																				"nativeSrc": "7835:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "7835:3:1"
																			},
																			"nativeSrc": "7835:15:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7835:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "base",
																				"nativeSrc": "7827:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7827:4:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "7863:44:1",
																		"nodeType": "YulAssignment",
																		"src": "7863:44:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "exponent",
																					"nativeSrc": "7898:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "7898:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shift_right_1_unsigned",
																				"nativeSrc": "7875:22:1",
																				"nodeType": "YulIdentifier",
																				"src": "7875:22:1"
																			},
																			"nativeSrc": "7875:32:1",
																			"nodeType": "YulFunctionCall",
																			"src": "7875:32:1"
																		},
																		"variableNames": [
																			{
																				"name": "exponent",
																				"nativeSrc": "7863:8:1",
																				"nodeType": "YulIdentifier",
																				"src": "7863:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "7216:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "7216:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7226:1:1",
																		"nodeType": "YulLiteral",
																		"src": "7226:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7213:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "7213:2:1"
																},
																"nativeSrc": "7213:15:1",
																"nodeType": "YulFunctionCall",
																"src": "7213:15:1"
															},
															"nativeSrc": "7205:712:1",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "7229:2:1",
																"nodeType": "YulBlock",
																"src": "7229:2:1",
																"statements": []
															},
															"pre": {
																"nativeSrc": "7209:3:1",
																"nodeType": "YulBlock",
																"src": "7209:3:1",
																"statements": []
															},
															"src": "7205:712:1"
														}
													]
												},
												"name": "checked_exp_helper",
												"nativeSrc": "7075:848:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "_power",
														"nativeSrc": "7103:6:1",
														"nodeType": "YulTypedName",
														"src": "7103:6:1",
														"type": ""
													},
													{
														"name": "_base",
														"nativeSrc": "7111:5:1",
														"nodeType": "YulTypedName",
														"src": "7111:5:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7118:8:1",
														"nodeType": "YulTypedName",
														"src": "7118:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7128:3:1",
														"nodeType": "YulTypedName",
														"src": "7128:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7136:5:1",
														"nodeType": "YulTypedName",
														"src": "7136:5:1",
														"type": ""
													},
													{
														"name": "base",
														"nativeSrc": "7143:4:1",
														"nodeType": "YulTypedName",
														"src": "7143:4:1",
														"type": ""
													}
												],
												"src": "7075:848:1"
											},
											{
												"body": {
													"nativeSrc": "7989:1013:1",
													"nodeType": "YulBlock",
													"src": "7989:1013:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "8184:20:1",
																"nodeType": "YulBlock",
																"src": "8184:20:1",
																"statements": [
																	{
																		"nativeSrc": "8186:10:1",
																		"nodeType": "YulAssignment",
																		"src": "8186:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8195:1:1",
																			"nodeType": "YulLiteral",
																			"src": "8195:1:1",
																			"type": "",
																			"value": "1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8186:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8186:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8197:5:1",
																		"nodeType": "YulLeave",
																		"src": "8197:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "8174:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8174:8:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8167:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8167:6:1"
																},
																"nativeSrc": "8167:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8167:16:1"
															},
															"nativeSrc": "8164:40:1",
															"nodeType": "YulIf",
															"src": "8164:40:1"
														},
														{
															"body": {
																"nativeSrc": "8229:20:1",
																"nodeType": "YulBlock",
																"src": "8229:20:1",
																"statements": [
																	{
																		"nativeSrc": "8231:10:1",
																		"nodeType": "YulAssignment",
																		"src": "8231:10:1",
																		"value": {
																			"kind": "number",
																			"nativeSrc": "8240:1:1",
																			"nodeType": "YulLiteral",
																			"src": "8240:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8231:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8231:5:1"
																			}
																		]
																	},
																	{
																		"nativeSrc": "8242:5:1",
																		"nodeType": "YulLeave",
																		"src": "8242:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "8223:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8223:4:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8216:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:1"
																},
																"nativeSrc": "8216:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8216:12:1"
															},
															"nativeSrc": "8213:36:1",
															"nodeType": "YulIf",
															"src": "8213:36:1"
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "8359:20:1",
																		"nodeType": "YulBlock",
																		"src": "8359:20:1",
																		"statements": [
																			{
																				"nativeSrc": "8361:10:1",
																				"nodeType": "YulAssignment",
																				"src": "8361:10:1",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8370:1:1",
																					"nodeType": "YulLiteral",
																					"src": "8370:1:1",
																					"type": "",
																					"value": "1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8361:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8361:5:1"
																					}
																				]
																			},
																			{
																				"nativeSrc": "8372:5:1",
																				"nodeType": "YulLeave",
																				"src": "8372:5:1"
																			}
																		]
																	},
																	"nativeSrc": "8352:27:1",
																	"nodeType": "YulCase",
																	"src": "8352:27:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8357:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8357:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8403:176:1",
																		"nodeType": "YulBlock",
																		"src": "8403:176:1",
																		"statements": [
																			{
																				"body": {
																					"nativeSrc": "8438:22:1",
																					"nodeType": "YulBlock",
																					"src": "8438:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8440:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "8440:16:1"
																								},
																								"nativeSrc": "8440:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8440:18:1"
																							},
																							"nativeSrc": "8440:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8440:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "exponent",
																							"nativeSrc": "8423:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "8423:8:1"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8433:3:1",
																							"nodeType": "YulLiteral",
																							"src": "8433:3:1",
																							"type": "",
																							"value": "255"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8420:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8420:2:1"
																					},
																					"nativeSrc": "8420:17:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8420:17:1"
																				},
																				"nativeSrc": "8417:43:1",
																				"nodeType": "YulIf",
																				"src": "8417:43:1"
																			},
																			{
																				"nativeSrc": "8473:25:1",
																				"nodeType": "YulAssignment",
																				"src": "8473:25:1",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8486:1:1",
																							"nodeType": "YulLiteral",
																							"src": "8486:1:1",
																							"type": "",
																							"value": "2"
																						},
																						{
																							"name": "exponent",
																							"nativeSrc": "8489:8:1",
																							"nodeType": "YulIdentifier",
																							"src": "8489:8:1"
																						}
																					],
																					"functionName": {
																						"name": "exp",
																						"nativeSrc": "8482:3:1",
																						"nodeType": "YulIdentifier",
																						"src": "8482:3:1"
																					},
																					"nativeSrc": "8482:16:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8482:16:1"
																				},
																				"variableNames": [
																					{
																						"name": "power",
																						"nativeSrc": "8473:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "8473:5:1"
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8529:22:1",
																					"nodeType": "YulBlock",
																					"src": "8529:22:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [],
																								"functionName": {
																									"name": "panic_error_0x11",
																									"nativeSrc": "8531:16:1",
																									"nodeType": "YulIdentifier",
																									"src": "8531:16:1"
																								},
																								"nativeSrc": "8531:18:1",
																								"nodeType": "YulFunctionCall",
																								"src": "8531:18:1"
																							},
																							"nativeSrc": "8531:18:1",
																							"nodeType": "YulExpressionStatement",
																							"src": "8531:18:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "power",
																							"nativeSrc": "8517:5:1",
																							"nodeType": "YulIdentifier",
																							"src": "8517:5:1"
																						},
																						{
																							"name": "max",
																							"nativeSrc": "8524:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "8524:3:1"
																						}
																					],
																					"functionName": {
																						"name": "gt",
																						"nativeSrc": "8514:2:1",
																						"nodeType": "YulIdentifier",
																						"src": "8514:2:1"
																					},
																					"nativeSrc": "8514:14:1",
																					"nodeType": "YulFunctionCall",
																					"src": "8514:14:1"
																				},
																				"nativeSrc": "8511:40:1",
																				"nodeType": "YulIf",
																				"src": "8511:40:1"
																			},
																			{
																				"nativeSrc": "8564:5:1",
																				"nodeType": "YulLeave",
																				"src": "8564:5:1"
																			}
																		]
																	},
																	"nativeSrc": "8388:191:1",
																	"nodeType": "YulCase",
																	"src": "8388:191:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8393:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8393:1:1",
																		"type": "",
																		"value": "2"
																	}
																}
															],
															"expression": {
																"name": "base",
																"nativeSrc": "8309:4:1",
																"nodeType": "YulIdentifier",
																"src": "8309:4:1"
															},
															"nativeSrc": "8302:277:1",
															"nodeType": "YulSwitch",
															"src": "8302:277:1"
														},
														{
															"body": {
																"nativeSrc": "8711:123:1",
																"nodeType": "YulBlock",
																"src": "8711:123:1",
																"statements": [
																	{
																		"nativeSrc": "8725:28:1",
																		"nodeType": "YulAssignment",
																		"src": "8725:28:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "base",
																					"nativeSrc": "8738:4:1",
																					"nodeType": "YulIdentifier",
																					"src": "8738:4:1"
																				},
																				{
																					"name": "exponent",
																					"nativeSrc": "8744:8:1",
																					"nodeType": "YulIdentifier",
																					"src": "8744:8:1"
																				}
																			],
																			"functionName": {
																				"name": "exp",
																				"nativeSrc": "8734:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8734:3:1"
																			},
																			"nativeSrc": "8734:19:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8734:19:1"
																		},
																		"variableNames": [
																			{
																				"name": "power",
																				"nativeSrc": "8725:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "8725:5:1"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "8784:22:1",
																			"nodeType": "YulBlock",
																			"src": "8784:22:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [],
																						"functionName": {
																							"name": "panic_error_0x11",
																							"nativeSrc": "8786:16:1",
																							"nodeType": "YulIdentifier",
																							"src": "8786:16:1"
																						},
																						"nativeSrc": "8786:18:1",
																						"nodeType": "YulFunctionCall",
																						"src": "8786:18:1"
																					},
																					"nativeSrc": "8786:18:1",
																					"nodeType": "YulExpressionStatement",
																					"src": "8786:18:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "power",
																					"nativeSrc": "8772:5:1",
																					"nodeType": "YulIdentifier",
																					"src": "8772:5:1"
																				},
																				{
																					"name": "max",
																					"nativeSrc": "8779:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "8779:3:1"
																				}
																			],
																			"functionName": {
																				"name": "gt",
																				"nativeSrc": "8769:2:1",
																				"nodeType": "YulIdentifier",
																				"src": "8769:2:1"
																			},
																			"nativeSrc": "8769:14:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8769:14:1"
																		},
																		"nativeSrc": "8766:40:1",
																		"nodeType": "YulIf",
																		"src": "8766:40:1"
																	},
																	{
																		"nativeSrc": "8819:5:1",
																		"nodeType": "YulLeave",
																		"src": "8819:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8614:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8614:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8620:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8620:2:1",
																						"type": "",
																						"value": "11"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8611:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8611:2:1"
																				},
																				"nativeSrc": "8611:12:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8611:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8628:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "8628:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8638:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8638:2:1",
																						"type": "",
																						"value": "78"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8625:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8625:2:1"
																				},
																				"nativeSrc": "8625:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8625:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8607:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8607:3:1"
																		},
																		"nativeSrc": "8607:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8607:35:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "base",
																						"nativeSrc": "8663:4:1",
																						"nodeType": "YulIdentifier",
																						"src": "8663:4:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8669:3:1",
																						"nodeType": "YulLiteral",
																						"src": "8669:3:1",
																						"type": "",
																						"value": "307"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8660:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8660:2:1"
																				},
																				"nativeSrc": "8660:13:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8660:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "exponent",
																						"nativeSrc": "8678:8:1",
																						"nodeType": "YulIdentifier",
																						"src": "8678:8:1"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8688:2:1",
																						"nodeType": "YulLiteral",
																						"src": "8688:2:1",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "8675:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "8675:2:1"
																				},
																				"nativeSrc": "8675:16:1",
																				"nodeType": "YulFunctionCall",
																				"src": "8675:16:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8656:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8656:3:1"
																		},
																		"nativeSrc": "8656:36:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8656:36:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "8591:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8591:2:1"
																},
																"nativeSrc": "8591:111:1",
																"nodeType": "YulFunctionCall",
																"src": "8591:111:1"
															},
															"nativeSrc": "8588:246:1",
															"nodeType": "YulIf",
															"src": "8588:246:1"
														},
														{
															"nativeSrc": "8844:57:1",
															"nodeType": "YulAssignment",
															"src": "8844:57:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8878:1:1",
																		"nodeType": "YulLiteral",
																		"src": "8878:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8881:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8881:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "8887:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "8887:8:1"
																	},
																	{
																		"name": "max",
																		"nativeSrc": "8897:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8897:3:1"
																	}
																],
																"functionName": {
																	"name": "checked_exp_helper",
																	"nativeSrc": "8859:18:1",
																	"nodeType": "YulIdentifier",
																	"src": "8859:18:1"
																},
																"nativeSrc": "8859:42:1",
																"nodeType": "YulFunctionCall",
																"src": "8859:42:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8844:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8844:5:1"
																},
																{
																	"name": "base",
																	"nativeSrc": "8851:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8851:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8940:22:1",
																"nodeType": "YulBlock",
																"src": "8940:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8942:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "8942:16:1"
																			},
																			"nativeSrc": "8942:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "8942:18:1"
																		},
																		"nativeSrc": "8942:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "8942:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8917:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8917:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "max",
																				"nativeSrc": "8928:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "8928:3:1"
																			},
																			{
																				"name": "base",
																				"nativeSrc": "8933:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8933:4:1"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "8924:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8924:3:1"
																		},
																		"nativeSrc": "8924:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8924:14:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8914:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "8914:2:1"
																},
																"nativeSrc": "8914:25:1",
																"nodeType": "YulFunctionCall",
																"src": "8914:25:1"
															},
															"nativeSrc": "8911:51:1",
															"nodeType": "YulIf",
															"src": "8911:51:1"
														},
														{
															"nativeSrc": "8971:25:1",
															"nodeType": "YulAssignment",
															"src": "8971:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "power",
																		"nativeSrc": "8984:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "8984:5:1"
																	},
																	{
																		"name": "base",
																		"nativeSrc": "8991:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8991:4:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "8980:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8980:3:1"
																},
																"nativeSrc": "8980:16:1",
																"nodeType": "YulFunctionCall",
																"src": "8980:16:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "8971:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "8971:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_unsigned",
												"nativeSrc": "7929:1073:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "7959:4:1",
														"nodeType": "YulTypedName",
														"src": "7959:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "7965:8:1",
														"nodeType": "YulTypedName",
														"src": "7965:8:1",
														"type": ""
													},
													{
														"name": "max",
														"nativeSrc": "7975:3:1",
														"nodeType": "YulTypedName",
														"src": "7975:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "7983:5:1",
														"nodeType": "YulTypedName",
														"src": "7983:5:1",
														"type": ""
													}
												],
												"src": "7929:1073:1"
											},
											{
												"body": {
													"nativeSrc": "9051:43:1",
													"nodeType": "YulBlock",
													"src": "9051:43:1",
													"statements": [
														{
															"nativeSrc": "9061:27:1",
															"nodeType": "YulAssignment",
															"src": "9061:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9076:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "9076:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9083:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9083:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9072:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9072:3:1"
																},
																"nativeSrc": "9072:16:1",
																"nodeType": "YulFunctionCall",
																"src": "9072:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "9061:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9061:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "9008:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9033:5:1",
														"nodeType": "YulTypedName",
														"src": "9033:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "9043:7:1",
														"nodeType": "YulTypedName",
														"src": "9043:7:1",
														"type": ""
													}
												],
												"src": "9008:86:1"
											},
											{
												"body": {
													"nativeSrc": "9164:217:1",
													"nodeType": "YulBlock",
													"src": "9164:217:1",
													"statements": [
														{
															"nativeSrc": "9174:31:1",
															"nodeType": "YulAssignment",
															"src": "9174:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9200:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9200:4:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9182:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9182:17:1"
																},
																"nativeSrc": "9182:23:1",
																"nodeType": "YulFunctionCall",
																"src": "9182:23:1"
															},
															"variableNames": [
																{
																	"name": "base",
																	"nativeSrc": "9174:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9174:4:1"
																}
															]
														},
														{
															"nativeSrc": "9214:37:1",
															"nodeType": "YulAssignment",
															"src": "9214:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "exponent",
																		"nativeSrc": "9242:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9242:8:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "9226:15:1",
																	"nodeType": "YulIdentifier",
																	"src": "9226:15:1"
																},
																"nativeSrc": "9226:25:1",
																"nodeType": "YulFunctionCall",
																"src": "9226:25:1"
															},
															"variableNames": [
																{
																	"name": "exponent",
																	"nativeSrc": "9214:8:1",
																	"nodeType": "YulIdentifier",
																	"src": "9214:8:1"
																}
															]
														},
														{
															"nativeSrc": "9261:113:1",
															"nodeType": "YulAssignment",
															"src": "9261:113:1",
															"value": {
																"arguments": [
																	{
																		"name": "base",
																		"nativeSrc": "9291:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9291:4:1"
																	},
																	{
																		"name": "exponent",
																		"nativeSrc": "9297:8:1",
																		"nodeType": "YulIdentifier",
																		"src": "9297:8:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9307:66:1",
																		"nodeType": "YulLiteral",
																		"src": "9307:66:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "checked_exp_unsigned",
																	"nativeSrc": "9270:20:1",
																	"nodeType": "YulIdentifier",
																	"src": "9270:20:1"
																},
																"nativeSrc": "9270:104:1",
																"nodeType": "YulFunctionCall",
																"src": "9270:104:1"
															},
															"variableNames": [
																{
																	"name": "power",
																	"nativeSrc": "9261:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "9261:5:1"
																}
															]
														}
													]
												},
												"name": "checked_exp_t_uint256_t_uint8",
												"nativeSrc": "9100:281:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base",
														"nativeSrc": "9139:4:1",
														"nodeType": "YulTypedName",
														"src": "9139:4:1",
														"type": ""
													},
													{
														"name": "exponent",
														"nativeSrc": "9145:8:1",
														"nodeType": "YulTypedName",
														"src": "9145:8:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "power",
														"nativeSrc": "9158:5:1",
														"nodeType": "YulTypedName",
														"src": "9158:5:1",
														"type": ""
													}
												],
												"src": "9100:281:1"
											},
											{
												"body": {
													"nativeSrc": "9435:362:1",
													"nodeType": "YulBlock",
													"src": "9435:362:1",
													"statements": [
														{
															"nativeSrc": "9445:25:1",
															"nodeType": "YulAssignment",
															"src": "9445:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9468:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9468:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9450:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9450:17:1"
																},
																"nativeSrc": "9450:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9450:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9445:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9445:1:1"
																}
															]
														},
														{
															"nativeSrc": "9479:25:1",
															"nodeType": "YulAssignment",
															"src": "9479:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9502:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9502:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9484:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9484:17:1"
																},
																"nativeSrc": "9484:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9484:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9479:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9479:1:1"
																}
															]
														},
														{
															"nativeSrc": "9513:28:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9513:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9536:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9536:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9539:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9539:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9532:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9532:3:1"
																},
																"nativeSrc": "9532:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9532:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9517:11:1",
																	"nodeType": "YulTypedName",
																	"src": "9517:11:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9550:41:1",
															"nodeType": "YulAssignment",
															"src": "9550:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9579:11:1",
																		"nodeType": "YulIdentifier",
																		"src": "9579:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9561:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9561:17:1"
																},
																"nativeSrc": "9561:30:1",
																"nodeType": "YulFunctionCall",
																"src": "9561:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9550:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "9550:7:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9768:22:1",
																"nodeType": "YulBlock",
																"src": "9768:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9770:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9770:16:1"
																			},
																			"nativeSrc": "9770:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9770:18:1"
																		},
																		"nativeSrc": "9770:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9770:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9701:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "9701:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9694:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "9694:6:1"
																				},
																				"nativeSrc": "9694:9:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9694:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9724:1:1",
																						"nodeType": "YulIdentifier",
																						"src": "9724:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9731:7:1",
																								"nodeType": "YulIdentifier",
																								"src": "9731:7:1"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9740:1:1",
																								"nodeType": "YulIdentifier",
																								"src": "9740:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9727:3:1",
																							"nodeType": "YulIdentifier",
																							"src": "9727:3:1"
																						},
																						"nativeSrc": "9727:15:1",
																						"nodeType": "YulFunctionCall",
																						"src": "9727:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9721:2:1",
																					"nodeType": "YulIdentifier",
																					"src": "9721:2:1"
																				},
																				"nativeSrc": "9721:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "9721:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9674:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9674:2:1"
																		},
																		"nativeSrc": "9674:83:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9674:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9654:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9654:6:1"
																},
																"nativeSrc": "9654:113:1",
																"nodeType": "YulFunctionCall",
																"src": "9654:113:1"
															},
															"nativeSrc": "9651:139:1",
															"nodeType": "YulIf",
															"src": "9651:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9387:410:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9418:1:1",
														"nodeType": "YulTypedName",
														"src": "9418:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9421:1:1",
														"nodeType": "YulTypedName",
														"src": "9421:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9427:7:1",
														"nodeType": "YulTypedName",
														"src": "9427:7:1",
														"type": ""
													}
												],
												"src": "9387:410:1"
											},
											{
												"body": {
													"nativeSrc": "9847:147:1",
													"nodeType": "YulBlock",
													"src": "9847:147:1",
													"statements": [
														{
															"nativeSrc": "9857:25:1",
															"nodeType": "YulAssignment",
															"src": "9857:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9880:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9880:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9862:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9862:17:1"
																},
																"nativeSrc": "9862:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9862:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9857:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9857:1:1"
																}
															]
														},
														{
															"nativeSrc": "9891:25:1",
															"nodeType": "YulAssignment",
															"src": "9891:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9914:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9914:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9896:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9896:17:1"
																},
																"nativeSrc": "9896:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9896:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9891:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9891:1:1"
																}
															]
														},
														{
															"nativeSrc": "9925:16:1",
															"nodeType": "YulAssignment",
															"src": "9925:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9936:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9936:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9939:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9939:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9932:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9932:3:1"
																},
																"nativeSrc": "9932:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9932:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9925:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9925:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9965:22:1",
																"nodeType": "YulBlock",
																"src": "9965:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9967:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9967:16:1"
																			},
																			"nativeSrc": "9967:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9967:18:1"
																		},
																		"nativeSrc": "9967:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9967:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9957:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9957:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9960:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "9960:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9954:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9954:2:1"
																},
																"nativeSrc": "9954:10:1",
																"nodeType": "YulFunctionCall",
																"src": "9954:10:1"
															},
															"nativeSrc": "9951:36:1",
															"nodeType": "YulIf",
															"src": "9951:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9803:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9834:1:1",
														"nodeType": "YulTypedName",
														"src": "9834:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9837:1:1",
														"nodeType": "YulTypedName",
														"src": "9837:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9843:3:1",
														"nodeType": "YulTypedName",
														"src": "9843:3:1",
														"type": ""
													}
												],
												"src": "9803:191:1"
											},
											{
												"body": {
													"nativeSrc": "10065:53:1",
													"nodeType": "YulBlock",
													"src": "10065:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10082:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10082:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10105:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "10105:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "10087:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "10087:17:1"
																		},
																		"nativeSrc": "10087:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10087:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10075:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "10075:6:1"
																},
																"nativeSrc": "10075:37:1",
																"nodeType": "YulFunctionCall",
																"src": "10075:37:1"
															},
															"nativeSrc": "10075:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "10075:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "10000:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10053:5:1",
														"nodeType": "YulTypedName",
														"src": "10053:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "10060:3:1",
														"nodeType": "YulTypedName",
														"src": "10060:3:1",
														"type": ""
													}
												],
												"src": "10000:118:1"
											},
											{
												"body": {
													"nativeSrc": "10278:288:1",
													"nodeType": "YulBlock",
													"src": "10278:288:1",
													"statements": [
														{
															"nativeSrc": "10288:26:1",
															"nodeType": "YulAssignment",
															"src": "10288:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10300:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10300:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10311:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10311:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10296:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10296:3:1"
																},
																"nativeSrc": "10296:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10296:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10288:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10288:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10368:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10368:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10381:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10381:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10392:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10392:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10377:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10377:3:1"
																		},
																		"nativeSrc": "10377:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10377:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10324:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10324:43:1"
																},
																"nativeSrc": "10324:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10324:71:1"
															},
															"nativeSrc": "10324:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10324:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10449:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10449:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10462:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10462:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10473:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10473:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10458:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10458:3:1"
																		},
																		"nativeSrc": "10458:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10458:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10405:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10405:43:1"
																},
																"nativeSrc": "10405:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10405:72:1"
															},
															"nativeSrc": "10405:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10405:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10531:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10531:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10544:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10544:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10555:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10555:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10540:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10540:3:1"
																		},
																		"nativeSrc": "10540:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10540:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10487:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10487:43:1"
																},
																"nativeSrc": "10487:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10487:72:1"
															},
															"nativeSrc": "10487:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10487:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10124:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10234:9:1",
														"nodeType": "YulTypedName",
														"src": "10234:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10246:6:1",
														"nodeType": "YulTypedName",
														"src": "10246:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10254:6:1",
														"nodeType": "YulTypedName",
														"src": "10254:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10262:6:1",
														"nodeType": "YulTypedName",
														"src": "10262:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10273:4:1",
														"nodeType": "YulTypedName",
														"src": "10273:4:1",
														"type": ""
													}
												],
												"src": "10124:442:1"
											},
											{
												"body": {
													"nativeSrc": "10670:124:1",
													"nodeType": "YulBlock",
													"src": "10670:124:1",
													"statements": [
														{
															"nativeSrc": "10680:26:1",
															"nodeType": "YulAssignment",
															"src": "10680:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10692:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10692:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10703:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10703:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10688:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10688:3:1"
																},
																"nativeSrc": "10688:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10688:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10680:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10680:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10760:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10760:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10773:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10773:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10784:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10784:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10769:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10769:3:1"
																		},
																		"nativeSrc": "10769:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10769:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10716:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10716:43:1"
																},
																"nativeSrc": "10716:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10716:71:1"
															},
															"nativeSrc": "10716:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10716:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "10572:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10642:9:1",
														"nodeType": "YulTypedName",
														"src": "10642:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10654:6:1",
														"nodeType": "YulTypedName",
														"src": "10654:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10665:4:1",
														"nodeType": "YulTypedName",
														"src": "10665:4:1",
														"type": ""
													}
												],
												"src": "10572:222:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506040516120253803806120258339818101604052810190610031919061051a565b336040518060400160405280600581526020017f46434f44450000000000000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f46434f444500000000000000000000000000000000000000000000000000000081525081600390816100ad9190610779565b5080600490816100bd9190610779565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610130575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016101279190610887565b60405180910390fd5b61013f8161017a60201b60201c565b506101743361015261023d60201b60201c565b600a61015e9190610a08565b836101699190610a52565b61024560201b60201c565b50610b23565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f6012905090565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036102b5575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016102ac9190610887565b60405180910390fd5b6102c65f83836102ca60201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361031a578060025f82825461030e9190610a93565b925050819055506103e8565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050818110156103a3578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161039a93929190610ad5565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361042f578060025f8282540392505081905550610479565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516104d69190610b0a565b60405180910390a3505050565b5f5ffd5b5f819050919050565b6104f9816104e7565b8114610503575f5ffd5b50565b5f81519050610514816104f0565b92915050565b5f6020828403121561052f5761052e6104e3565b5b5f61053c84828501610506565b91505092915050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806105c057607f821691505b6020821081036105d3576105d261057c565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026106357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105fa565b61063f86836105fa565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61067a610675610670846104e7565b610657565b6104e7565b9050919050565b5f819050919050565b61069383610660565b6106a761069f82610681565b848454610606565b825550505050565b5f5f905090565b6106be6106af565b6106c981848461068a565b505050565b5b818110156106ec576106e15f826106b6565b6001810190506106cf565b5050565b601f82111561073157610702816105d9565b61070b846105eb565b8101602085101561071a578190505b61072e610726856105eb565b8301826106ce565b50505b505050565b5f82821c905092915050565b5f6107515f1984600802610736565b1980831691505092915050565b5f6107698383610742565b9150826002028217905092915050565b61078282610545565b67ffffffffffffffff81111561079b5761079a61054f565b5b6107a582546105a9565b6107b08282856106f0565b5f60209050601f8311600181146107e1575f84156107cf578287015190505b6107d9858261075e565b865550610840565b601f1984166107ef866105d9565b5f5b82811015610816578489015182556001820191506020850194506020810190506107f1565b86831015610833578489015161082f601f891682610742565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61087182610848565b9050919050565b61088181610867565b82525050565b5f60208201905061089a5f830184610878565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f8160011c9050919050565b5f5f8291508390505b6001851115610922578086048111156108fe576108fd6108a0565b5b600185161561090d5780820291505b808102905061091b856108cd565b94506108e2565b94509492505050565b5f8261093a57600190506109f5565b81610947575f90506109f5565b816001811461095d576002811461096757610996565b60019150506109f5565b60ff841115610979576109786108a0565b5b8360020a9150848211156109905761098f6108a0565b5b506109f5565b5060208310610133831016604e8410600b84101617156109cb5782820a9050838111156109c6576109c56108a0565b5b6109f5565b6109d884848460016108d9565b925090508184048111156109ef576109ee6108a0565b5b81810290505b9392505050565b5f60ff82169050919050565b5f610a12826104e7565b9150610a1d836109fc565b9250610a4a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff848461092b565b905092915050565b5f610a5c826104e7565b9150610a67836104e7565b9250828202610a75816104e7565b91508282048414831517610a8c57610a8b6108a0565b5b5092915050565b5f610a9d826104e7565b9150610aa8836104e7565b9250828201905080821115610ac057610abf6108a0565b5b92915050565b610acf816104e7565b82525050565b5f606082019050610ae85f830186610878565b610af56020830185610ac6565b610b026040830184610ac6565b949350505050565b5f602082019050610b1d5f830184610ac6565b92915050565b6114f580610b305f395ff3fe608060405234801561000f575f5ffd5b50600436106100fd575f3560e01c806370a0823111610095578063a9059cbb11610064578063a9059cbb14610285578063b69ef8a8146102b5578063dd62ed3e146102d3578063f2fde38b14610303576100fd565b806370a082311461020f578063715018a61461023f5780638da5cb5b1461024957806395d89b4114610267576100fd565b806323b872dd116100d157806323b872dd14610189578063313ce567146101b957806340c10f19146101d757806342966c68146101f3576100fd565b8062f714ce1461010157806306fdde031461011d578063095ea7b31461013b57806318160ddd1461016b575b5f5ffd5b61011b60048036038101906101169190610fe8565b61031f565b005b610125610439565b6040516101329190611096565b60405180910390f35b610155600480360381019061015091906110f1565b6104c9565b6040516101629190611149565b60405180910390f35b6101736104eb565b6040516101809190611171565b60405180910390f35b6101a3600480360381019061019e919061118a565b6104f4565b6040516101b09190611149565b60405180910390f35b6101c1610522565b6040516101ce91906111f5565b60405180910390f35b6101f160048036038101906101ec91906110f1565b61052a565b005b61020d6004803603810190610208919061120e565b610540565b005b61022960048036038101906102249190611239565b61054d565b6040516102369190611171565b60405180910390f35b610247610592565b005b6102516105a5565b60405161025e9190611273565b60405180910390f35b61026f6105cd565b60405161027c9190611096565b60405180910390f35b61029f600480360381019061029a91906110f1565b61065d565b6040516102ac9190611149565b60405180910390f35b6102bd61067f565b6040516102ca9190611171565b60405180910390f35b6102ed60048036038101906102e8919061128c565b610685565b6040516102fa9190611171565b60405180910390f35b61031d60048036038101906103189190611239565b610707565b005b6103276105a5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038b90611314565b60405180910390fd5b6006548211156103d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d09061137c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f1935050505015801561041c573d5f5f3e3d5ffd5b508160065f82825461042e91906113c7565b925050819055505050565b60606003805461044890611427565b80601f016020809104026020016040519081016040528092919081815260200182805461047490611427565b80156104bf5780601f10610496576101008083540402835291602001916104bf565b820191905f5260205f20905b8154815290600101906020018083116104a257829003601f168201915b5050505050905090565b5f5f6104d361078b565b90506104e0818585610792565b600191505092915050565b5f600254905090565b5f5f6104fe61078b565b905061050b8582856107a4565b610516858585610837565b60019150509392505050565b5f6012905090565b610532610927565b61053c82826109ae565b5050565b61054a3382610a2d565b50565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61059a610927565b6105a35f610aac565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105dc90611427565b80601f016020809104026020016040519081016040528092919081815260200182805461060890611427565b80156106535780601f1061062a57610100808354040283529160200191610653565b820191905f5260205f20905b81548152906001019060200180831161063657829003601f168201915b5050505050905090565b5f5f61066761078b565b9050610674818585610837565b600191505092915050565b60065481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61070f610927565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107769190611273565b60405180910390fd5b61078881610aac565b50565b5f33905090565b61079f8383836001610b6f565b505050565b5f6107af8484610685565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108315781811015610822578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161081993929190611457565b60405180910390fd5b61083084848484035f610b6f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108a7575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161089e9190611273565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610917575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161090e9190611273565b60405180910390fd5b610922838383610d3e565b505050565b61092f61078b565b73ffffffffffffffffffffffffffffffffffffffff1661094d6105a5565b73ffffffffffffffffffffffffffffffffffffffff16146109ac5761097061078b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109a39190611273565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a1e575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a159190611273565b60405180910390fd5b610a295f8383610d3e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a949190611273565b60405180910390fd5b610aa8825f83610d3e565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bdf575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610bd69190611273565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c4f575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c469190611273565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d38578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d2f9190611171565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8e578060025f828254610d82919061148c565b92505081905550610e5c565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e0e93929190611457565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea3578060025f8282540392505081905550610eed565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f4a9190611171565b60405180910390a3505050565b5f5ffd5b5f819050919050565b610f6d81610f5b565b8114610f77575f5ffd5b50565b5f81359050610f8881610f64565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fb782610f8e565b9050919050565b610fc781610fad565b8114610fd1575f5ffd5b50565b5f81359050610fe281610fbe565b92915050565b5f5f60408385031215610ffe57610ffd610f57565b5b5f61100b85828601610f7a565b925050602061101c85828601610fd4565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61106882611026565b6110728185611030565b9350611082818560208601611040565b61108b8161104e565b840191505092915050565b5f6020820190508181035f8301526110ae818461105e565b905092915050565b5f6110c082610f8e565b9050919050565b6110d0816110b6565b81146110da575f5ffd5b50565b5f813590506110eb816110c7565b92915050565b5f5f6040838503121561110757611106610f57565b5b5f611114858286016110dd565b925050602061112585828601610f7a565b9150509250929050565b5f8115159050919050565b6111438161112f565b82525050565b5f60208201905061115c5f83018461113a565b92915050565b61116b81610f5b565b82525050565b5f6020820190506111845f830184611162565b92915050565b5f5f5f606084860312156111a1576111a0610f57565b5b5f6111ae868287016110dd565b93505060206111bf868287016110dd565b92505060406111d086828701610f7a565b9150509250925092565b5f60ff82169050919050565b6111ef816111da565b82525050565b5f6020820190506112085f8301846111e6565b92915050565b5f6020828403121561122357611222610f57565b5b5f61123084828501610f7a565b91505092915050565b5f6020828403121561124e5761124d610f57565b5b5f61125b848285016110dd565b91505092915050565b61126d816110b6565b82525050565b5f6020820190506112865f830184611264565b92915050565b5f5f604083850312156112a2576112a1610f57565b5b5f6112af858286016110dd565b92505060206112c0858286016110dd565b9150509250929050565b7f4f6e6c79206f776e65722063616e2077697468647261772e00000000000000005f82015250565b5f6112fe601883611030565b9150611309826112ca565b602082019050919050565b5f6020820190508181035f83015261132b816112f2565b9050919050565b7f496e73756666696369656e742066756e64732e000000000000000000000000005f82015250565b5f611366601383611030565b915061137182611332565b602082019050919050565b5f6020820190508181035f8301526113938161135a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6113d182610f5b565b91506113dc83610f5b565b92508282039050818111156113f4576113f361139a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061143e57607f821691505b602082108103611451576114506113fa565b5b50919050565b5f60608201905061146a5f830186611264565b6114776020830185611162565b6114846040830184611162565b949350505050565b5f61149682610f5b565b91506114a183610f5b565b92508282019050808211156114b9576114b861139a565b5b9291505056fea26469706673582212204ae2b8f2f4082fd9c3a4c99dfac43b43db676a32e4f46c3a481c3ed53c9b1fa864736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2025 CODESIZE SUB DUP1 PUSH2 0x2025 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x51A JUMP JUMPDEST CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46434F4445000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x46434F4445000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x779 JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x130 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x127 SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x13F DUP2 PUSH2 0x17A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x174 CALLER PUSH2 0x152 PUSH2 0x23D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0xA PUSH2 0x15E SWAP2 SWAP1 PUSH2 0xA08 JUMP JUMPDEST DUP4 PUSH2 0x169 SWAP2 SWAP1 PUSH2 0xA52 JUMP JUMPDEST PUSH2 0x245 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0xB23 JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2B5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x887 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2C6 PUSH0 DUP4 DUP4 PUSH2 0x2CA PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x31A JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x30E SWAP2 SWAP1 PUSH2 0xA93 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3E8 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x3A3 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x39A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xAD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x42F JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x479 JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x4D6 SWAP2 SWAP1 PUSH2 0xB0A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4F9 DUP2 PUSH2 0x4E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x503 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x514 DUP2 PUSH2 0x4F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52F JUMPI PUSH2 0x52E PUSH2 0x4E3 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x53C DUP5 DUP3 DUP6 ADD PUSH2 0x506 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x5C0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x5D3 JUMPI PUSH2 0x5D2 PUSH2 0x57C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x635 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5FA JUMP JUMPDEST PUSH2 0x63F DUP7 DUP4 PUSH2 0x5FA JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x67A PUSH2 0x675 PUSH2 0x670 DUP5 PUSH2 0x4E7 JUMP JUMPDEST PUSH2 0x657 JUMP JUMPDEST PUSH2 0x4E7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x693 DUP4 PUSH2 0x660 JUMP JUMPDEST PUSH2 0x6A7 PUSH2 0x69F DUP3 PUSH2 0x681 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x606 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x6BE PUSH2 0x6AF JUMP JUMPDEST PUSH2 0x6C9 DUP2 DUP5 DUP5 PUSH2 0x68A JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6EC JUMPI PUSH2 0x6E1 PUSH0 DUP3 PUSH2 0x6B6 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x6CF JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x731 JUMPI PUSH2 0x702 DUP2 PUSH2 0x5D9 JUMP JUMPDEST PUSH2 0x70B DUP5 PUSH2 0x5EB JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x71A JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x72E PUSH2 0x726 DUP6 PUSH2 0x5EB JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x6CE JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x751 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x736 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x769 DUP4 DUP4 PUSH2 0x742 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x782 DUP3 PUSH2 0x545 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x79B JUMPI PUSH2 0x79A PUSH2 0x54F JUMP JUMPDEST JUMPDEST PUSH2 0x7A5 DUP3 SLOAD PUSH2 0x5A9 JUMP JUMPDEST PUSH2 0x7B0 DUP3 DUP3 DUP6 PUSH2 0x6F0 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7E1 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x7CF JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x7D9 DUP6 DUP3 PUSH2 0x75E JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x840 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7EF DUP7 PUSH2 0x5D9 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x816 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7F1 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x833 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x82F PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x742 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x871 DUP3 PUSH2 0x848 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x881 DUP2 PUSH2 0x867 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x89A PUSH0 DUP4 ADD DUP5 PUSH2 0x878 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x922 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x8FE JUMPI PUSH2 0x8FD PUSH2 0x8A0 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x90D JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x91B DUP6 PUSH2 0x8CD JUMP JUMPDEST SWAP5 POP PUSH2 0x8E2 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x93A JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x9F5 JUMP JUMPDEST DUP2 PUSH2 0x947 JUMPI PUSH0 SWAP1 POP PUSH2 0x9F5 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x95D JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x967 JUMPI PUSH2 0x996 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x9F5 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x979 JUMPI PUSH2 0x978 PUSH2 0x8A0 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0x990 JUMPI PUSH2 0x98F PUSH2 0x8A0 JUMP JUMPDEST JUMPDEST POP PUSH2 0x9F5 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x9CB JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0x9C6 JUMPI PUSH2 0x9C5 PUSH2 0x8A0 JUMP JUMPDEST JUMPDEST PUSH2 0x9F5 JUMP JUMPDEST PUSH2 0x9D8 DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x8D9 JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0x9EF JUMPI PUSH2 0x9EE PUSH2 0x8A0 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xA12 DUP3 PUSH2 0x4E7 JUMP JUMPDEST SWAP2 POP PUSH2 0xA1D DUP4 PUSH2 0x9FC JUMP JUMPDEST SWAP3 POP PUSH2 0xA4A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x92B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA5C DUP3 PUSH2 0x4E7 JUMP JUMPDEST SWAP2 POP PUSH2 0xA67 DUP4 PUSH2 0x4E7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0xA75 DUP2 PUSH2 0x4E7 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0xA8C JUMPI PUSH2 0xA8B PUSH2 0x8A0 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xA9D DUP3 PUSH2 0x4E7 JUMP JUMPDEST SWAP2 POP PUSH2 0xAA8 DUP4 PUSH2 0x4E7 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0xAC0 JUMPI PUSH2 0xABF PUSH2 0x8A0 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xACF DUP2 PUSH2 0x4E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0xAE8 PUSH0 DUP4 ADD DUP7 PUSH2 0x878 JUMP JUMPDEST PUSH2 0xAF5 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0xAC6 JUMP JUMPDEST PUSH2 0xB02 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0xAC6 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xB1D PUSH0 DUP4 ADD DUP5 PUSH2 0xAC6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x14F5 DUP1 PUSH2 0xB30 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x303 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x267 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1F3 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x592 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x327 PUSH2 0x5A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38B SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP3 GT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D0 SWAP1 PUSH2 0x137C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x1427 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x1427 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4D3 PUSH2 0x78B JUMP JUMPDEST SWAP1 POP PUSH2 0x4E0 DUP2 DUP6 DUP6 PUSH2 0x792 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FE PUSH2 0x78B JUMP JUMPDEST SWAP1 POP PUSH2 0x50B DUP6 DUP3 DUP6 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x516 DUP6 DUP6 DUP6 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x927 JUMP JUMPDEST PUSH2 0x53C DUP3 DUP3 PUSH2 0x9AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x54A CALLER DUP3 PUSH2 0xA2D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59A PUSH2 0x927 JUMP JUMPDEST PUSH2 0x5A3 PUSH0 PUSH2 0xAAC JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5DC SWAP1 PUSH2 0x1427 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x608 SWAP1 PUSH2 0x1427 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x653 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x653 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x636 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x667 PUSH2 0x78B JUMP JUMPDEST SWAP1 POP PUSH2 0x674 DUP2 DUP6 DUP6 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x70F PUSH2 0x927 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x788 DUP2 PUSH2 0xAAC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x79F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7AF DUP5 DUP5 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x831 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x822 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x819 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x830 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB6F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x917 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x922 DUP4 DUP4 DUP4 PUSH2 0xD3E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x92F PUSH2 0x78B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x94D PUSH2 0x5A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9AC JUMPI PUSH2 0x970 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA29 PUSH0 DUP4 DUP4 PUSH2 0xD3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA8 DUP3 PUSH0 DUP4 PUSH2 0xD3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD38 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD2F SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x148C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE5C JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE17 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEED JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF4A SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6D DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP2 EQ PUSH2 0xF77 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF88 DUP2 PUSH2 0xF64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB7 DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC7 DUP2 PUSH2 0xFAD JUMP JUMPDEST DUP2 EQ PUSH2 0xFD1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE2 DUP2 PUSH2 0xFBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH2 0xFFD PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x100B DUP6 DUP3 DUP7 ADD PUSH2 0xF7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x101C DUP6 DUP3 DUP7 ADD PUSH2 0xFD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1068 DUP3 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x1072 DUP2 DUP6 PUSH2 0x1030 JUMP JUMPDEST SWAP4 POP PUSH2 0x1082 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x108B DUP2 PUSH2 0x104E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10AE DUP2 DUP5 PUSH2 0x105E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10C0 DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D0 DUP2 PUSH2 0x10B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x10DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10EB DUP2 PUSH2 0x10C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1107 JUMPI PUSH2 0x1106 PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1114 DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1125 DUP6 DUP3 DUP7 ADD PUSH2 0xF7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1143 DUP2 PUSH2 0x112F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x115C PUSH0 DUP4 ADD DUP5 PUSH2 0x113A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x116B DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1184 PUSH0 DUP4 ADD DUP5 PUSH2 0x1162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11A1 JUMPI PUSH2 0x11A0 PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11AE DUP7 DUP3 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11BF DUP7 DUP3 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11D0 DUP7 DUP3 DUP8 ADD PUSH2 0xF7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11EF DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1208 PUSH0 DUP4 ADD DUP5 PUSH2 0x11E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1223 JUMPI PUSH2 0x1222 PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1230 DUP5 DUP3 DUP6 ADD PUSH2 0xF7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124E JUMPI PUSH2 0x124D PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x125B DUP5 DUP3 DUP6 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0x10B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1286 PUSH0 DUP4 ADD DUP5 PUSH2 0x1264 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A2 JUMPI PUSH2 0x12A1 PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12AF DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12C0 DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2077697468647261772E0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12FE PUSH1 0x18 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x1309 DUP3 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x132B DUP2 PUSH2 0x12F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1366 PUSH1 0x13 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x1371 DUP3 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1393 DUP2 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x13D1 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x13DC DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F3 PUSH2 0x139A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x143E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1451 JUMPI PUSH2 0x1450 PUSH2 0x13FA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x146A PUSH0 DUP4 ADD DUP7 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x1477 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x1484 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1162 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1496 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x14A1 DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14B9 JUMPI PUSH2 0x14B8 PUSH2 0x139A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xE2 0xB8 CALLCODE DELEGATECALL ADDMOD 0x2F 0xD9 0xC3 LOG4 0xC9 SWAP14 STATICCALL 0xC4 EXTCODESIZE NUMBER 0xDB PUSH8 0x6A32E4F46C3A481C RETURNDATACOPY 0xD5 EXTCODECOPY SWAP12 0x1F 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "24932:677:0:-:0;;;25000:147;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25067:10;12501:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12575:5;12567;:13;;;;;;:::i;:::-;;12600:7;12590;:17;;;;;;:::i;:::-;;12501:113;;23068:1;23044:26;;:12;:26;;;23040:95;;23121:1;23093:31;;;;;;;;;;;:::i;:::-;;;;;;;;23040:95;23144:32;23163:12;23144:18;;;:32;;:::i;:::-;22996:187;25089:51:::2;25095:10;25129;:8;;;:10;;:::i;:::-;25123:2;:16;;;;:::i;:::-;25107:13;:32;;;;:::i;:::-;25089:5;;;:51;;:::i;:::-;25000:147:::0;24932:677;;24683:187;24756:16;24775:6;;;;;;;;;;;24756:25;;24800:8;24791:6;;:17;;;;;;;;;;;;;;;;;;24854:8;24823:40;;24844:8;24823:40;;;;;;;;;;;;24746:124;24683:187;:::o;13607:82::-;13656:5;13680:2;13673:9;;13607:82;:::o;18358:208::-;18447:1;18428:21;;:7;:21;;;18424:91;;18501:1;18472:32;;;;;;;;;;;:::i;:::-;;;;;;;;18424:91;18524:35;18540:1;18544:7;18553:5;18524:7;;;:35;;:::i;:::-;18358:208;;:::o;16908:1107::-;17013:1;16997:18;;:4;:18;;;16993:540;;17149:5;17133:12;;:21;;;;;;;:::i;:::-;;;;;;;;16993:540;;;17185:19;17207:9;:15;17217:4;17207:15;;;;;;;;;;;;;;;;17185:37;;17254:5;17240:11;:19;17236:115;;;17311:4;17317:11;17330:5;17286:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17236:115;17503:5;17489:11;:19;17471:9;:15;17481:4;17471:15;;;;;;;;;;;;;;;:37;;;;17171:362;16993:540;17561:1;17547:16;;:2;:16;;;17543:425;;17726:5;17710:12;;:21;;;;;;;;;;;17543:425;;;17938:5;17921:9;:13;17931:2;17921:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17543:425;17998:2;17983:25;;17992:4;17983:25;;;18002:5;17983:25;;;;;;:::i;:::-;;;;;;;;16908:1107;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:99::-;1103:6;1137:5;1131:12;1121:22;;1051:99;;;:::o;1156:180::-;1204:77;1201:1;1194:88;1301:4;1298:1;1291:15;1325:4;1322:1;1315:15;1342:180;1390:77;1387:1;1380:88;1487:4;1484:1;1477:15;1511:4;1508:1;1501:15;1528:320;1572:6;1609:1;1603:4;1599:12;1589:22;;1656:1;1650:4;1646:12;1677:18;1667:81;;1733:4;1725:6;1721:17;1711:27;;1667:81;1795:2;1787:6;1784:14;1764:18;1761:38;1758:84;;1814:18;;:::i;:::-;1758:84;1579:269;1528:320;;;:::o;1854:141::-;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3248:1;3241:8;;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:102;7009:8;7056:5;7053:1;7049:13;7028:34;;6967:102;;;:::o;7075:848::-;7136:5;7143:4;7167:6;7158:15;;7191:5;7182:14;;7205:712;7226:1;7216:8;7213:15;7205:712;;;7321:4;7316:3;7312:14;7306:4;7303:24;7300:50;;;7330:18;;:::i;:::-;7300:50;7380:1;7370:8;7366:16;7363:451;;;7795:4;7788:5;7784:16;7775:25;;7363:451;7845:4;7839;7835:15;7827:23;;7875:32;7898:8;7875:32;:::i;:::-;7863:44;;7205:712;;;7075:848;;;;;;;:::o;7929:1073::-;7983:5;8174:8;8164:40;;8195:1;8186:10;;8197:5;;8164:40;8223:4;8213:36;;8240:1;8231:10;;8242:5;;8213:36;8309:4;8357:1;8352:27;;;;8393:1;8388:191;;;;8302:277;;8352:27;8370:1;8361:10;;8372:5;;;8388:191;8433:3;8423:8;8420:17;8417:43;;;8440:18;;:::i;:::-;8417:43;8489:8;8486:1;8482:16;8473:25;;8524:3;8517:5;8514:14;8511:40;;;8531:18;;:::i;:::-;8511:40;8564:5;;;8302:277;;8688:2;8678:8;8675:16;8669:3;8663:4;8660:13;8656:36;8638:2;8628:8;8625:16;8620:2;8614:4;8611:12;8607:35;8591:111;8588:246;;;8744:8;8738:4;8734:19;8725:28;;8779:3;8772:5;8769:14;8766:40;;;8786:18;;:::i;:::-;8766:40;8819:5;;8588:246;8859:42;8897:3;8887:8;8881:4;8878:1;8859:42;:::i;:::-;8844:57;;;;8933:4;8928:3;8924:14;8917:5;8914:25;8911:51;;;8942:18;;:::i;:::-;8911:51;8991:4;8984:5;8980:16;8971:25;;7929:1073;;;;;;:::o;9008:86::-;9043:7;9083:4;9076:5;9072:16;9061:27;;9008:86;;;:::o;9100:281::-;9158:5;9182:23;9200:4;9182:23;:::i;:::-;9174:31;;9226:25;9242:8;9226:25;:::i;:::-;9214:37;;9270:104;9307:66;9297:8;9291:4;9270:104;:::i;:::-;9261:113;;9100:281;;;;:::o;9387:410::-;9427:7;9450:20;9468:1;9450:20;:::i;:::-;9445:25;;9484:20;9502:1;9484:20;:::i;:::-;9479:25;;9539:1;9536;9532:9;9561:30;9579:11;9561:30;:::i;:::-;9550:41;;9740:1;9731:7;9727:15;9724:1;9721:22;9701:1;9694:9;9674:83;9651:139;;9770:18;;:::i;:::-;9651:139;9435:362;9387:410;;;;:::o;9803:191::-;9843:3;9862:20;9880:1;9862:20;:::i;:::-;9857:25;;9896:20;9914:1;9896:20;:::i;:::-;9891:25;;9939:1;9936;9932:9;9925:16;;9960:3;9957:1;9954:10;9951:36;;;9967:18;;:::i;:::-;9951:36;9803:191;;;;:::o;10000:118::-;10087:24;10105:5;10087:24;:::i;:::-;10082:3;10075:37;10000:118;;:::o;10124:442::-;10273:4;10311:2;10300:9;10296:18;10288:26;;10324:71;10392:1;10381:9;10377:17;10368:6;10324:71;:::i;:::-;10405:72;10473:2;10462:9;10458:18;10449:6;10405:72;:::i;:::-;10487;10555:2;10544:9;10540:18;10531:6;10487:72;:::i;:::-;10124:442;;;;;;:::o;10572:222::-;10665:4;10703:2;10692:9;10688:18;10680:26;;10716:71;10784:1;10773:9;10769:17;10760:6;10716:71;:::i;:::-;10572:222;;;;:::o;24932:677:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_662": {
									"entryPoint": 1938,
									"id": 662,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_722": {
									"entryPoint": 2927,
									"id": 722,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_644": {
									"entryPoint": 2605,
									"id": 644,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_853": {
									"entryPoint": 2343,
									"id": 853,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_mint_611": {
									"entryPoint": 2478,
									"id": 611,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_111": {
									"entryPoint": 1931,
									"id": 111,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_spendAllowance_770": {
									"entryPoint": 1956,
									"id": 770,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_915": {
									"entryPoint": 2732,
									"id": 915,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_501": {
									"entryPoint": 2103,
									"id": 501,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_578": {
									"entryPoint": 3390,
									"id": 578,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_398": {
									"entryPoint": 1669,
									"id": 398,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_422": {
									"entryPoint": 1225,
									"id": 422,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_357": {
									"entryPoint": 1357,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balance_923": {
									"entryPoint": 1663,
									"id": 923,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@burn_975": {
									"entryPoint": 1344,
									"id": 975,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@decimals_335": {
									"entryPoint": 1314,
									"id": 335,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_963": {
									"entryPoint": 1322,
									"id": 963,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_317": {
									"entryPoint": 1081,
									"id": 317,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_836": {
									"entryPoint": 1445,
									"id": 836,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_867": {
									"entryPoint": 1426,
									"id": 867,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@symbol_326": {
									"entryPoint": 1485,
									"id": 326,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_344": {
									"entryPoint": 1259,
									"id": 344,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_454": {
									"entryPoint": 1268,
									"id": 454,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_895": {
									"entryPoint": 1799,
									"id": 895,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_381": {
									"entryPoint": 1629,
									"id": 381,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@withdraw_1009": {
									"entryPoint": 799,
									"id": 1009,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 4317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_payable": {
									"entryPoint": 4052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3962,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4748,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4622,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address_payable": {
									"entryPoint": 4072,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4190,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4954,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4450,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4723,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5207,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4246,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4988,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4134,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4144,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 5260,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address_payable": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4399,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3982,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3931,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4570,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4160,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 5159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5018,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3927,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4174,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91": {
									"entryPoint": 4810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb": {
									"entryPoint": 4914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address_payable": {
									"entryPoint": 4030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:10648:1",
										"nodeType": "YulBlock",
										"src": "0:10648:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "597:87:1",
													"nodeType": "YulBlock",
													"src": "597:87:1",
													"statements": [
														{
															"nativeSrc": "607:29:1",
															"nodeType": "YulAssignment",
															"src": "607:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:1"
																},
																"nativeSrc": "616:20:1",
																"nodeType": "YulFunctionCall",
																"src": "616:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:1"
																},
																"nativeSrc": "645:33:1",
																"nodeType": "YulFunctionCall",
																"src": "645:33:1"
															},
															"nativeSrc": "645:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:1",
														"nodeType": "YulTypedName",
														"src": "575:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:1",
														"nodeType": "YulTypedName",
														"src": "583:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:1",
														"nodeType": "YulTypedName",
														"src": "591:5:1",
														"type": ""
													}
												],
												"src": "545:139:1"
											},
											{
												"body": {
													"nativeSrc": "735:81:1",
													"nodeType": "YulBlock",
													"src": "735:81:1",
													"statements": [
														{
															"nativeSrc": "745:65:1",
															"nodeType": "YulAssignment",
															"src": "745:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "760:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "760:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "767:42:1",
																		"nodeType": "YulLiteral",
																		"src": "767:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "756:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "756:3:1"
																},
																"nativeSrc": "756:54:1",
																"nodeType": "YulFunctionCall",
																"src": "756:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "745:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "745:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "690:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "717:5:1",
														"nodeType": "YulTypedName",
														"src": "717:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "727:7:1",
														"nodeType": "YulTypedName",
														"src": "727:7:1",
														"type": ""
													}
												],
												"src": "690:126:1"
											},
											{
												"body": {
													"nativeSrc": "875:51:1",
													"nodeType": "YulBlock",
													"src": "875:51:1",
													"statements": [
														{
															"nativeSrc": "885:35:1",
															"nodeType": "YulAssignment",
															"src": "885:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "914:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "914:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "896:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "896:17:1"
																},
																"nativeSrc": "896:24:1",
																"nodeType": "YulFunctionCall",
																"src": "896:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "885:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "885:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address_payable",
												"nativeSrc": "822:104:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "857:5:1",
														"nodeType": "YulTypedName",
														"src": "857:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "867:7:1",
														"nodeType": "YulTypedName",
														"src": "867:7:1",
														"type": ""
													}
												],
												"src": "822:104:1"
											},
											{
												"body": {
													"nativeSrc": "983:87:1",
													"nodeType": "YulBlock",
													"src": "983:87:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1048:16:1",
																"nodeType": "YulBlock",
																"src": "1048:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1057:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1057:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1060:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1060:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1050:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1050:6:1"
																			},
																			"nativeSrc": "1050:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1050:12:1"
																		},
																		"nativeSrc": "1050:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1050:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1006:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1006:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1039:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1039:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address_payable",
																					"nativeSrc": "1013:25:1",
																					"nodeType": "YulIdentifier",
																					"src": "1013:25:1"
																				},
																				"nativeSrc": "1013:32:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1013:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1003:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1003:2:1"
																		},
																		"nativeSrc": "1003:43:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1003:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "996:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "996:6:1"
																},
																"nativeSrc": "996:51:1",
																"nodeType": "YulFunctionCall",
																"src": "996:51:1"
															},
															"nativeSrc": "993:71:1",
															"nodeType": "YulIf",
															"src": "993:71:1"
														}
													]
												},
												"name": "validator_revert_t_address_payable",
												"nativeSrc": "932:138:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "976:5:1",
														"nodeType": "YulTypedName",
														"src": "976:5:1",
														"type": ""
													}
												],
												"src": "932:138:1"
											},
											{
												"body": {
													"nativeSrc": "1136:95:1",
													"nodeType": "YulBlock",
													"src": "1136:95:1",
													"statements": [
														{
															"nativeSrc": "1146:29:1",
															"nodeType": "YulAssignment",
															"src": "1146:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1168:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1168:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1155:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1155:12:1"
																},
																"nativeSrc": "1155:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1155:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1146:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1146:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1219:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1219:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address_payable",
																	"nativeSrc": "1184:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "1184:34:1"
																},
																"nativeSrc": "1184:41:1",
																"nodeType": "YulFunctionCall",
																"src": "1184:41:1"
															},
															"nativeSrc": "1184:41:1",
															"nodeType": "YulExpressionStatement",
															"src": "1184:41:1"
														}
													]
												},
												"name": "abi_decode_t_address_payable",
												"nativeSrc": "1076:155:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1114:6:1",
														"nodeType": "YulTypedName",
														"src": "1114:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1122:3:1",
														"nodeType": "YulTypedName",
														"src": "1122:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1130:5:1",
														"nodeType": "YulTypedName",
														"src": "1130:5:1",
														"type": ""
													}
												],
												"src": "1076:155:1"
											},
											{
												"body": {
													"nativeSrc": "1328:399:1",
													"nodeType": "YulBlock",
													"src": "1328:399:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1374:83:1",
																"nodeType": "YulBlock",
																"src": "1374:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1376:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "1376:77:1"
																			},
																			"nativeSrc": "1376:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1376:79:1"
																		},
																		"nativeSrc": "1376:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1376:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1349:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1349:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1358:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1358:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1345:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1345:3:1"
																		},
																		"nativeSrc": "1345:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1345:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1370:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1370:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1341:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1341:3:1"
																},
																"nativeSrc": "1341:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1341:32:1"
															},
															"nativeSrc": "1338:119:1",
															"nodeType": "YulIf",
															"src": "1338:119:1"
														},
														{
															"nativeSrc": "1467:117:1",
															"nodeType": "YulBlock",
															"src": "1467:117:1",
															"statements": [
																{
																	"nativeSrc": "1482:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1482:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1496:1:1",
																		"nodeType": "YulLiteral",
																		"src": "1496:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1486:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1486:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1511:63:1",
																	"nodeType": "YulAssignment",
																	"src": "1511:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1546:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1546:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1557:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1557:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1542:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1542:3:1"
																				},
																				"nativeSrc": "1542:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1542:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1566:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1566:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1521:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "1521:20:1"
																		},
																		"nativeSrc": "1521:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1521:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1511:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1511:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1594:126:1",
															"nodeType": "YulBlock",
															"src": "1594:126:1",
															"statements": [
																{
																	"nativeSrc": "1609:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1609:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1623:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1623:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1613:6:1",
																			"nodeType": "YulTypedName",
																			"src": "1613:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1639:71:1",
																	"nodeType": "YulAssignment",
																	"src": "1639:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1682:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1682:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1693:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1693:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1678:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "1678:3:1"
																				},
																				"nativeSrc": "1678:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1678:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1702:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1702:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_payable",
																			"nativeSrc": "1649:28:1",
																			"nodeType": "YulIdentifier",
																			"src": "1649:28:1"
																		},
																		"nativeSrc": "1649:61:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1639:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "1639:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address_payable",
												"nativeSrc": "1237:490:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1290:9:1",
														"nodeType": "YulTypedName",
														"src": "1290:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1301:7:1",
														"nodeType": "YulTypedName",
														"src": "1301:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1313:6:1",
														"nodeType": "YulTypedName",
														"src": "1313:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1321:6:1",
														"nodeType": "YulTypedName",
														"src": "1321:6:1",
														"type": ""
													}
												],
												"src": "1237:490:1"
											},
											{
												"body": {
													"nativeSrc": "1792:40:1",
													"nodeType": "YulBlock",
													"src": "1792:40:1",
													"statements": [
														{
															"nativeSrc": "1803:22:1",
															"nodeType": "YulAssignment",
															"src": "1803:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1819:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1819:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1813:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1813:5:1"
																},
																"nativeSrc": "1813:12:1",
																"nodeType": "YulFunctionCall",
																"src": "1813:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1803:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1803:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1733:99:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1775:5:1",
														"nodeType": "YulTypedName",
														"src": "1775:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1785:6:1",
														"nodeType": "YulTypedName",
														"src": "1785:6:1",
														"type": ""
													}
												],
												"src": "1733:99:1"
											},
											{
												"body": {
													"nativeSrc": "1934:73:1",
													"nodeType": "YulBlock",
													"src": "1934:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1951:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1951:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1956:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1956:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:1"
																},
																"nativeSrc": "1944:19:1",
																"nodeType": "YulFunctionCall",
																"src": "1944:19:1"
															},
															"nativeSrc": "1944:19:1",
															"nodeType": "YulExpressionStatement",
															"src": "1944:19:1"
														},
														{
															"nativeSrc": "1972:29:1",
															"nodeType": "YulAssignment",
															"src": "1972:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1991:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1991:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:1",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1987:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1987:3:1"
																},
																"nativeSrc": "1987:14:1",
																"nodeType": "YulFunctionCall",
																"src": "1987:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1972:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "1972:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1838:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1906:3:1",
														"nodeType": "YulTypedName",
														"src": "1906:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1911:6:1",
														"nodeType": "YulTypedName",
														"src": "1911:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1922:11:1",
														"nodeType": "YulTypedName",
														"src": "1922:11:1",
														"type": ""
													}
												],
												"src": "1838:169:1"
											},
											{
												"body": {
													"nativeSrc": "2075:77:1",
													"nodeType": "YulBlock",
													"src": "2075:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2092:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2092:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2097:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2097:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2102:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2102:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2086:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "2086:5:1"
																},
																"nativeSrc": "2086:23:1",
																"nodeType": "YulFunctionCall",
																"src": "2086:23:1"
															},
															"nativeSrc": "2086:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "2086:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2129:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "2129:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2134:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2134:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2125:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2125:3:1"
																		},
																		"nativeSrc": "2125:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2125:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2143:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2143:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2118:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2118:6:1"
																},
																"nativeSrc": "2118:27:1",
																"nodeType": "YulFunctionCall",
																"src": "2118:27:1"
															},
															"nativeSrc": "2118:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "2118:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2013:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2057:3:1",
														"nodeType": "YulTypedName",
														"src": "2057:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2062:3:1",
														"nodeType": "YulTypedName",
														"src": "2062:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2067:6:1",
														"nodeType": "YulTypedName",
														"src": "2067:6:1",
														"type": ""
													}
												],
												"src": "2013:139:1"
											},
											{
												"body": {
													"nativeSrc": "2206:54:1",
													"nodeType": "YulBlock",
													"src": "2206:54:1",
													"statements": [
														{
															"nativeSrc": "2216:38:1",
															"nodeType": "YulAssignment",
															"src": "2216:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2234:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2234:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2241:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2241:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2230:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2230:3:1"
																		},
																		"nativeSrc": "2230:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2230:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2250:2:1",
																				"nodeType": "YulLiteral",
																				"src": "2250:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2246:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2246:3:1"
																		},
																		"nativeSrc": "2246:7:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2246:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2226:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2226:3:1"
																},
																"nativeSrc": "2226:28:1",
																"nodeType": "YulFunctionCall",
																"src": "2226:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2216:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2216:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "2158:102:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2189:5:1",
														"nodeType": "YulTypedName",
														"src": "2189:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2199:6:1",
														"nodeType": "YulTypedName",
														"src": "2199:6:1",
														"type": ""
													}
												],
												"src": "2158:102:1"
											},
											{
												"body": {
													"nativeSrc": "2358:285:1",
													"nodeType": "YulBlock",
													"src": "2358:285:1",
													"statements": [
														{
															"nativeSrc": "2368:53:1",
															"nodeType": "YulVariableDeclaration",
															"src": "2368:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2415:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "2415:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2382:32:1",
																	"nodeType": "YulIdentifier",
																	"src": "2382:32:1"
																},
																"nativeSrc": "2382:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2382:39:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2372:6:1",
																	"nodeType": "YulTypedName",
																	"src": "2372:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2430:78:1",
															"nodeType": "YulAssignment",
															"src": "2430:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2496:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2496:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2501:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2501:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2437:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "2437:58:1"
																},
																"nativeSrc": "2437:71:1",
																"nodeType": "YulFunctionCall",
																"src": "2437:71:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2430:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2430:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2556:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "2556:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2563:4:1",
																				"nodeType": "YulLiteral",
																				"src": "2563:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2552:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2552:3:1"
																		},
																		"nativeSrc": "2552:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2552:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2570:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2570:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2575:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2575:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2517:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "2517:34:1"
																},
																"nativeSrc": "2517:65:1",
																"nodeType": "YulFunctionCall",
																"src": "2517:65:1"
															},
															"nativeSrc": "2517:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "2517:65:1"
														},
														{
															"nativeSrc": "2591:46:1",
															"nodeType": "YulAssignment",
															"src": "2591:46:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2602:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "2602:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2629:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "2629:6:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2607:21:1",
																			"nodeType": "YulIdentifier",
																			"src": "2607:21:1"
																		},
																		"nativeSrc": "2607:29:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2607:29:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2598:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2598:3:1"
																},
																"nativeSrc": "2598:39:1",
																"nodeType": "YulFunctionCall",
																"src": "2598:39:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2591:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2591:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2266:377:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2339:5:1",
														"nodeType": "YulTypedName",
														"src": "2339:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2346:3:1",
														"nodeType": "YulTypedName",
														"src": "2346:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2354:3:1",
														"nodeType": "YulTypedName",
														"src": "2354:3:1",
														"type": ""
													}
												],
												"src": "2266:377:1"
											},
											{
												"body": {
													"nativeSrc": "2767:195:1",
													"nodeType": "YulBlock",
													"src": "2767:195:1",
													"statements": [
														{
															"nativeSrc": "2777:26:1",
															"nodeType": "YulAssignment",
															"src": "2777:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2789:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "2789:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2800:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2800:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2785:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "2785:3:1"
																},
																"nativeSrc": "2785:18:1",
																"nodeType": "YulFunctionCall",
																"src": "2785:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2777:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2777:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2824:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2824:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2835:1:1",
																				"nodeType": "YulLiteral",
																				"src": "2835:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2820:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2820:3:1"
																		},
																		"nativeSrc": "2820:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2820:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2843:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "2843:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2849:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2849:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2839:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "2839:3:1"
																		},
																		"nativeSrc": "2839:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2839:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2813:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "2813:6:1"
																},
																"nativeSrc": "2813:47:1",
																"nodeType": "YulFunctionCall",
																"src": "2813:47:1"
															},
															"nativeSrc": "2813:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "2813:47:1"
														},
														{
															"nativeSrc": "2869:86:1",
															"nodeType": "YulAssignment",
															"src": "2869:86:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2941:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "2941:6:1"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2950:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "2950:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2877:63:1",
																	"nodeType": "YulIdentifier",
																	"src": "2877:63:1"
																},
																"nativeSrc": "2877:78:1",
																"nodeType": "YulFunctionCall",
																"src": "2877:78:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2869:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "2869:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2649:313:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2739:9:1",
														"nodeType": "YulTypedName",
														"src": "2739:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2751:6:1",
														"nodeType": "YulTypedName",
														"src": "2751:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2762:4:1",
														"nodeType": "YulTypedName",
														"src": "2762:4:1",
														"type": ""
													}
												],
												"src": "2649:313:1"
											},
											{
												"body": {
													"nativeSrc": "3013:51:1",
													"nodeType": "YulBlock",
													"src": "3013:51:1",
													"statements": [
														{
															"nativeSrc": "3023:35:1",
															"nodeType": "YulAssignment",
															"src": "3023:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3052:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3052:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3034:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "3034:17:1"
																},
																"nativeSrc": "3034:24:1",
																"nodeType": "YulFunctionCall",
																"src": "3034:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3023:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3023:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "2968:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2995:5:1",
														"nodeType": "YulTypedName",
														"src": "2995:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3005:7:1",
														"nodeType": "YulTypedName",
														"src": "3005:7:1",
														"type": ""
													}
												],
												"src": "2968:96:1"
											},
											{
												"body": {
													"nativeSrc": "3113:79:1",
													"nodeType": "YulBlock",
													"src": "3113:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3170:16:1",
																"nodeType": "YulBlock",
																"src": "3170:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3179:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3179:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3182:1:1",
																					"nodeType": "YulLiteral",
																					"src": "3182:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3172:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "3172:6:1"
																			},
																			"nativeSrc": "3172:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3172:12:1"
																		},
																		"nativeSrc": "3172:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3172:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3136:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3136:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3161:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "3161:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3143:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "3143:17:1"
																				},
																				"nativeSrc": "3143:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3143:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3133:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "3133:2:1"
																		},
																		"nativeSrc": "3133:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3133:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3126:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3126:6:1"
																},
																"nativeSrc": "3126:43:1",
																"nodeType": "YulFunctionCall",
																"src": "3126:43:1"
															},
															"nativeSrc": "3123:63:1",
															"nodeType": "YulIf",
															"src": "3123:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3070:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3106:5:1",
														"nodeType": "YulTypedName",
														"src": "3106:5:1",
														"type": ""
													}
												],
												"src": "3070:122:1"
											},
											{
												"body": {
													"nativeSrc": "3250:87:1",
													"nodeType": "YulBlock",
													"src": "3250:87:1",
													"statements": [
														{
															"nativeSrc": "3260:29:1",
															"nodeType": "YulAssignment",
															"src": "3260:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3282:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "3282:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3269:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "3269:12:1"
																},
																"nativeSrc": "3269:20:1",
																"nodeType": "YulFunctionCall",
																"src": "3269:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3260:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "3260:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3325:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "3325:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3298:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "3298:26:1"
																},
																"nativeSrc": "3298:33:1",
																"nodeType": "YulFunctionCall",
																"src": "3298:33:1"
															},
															"nativeSrc": "3298:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "3298:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3198:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3228:6:1",
														"nodeType": "YulTypedName",
														"src": "3228:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3236:3:1",
														"nodeType": "YulTypedName",
														"src": "3236:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3244:5:1",
														"nodeType": "YulTypedName",
														"src": "3244:5:1",
														"type": ""
													}
												],
												"src": "3198:139:1"
											},
											{
												"body": {
													"nativeSrc": "3426:391:1",
													"nodeType": "YulBlock",
													"src": "3426:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "3472:83:1",
																"nodeType": "YulBlock",
																"src": "3472:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3474:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "3474:77:1"
																			},
																			"nativeSrc": "3474:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "3474:79:1"
																		},
																		"nativeSrc": "3474:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "3474:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3447:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3447:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3456:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "3456:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3443:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "3443:3:1"
																		},
																		"nativeSrc": "3443:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3443:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3468:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3468:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3439:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "3439:3:1"
																},
																"nativeSrc": "3439:32:1",
																"nodeType": "YulFunctionCall",
																"src": "3439:32:1"
															},
															"nativeSrc": "3436:119:1",
															"nodeType": "YulIf",
															"src": "3436:119:1"
														},
														{
															"nativeSrc": "3565:117:1",
															"nodeType": "YulBlock",
															"src": "3565:117:1",
															"statements": [
																{
																	"nativeSrc": "3580:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3580:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3594:1:1",
																		"nodeType": "YulLiteral",
																		"src": "3594:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3584:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3584:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3609:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3609:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3644:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3644:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3655:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3655:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3640:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3640:3:1"
																				},
																				"nativeSrc": "3640:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3640:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3664:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3664:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3619:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3619:20:1"
																		},
																		"nativeSrc": "3619:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3619:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3609:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3609:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3692:118:1",
															"nodeType": "YulBlock",
															"src": "3692:118:1",
															"statements": [
																{
																	"nativeSrc": "3707:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3707:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3721:2:1",
																		"nodeType": "YulLiteral",
																		"src": "3721:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3711:6:1",
																			"nodeType": "YulTypedName",
																			"src": "3711:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3737:63:1",
																	"nodeType": "YulAssignment",
																	"src": "3737:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3772:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "3772:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3783:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "3783:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3768:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "3768:3:1"
																				},
																				"nativeSrc": "3768:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "3768:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3792:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "3792:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3747:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "3747:20:1"
																		},
																		"nativeSrc": "3747:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3747:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3737:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3737:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "3343:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3388:9:1",
														"nodeType": "YulTypedName",
														"src": "3388:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3399:7:1",
														"nodeType": "YulTypedName",
														"src": "3399:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3411:6:1",
														"nodeType": "YulTypedName",
														"src": "3411:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3419:6:1",
														"nodeType": "YulTypedName",
														"src": "3419:6:1",
														"type": ""
													}
												],
												"src": "3343:474:1"
											},
											{
												"body": {
													"nativeSrc": "3865:48:1",
													"nodeType": "YulBlock",
													"src": "3865:48:1",
													"statements": [
														{
															"nativeSrc": "3875:32:1",
															"nodeType": "YulAssignment",
															"src": "3875:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3900:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "3900:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3893:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "3893:6:1"
																		},
																		"nativeSrc": "3893:13:1",
																		"nodeType": "YulFunctionCall",
																		"src": "3893:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3886:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3886:6:1"
																},
																"nativeSrc": "3886:21:1",
																"nodeType": "YulFunctionCall",
																"src": "3886:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3875:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "3875:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3823:90:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3847:5:1",
														"nodeType": "YulTypedName",
														"src": "3847:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3857:7:1",
														"nodeType": "YulTypedName",
														"src": "3857:7:1",
														"type": ""
													}
												],
												"src": "3823:90:1"
											},
											{
												"body": {
													"nativeSrc": "3978:50:1",
													"nodeType": "YulBlock",
													"src": "3978:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3995:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "3995:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4015:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4015:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "4000:14:1",
																			"nodeType": "YulIdentifier",
																			"src": "4000:14:1"
																		},
																		"nativeSrc": "4000:21:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4000:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3988:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "3988:6:1"
																},
																"nativeSrc": "3988:34:1",
																"nodeType": "YulFunctionCall",
																"src": "3988:34:1"
															},
															"nativeSrc": "3988:34:1",
															"nodeType": "YulExpressionStatement",
															"src": "3988:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3919:109:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3966:5:1",
														"nodeType": "YulTypedName",
														"src": "3966:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3973:3:1",
														"nodeType": "YulTypedName",
														"src": "3973:3:1",
														"type": ""
													}
												],
												"src": "3919:109:1"
											},
											{
												"body": {
													"nativeSrc": "4126:118:1",
													"nodeType": "YulBlock",
													"src": "4126:118:1",
													"statements": [
														{
															"nativeSrc": "4136:26:1",
															"nodeType": "YulAssignment",
															"src": "4136:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4148:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4148:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4159:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4159:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4144:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4144:3:1"
																},
																"nativeSrc": "4144:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4144:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4136:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4136:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4210:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4210:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4223:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4223:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4234:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4234:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4219:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:1"
																		},
																		"nativeSrc": "4219:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "4172:37:1",
																	"nodeType": "YulIdentifier",
																	"src": "4172:37:1"
																},
																"nativeSrc": "4172:65:1",
																"nodeType": "YulFunctionCall",
																"src": "4172:65:1"
															},
															"nativeSrc": "4172:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "4172:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "4034:210:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4098:9:1",
														"nodeType": "YulTypedName",
														"src": "4098:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4110:6:1",
														"nodeType": "YulTypedName",
														"src": "4110:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4121:4:1",
														"nodeType": "YulTypedName",
														"src": "4121:4:1",
														"type": ""
													}
												],
												"src": "4034:210:1"
											},
											{
												"body": {
													"nativeSrc": "4315:53:1",
													"nodeType": "YulBlock",
													"src": "4315:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4332:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "4332:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4355:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "4355:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4337:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "4337:17:1"
																		},
																		"nativeSrc": "4337:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4337:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4325:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "4325:6:1"
																},
																"nativeSrc": "4325:37:1",
																"nodeType": "YulFunctionCall",
																"src": "4325:37:1"
															},
															"nativeSrc": "4325:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "4325:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4250:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4303:5:1",
														"nodeType": "YulTypedName",
														"src": "4303:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4310:3:1",
														"nodeType": "YulTypedName",
														"src": "4310:3:1",
														"type": ""
													}
												],
												"src": "4250:118:1"
											},
											{
												"body": {
													"nativeSrc": "4472:124:1",
													"nodeType": "YulBlock",
													"src": "4472:124:1",
													"statements": [
														{
															"nativeSrc": "4482:26:1",
															"nodeType": "YulAssignment",
															"src": "4482:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4494:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "4494:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4505:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4505:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4490:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4490:3:1"
																},
																"nativeSrc": "4490:18:1",
																"nodeType": "YulFunctionCall",
																"src": "4490:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4482:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "4482:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4562:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "4562:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4575:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4575:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4586:1:1",
																				"nodeType": "YulLiteral",
																				"src": "4586:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4571:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4571:3:1"
																		},
																		"nativeSrc": "4571:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4571:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4518:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "4518:43:1"
																},
																"nativeSrc": "4518:71:1",
																"nodeType": "YulFunctionCall",
																"src": "4518:71:1"
															},
															"nativeSrc": "4518:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "4518:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4374:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4444:9:1",
														"nodeType": "YulTypedName",
														"src": "4444:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4456:6:1",
														"nodeType": "YulTypedName",
														"src": "4456:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4467:4:1",
														"nodeType": "YulTypedName",
														"src": "4467:4:1",
														"type": ""
													}
												],
												"src": "4374:222:1"
											},
											{
												"body": {
													"nativeSrc": "4702:519:1",
													"nodeType": "YulBlock",
													"src": "4702:519:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "4748:83:1",
																"nodeType": "YulBlock",
																"src": "4748:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4750:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "4750:77:1"
																			},
																			"nativeSrc": "4750:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "4750:79:1"
																		},
																		"nativeSrc": "4750:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "4750:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4723:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4723:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4732:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "4732:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4719:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "4719:3:1"
																		},
																		"nativeSrc": "4719:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4719:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4744:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4744:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4715:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "4715:3:1"
																},
																"nativeSrc": "4715:32:1",
																"nodeType": "YulFunctionCall",
																"src": "4715:32:1"
															},
															"nativeSrc": "4712:119:1",
															"nodeType": "YulIf",
															"src": "4712:119:1"
														},
														{
															"nativeSrc": "4841:117:1",
															"nodeType": "YulBlock",
															"src": "4841:117:1",
															"statements": [
																{
																	"nativeSrc": "4856:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4856:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4870:1:1",
																		"nodeType": "YulLiteral",
																		"src": "4870:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4860:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4860:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4885:63:1",
																	"nodeType": "YulAssignment",
																	"src": "4885:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4920:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "4920:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4931:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "4931:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4916:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "4916:3:1"
																				},
																				"nativeSrc": "4916:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "4916:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4940:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "4940:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4895:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "4895:20:1"
																		},
																		"nativeSrc": "4895:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "4895:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4885:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "4885:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4968:118:1",
															"nodeType": "YulBlock",
															"src": "4968:118:1",
															"statements": [
																{
																	"nativeSrc": "4983:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4983:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4997:2:1",
																		"nodeType": "YulLiteral",
																		"src": "4997:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4987:6:1",
																			"nodeType": "YulTypedName",
																			"src": "4987:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5013:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5013:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5048:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5048:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5059:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5059:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5044:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5044:3:1"
																				},
																				"nativeSrc": "5044:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5044:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5068:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5068:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5023:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5023:20:1"
																		},
																		"nativeSrc": "5023:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5023:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5013:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5013:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5096:118:1",
															"nodeType": "YulBlock",
															"src": "5096:118:1",
															"statements": [
																{
																	"nativeSrc": "5111:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5111:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5125:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5125:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5115:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5115:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5141:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5141:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5176:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5176:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5187:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5187:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5172:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5172:3:1"
																				},
																				"nativeSrc": "5172:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5172:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5196:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5196:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5151:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5151:20:1"
																		},
																		"nativeSrc": "5151:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5151:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5141:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5141:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4602:619:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4656:9:1",
														"nodeType": "YulTypedName",
														"src": "4656:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4667:7:1",
														"nodeType": "YulTypedName",
														"src": "4667:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4679:6:1",
														"nodeType": "YulTypedName",
														"src": "4679:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4687:6:1",
														"nodeType": "YulTypedName",
														"src": "4687:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4695:6:1",
														"nodeType": "YulTypedName",
														"src": "4695:6:1",
														"type": ""
													}
												],
												"src": "4602:619:1"
											},
											{
												"body": {
													"nativeSrc": "5270:43:1",
													"nodeType": "YulBlock",
													"src": "5270:43:1",
													"statements": [
														{
															"nativeSrc": "5280:27:1",
															"nodeType": "YulAssignment",
															"src": "5280:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5295:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "5295:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5302:4:1",
																		"nodeType": "YulLiteral",
																		"src": "5302:4:1",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5291:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5291:3:1"
																},
																"nativeSrc": "5291:16:1",
																"nodeType": "YulFunctionCall",
																"src": "5291:16:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5280:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "5280:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5227:86:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5252:5:1",
														"nodeType": "YulTypedName",
														"src": "5252:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5262:7:1",
														"nodeType": "YulTypedName",
														"src": "5262:7:1",
														"type": ""
													}
												],
												"src": "5227:86:1"
											},
											{
												"body": {
													"nativeSrc": "5380:51:1",
													"nodeType": "YulBlock",
													"src": "5380:51:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5397:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "5397:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5418:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "5418:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5402:15:1",
																			"nodeType": "YulIdentifier",
																			"src": "5402:15:1"
																		},
																		"nativeSrc": "5402:22:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5402:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5390:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "5390:6:1"
																},
																"nativeSrc": "5390:35:1",
																"nodeType": "YulFunctionCall",
																"src": "5390:35:1"
															},
															"nativeSrc": "5390:35:1",
															"nodeType": "YulExpressionStatement",
															"src": "5390:35:1"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5319:112:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5368:5:1",
														"nodeType": "YulTypedName",
														"src": "5368:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5375:3:1",
														"nodeType": "YulTypedName",
														"src": "5375:3:1",
														"type": ""
													}
												],
												"src": "5319:112:1"
											},
											{
												"body": {
													"nativeSrc": "5531:120:1",
													"nodeType": "YulBlock",
													"src": "5531:120:1",
													"statements": [
														{
															"nativeSrc": "5541:26:1",
															"nodeType": "YulAssignment",
															"src": "5541:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5553:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "5553:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5564:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5564:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5549:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5549:3:1"
																},
																"nativeSrc": "5549:18:1",
																"nodeType": "YulFunctionCall",
																"src": "5549:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5541:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "5541:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5617:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "5617:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5630:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5630:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5641:1:1",
																				"nodeType": "YulLiteral",
																				"src": "5641:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5626:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5626:3:1"
																		},
																		"nativeSrc": "5626:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5626:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5577:39:1",
																	"nodeType": "YulIdentifier",
																	"src": "5577:39:1"
																},
																"nativeSrc": "5577:67:1",
																"nodeType": "YulFunctionCall",
																"src": "5577:67:1"
															},
															"nativeSrc": "5577:67:1",
															"nodeType": "YulExpressionStatement",
															"src": "5577:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5437:214:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5503:9:1",
														"nodeType": "YulTypedName",
														"src": "5503:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5515:6:1",
														"nodeType": "YulTypedName",
														"src": "5515:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5526:4:1",
														"nodeType": "YulTypedName",
														"src": "5526:4:1",
														"type": ""
													}
												],
												"src": "5437:214:1"
											},
											{
												"body": {
													"nativeSrc": "5723:263:1",
													"nodeType": "YulBlock",
													"src": "5723:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "5769:83:1",
																"nodeType": "YulBlock",
																"src": "5769:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5771:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "5771:77:1"
																			},
																			"nativeSrc": "5771:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "5771:79:1"
																		},
																		"nativeSrc": "5771:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "5771:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5744:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5744:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5753:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "5753:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5740:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "5740:3:1"
																		},
																		"nativeSrc": "5740:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5740:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5765:2:1",
																		"nodeType": "YulLiteral",
																		"src": "5765:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5736:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "5736:3:1"
																},
																"nativeSrc": "5736:32:1",
																"nodeType": "YulFunctionCall",
																"src": "5736:32:1"
															},
															"nativeSrc": "5733:119:1",
															"nodeType": "YulIf",
															"src": "5733:119:1"
														},
														{
															"nativeSrc": "5862:117:1",
															"nodeType": "YulBlock",
															"src": "5862:117:1",
															"statements": [
																{
																	"nativeSrc": "5877:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5877:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5891:1:1",
																		"nodeType": "YulLiteral",
																		"src": "5891:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5881:6:1",
																			"nodeType": "YulTypedName",
																			"src": "5881:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5906:63:1",
																	"nodeType": "YulAssignment",
																	"src": "5906:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5941:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "5941:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5952:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "5952:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5937:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "5937:3:1"
																				},
																				"nativeSrc": "5937:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "5937:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5961:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "5961:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5916:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "5916:20:1"
																		},
																		"nativeSrc": "5916:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "5916:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5906:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "5906:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5657:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5693:9:1",
														"nodeType": "YulTypedName",
														"src": "5693:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5704:7:1",
														"nodeType": "YulTypedName",
														"src": "5704:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5716:6:1",
														"nodeType": "YulTypedName",
														"src": "5716:6:1",
														"type": ""
													}
												],
												"src": "5657:329:1"
											},
											{
												"body": {
													"nativeSrc": "6058:263:1",
													"nodeType": "YulBlock",
													"src": "6058:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6104:83:1",
																"nodeType": "YulBlock",
																"src": "6104:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6106:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6106:77:1"
																			},
																			"nativeSrc": "6106:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6106:79:1"
																		},
																		"nativeSrc": "6106:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6106:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6079:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6079:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6088:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6088:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6075:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6075:3:1"
																		},
																		"nativeSrc": "6075:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6075:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6100:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6100:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6071:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6071:3:1"
																},
																"nativeSrc": "6071:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6071:32:1"
															},
															"nativeSrc": "6068:119:1",
															"nodeType": "YulIf",
															"src": "6068:119:1"
														},
														{
															"nativeSrc": "6197:117:1",
															"nodeType": "YulBlock",
															"src": "6197:117:1",
															"statements": [
																{
																	"nativeSrc": "6212:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6212:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6226:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6226:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6216:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6216:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6241:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6241:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6276:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6276:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6287:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6287:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6272:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6272:3:1"
																				},
																				"nativeSrc": "6272:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6272:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6296:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6296:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6251:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6251:20:1"
																		},
																		"nativeSrc": "6251:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6251:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6241:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6241:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5992:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6028:9:1",
														"nodeType": "YulTypedName",
														"src": "6028:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6039:7:1",
														"nodeType": "YulTypedName",
														"src": "6039:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6051:6:1",
														"nodeType": "YulTypedName",
														"src": "6051:6:1",
														"type": ""
													}
												],
												"src": "5992:329:1"
											},
											{
												"body": {
													"nativeSrc": "6392:53:1",
													"nodeType": "YulBlock",
													"src": "6392:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6409:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "6409:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6432:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "6432:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6414:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "6414:17:1"
																		},
																		"nativeSrc": "6414:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6414:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6402:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "6402:6:1"
																},
																"nativeSrc": "6402:37:1",
																"nodeType": "YulFunctionCall",
																"src": "6402:37:1"
															},
															"nativeSrc": "6402:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "6402:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6327:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6380:5:1",
														"nodeType": "YulTypedName",
														"src": "6380:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6387:3:1",
														"nodeType": "YulTypedName",
														"src": "6387:3:1",
														"type": ""
													}
												],
												"src": "6327:118:1"
											},
											{
												"body": {
													"nativeSrc": "6549:124:1",
													"nodeType": "YulBlock",
													"src": "6549:124:1",
													"statements": [
														{
															"nativeSrc": "6559:26:1",
															"nodeType": "YulAssignment",
															"src": "6559:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6571:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "6571:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6582:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6582:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6567:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6567:3:1"
																},
																"nativeSrc": "6567:18:1",
																"nodeType": "YulFunctionCall",
																"src": "6567:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6559:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "6559:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6639:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "6639:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6652:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6652:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6663:1:1",
																				"nodeType": "YulLiteral",
																				"src": "6663:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6648:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6648:3:1"
																		},
																		"nativeSrc": "6648:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6648:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6595:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "6595:43:1"
																},
																"nativeSrc": "6595:71:1",
																"nodeType": "YulFunctionCall",
																"src": "6595:71:1"
															},
															"nativeSrc": "6595:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "6595:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6451:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6521:9:1",
														"nodeType": "YulTypedName",
														"src": "6521:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6533:6:1",
														"nodeType": "YulTypedName",
														"src": "6533:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6544:4:1",
														"nodeType": "YulTypedName",
														"src": "6544:4:1",
														"type": ""
													}
												],
												"src": "6451:222:1"
											},
											{
												"body": {
													"nativeSrc": "6762:391:1",
													"nodeType": "YulBlock",
													"src": "6762:391:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "6808:83:1",
																"nodeType": "YulBlock",
																"src": "6808:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6810:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "6810:77:1"
																			},
																			"nativeSrc": "6810:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "6810:79:1"
																		},
																		"nativeSrc": "6810:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "6810:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6783:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "6783:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6792:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "6792:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6779:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "6779:3:1"
																		},
																		"nativeSrc": "6779:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6779:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6804:2:1",
																		"nodeType": "YulLiteral",
																		"src": "6804:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6775:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "6775:3:1"
																},
																"nativeSrc": "6775:32:1",
																"nodeType": "YulFunctionCall",
																"src": "6775:32:1"
															},
															"nativeSrc": "6772:119:1",
															"nodeType": "YulIf",
															"src": "6772:119:1"
														},
														{
															"nativeSrc": "6901:117:1",
															"nodeType": "YulBlock",
															"src": "6901:117:1",
															"statements": [
																{
																	"nativeSrc": "6916:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6916:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6930:1:1",
																		"nodeType": "YulLiteral",
																		"src": "6930:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6920:6:1",
																			"nodeType": "YulTypedName",
																			"src": "6920:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6945:63:1",
																	"nodeType": "YulAssignment",
																	"src": "6945:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6980:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "6980:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6991:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "6991:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6976:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "6976:3:1"
																				},
																				"nativeSrc": "6976:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "6976:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7000:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7000:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6955:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "6955:20:1"
																		},
																		"nativeSrc": "6955:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "6955:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6945:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "6945:6:1"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7028:118:1",
															"nodeType": "YulBlock",
															"src": "7028:118:1",
															"statements": [
																{
																	"nativeSrc": "7043:16:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7043:16:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7057:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7057:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7047:6:1",
																			"nodeType": "YulTypedName",
																			"src": "7047:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7073:63:1",
																	"nodeType": "YulAssignment",
																	"src": "7073:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7108:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "7108:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7119:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "7119:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7104:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "7104:3:1"
																				},
																				"nativeSrc": "7104:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "7104:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7128:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "7128:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7083:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "7083:20:1"
																		},
																		"nativeSrc": "7083:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7083:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7073:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "7073:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6679:474:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6724:9:1",
														"nodeType": "YulTypedName",
														"src": "6724:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6735:7:1",
														"nodeType": "YulTypedName",
														"src": "6735:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6747:6:1",
														"nodeType": "YulTypedName",
														"src": "6747:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6755:6:1",
														"nodeType": "YulTypedName",
														"src": "6755:6:1",
														"type": ""
													}
												],
												"src": "6679:474:1"
											},
											{
												"body": {
													"nativeSrc": "7265:68:1",
													"nodeType": "YulBlock",
													"src": "7265:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7287:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "7287:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7295:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7295:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7283:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7283:3:1"
																		},
																		"nativeSrc": "7283:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7283:14:1"
																	},
																	{
																		"hexValue": "4f6e6c79206f776e65722063616e2077697468647261772e",
																		"kind": "string",
																		"nativeSrc": "7299:26:1",
																		"nodeType": "YulLiteral",
																		"src": "7299:26:1",
																		"type": "",
																		"value": "Only owner can withdraw."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7276:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7276:6:1"
																},
																"nativeSrc": "7276:50:1",
																"nodeType": "YulFunctionCall",
																"src": "7276:50:1"
															},
															"nativeSrc": "7276:50:1",
															"nodeType": "YulExpressionStatement",
															"src": "7276:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91",
												"nativeSrc": "7159:174:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7257:6:1",
														"nodeType": "YulTypedName",
														"src": "7257:6:1",
														"type": ""
													}
												],
												"src": "7159:174:1"
											},
											{
												"body": {
													"nativeSrc": "7485:220:1",
													"nodeType": "YulBlock",
													"src": "7485:220:1",
													"statements": [
														{
															"nativeSrc": "7495:74:1",
															"nodeType": "YulAssignment",
															"src": "7495:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7561:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7561:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7566:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7566:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7502:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "7502:58:1"
																},
																"nativeSrc": "7502:67:1",
																"nodeType": "YulFunctionCall",
																"src": "7502:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7495:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7495:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7667:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7667:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91",
																	"nativeSrc": "7578:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "7578:88:1"
																},
																"nativeSrc": "7578:93:1",
																"nodeType": "YulFunctionCall",
																"src": "7578:93:1"
															},
															"nativeSrc": "7578:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "7578:93:1"
														},
														{
															"nativeSrc": "7680:19:1",
															"nodeType": "YulAssignment",
															"src": "7680:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7691:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "7691:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7696:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7687:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7687:3:1"
																},
																"nativeSrc": "7687:12:1",
																"nodeType": "YulFunctionCall",
																"src": "7687:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "7680:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7680:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7339:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7473:3:1",
														"nodeType": "YulTypedName",
														"src": "7473:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7481:3:1",
														"nodeType": "YulTypedName",
														"src": "7481:3:1",
														"type": ""
													}
												],
												"src": "7339:366:1"
											},
											{
												"body": {
													"nativeSrc": "7882:248:1",
													"nodeType": "YulBlock",
													"src": "7882:248:1",
													"statements": [
														{
															"nativeSrc": "7892:26:1",
															"nodeType": "YulAssignment",
															"src": "7892:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7904:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "7904:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7915:2:1",
																		"nodeType": "YulLiteral",
																		"src": "7915:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7900:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "7900:3:1"
																},
																"nativeSrc": "7900:18:1",
																"nodeType": "YulFunctionCall",
																"src": "7900:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7892:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7892:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7939:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7939:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7950:1:1",
																				"nodeType": "YulLiteral",
																				"src": "7950:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7935:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7935:3:1"
																		},
																		"nativeSrc": "7935:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7935:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "7958:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "7958:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7964:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "7964:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7954:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "7954:3:1"
																		},
																		"nativeSrc": "7954:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "7954:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7928:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "7928:6:1"
																},
																"nativeSrc": "7928:47:1",
																"nodeType": "YulFunctionCall",
																"src": "7928:47:1"
															},
															"nativeSrc": "7928:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "7928:47:1"
														},
														{
															"nativeSrc": "7984:139:1",
															"nodeType": "YulAssignment",
															"src": "7984:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8118:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "8118:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7992:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "7992:124:1"
																},
																"nativeSrc": "7992:131:1",
																"nodeType": "YulFunctionCall",
																"src": "7992:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7984:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "7984:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7711:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7862:9:1",
														"nodeType": "YulTypedName",
														"src": "7862:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7877:4:1",
														"nodeType": "YulTypedName",
														"src": "7877:4:1",
														"type": ""
													}
												],
												"src": "7711:419:1"
											},
											{
												"body": {
													"nativeSrc": "8242:63:1",
													"nodeType": "YulBlock",
													"src": "8242:63:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8264:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "8264:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8272:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8272:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8260:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8260:3:1"
																		},
																		"nativeSrc": "8260:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8260:14:1"
																	},
																	{
																		"hexValue": "496e73756666696369656e742066756e64732e",
																		"kind": "string",
																		"nativeSrc": "8276:21:1",
																		"nodeType": "YulLiteral",
																		"src": "8276:21:1",
																		"type": "",
																		"value": "Insufficient funds."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8253:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8253:6:1"
																},
																"nativeSrc": "8253:45:1",
																"nodeType": "YulFunctionCall",
																"src": "8253:45:1"
															},
															"nativeSrc": "8253:45:1",
															"nodeType": "YulExpressionStatement",
															"src": "8253:45:1"
														}
													]
												},
												"name": "store_literal_in_memory_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
												"nativeSrc": "8136:169:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8234:6:1",
														"nodeType": "YulTypedName",
														"src": "8234:6:1",
														"type": ""
													}
												],
												"src": "8136:169:1"
											},
											{
												"body": {
													"nativeSrc": "8457:220:1",
													"nodeType": "YulBlock",
													"src": "8457:220:1",
													"statements": [
														{
															"nativeSrc": "8467:74:1",
															"nodeType": "YulAssignment",
															"src": "8467:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8533:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8533:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8538:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8538:2:1",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8474:58:1",
																	"nodeType": "YulIdentifier",
																	"src": "8474:58:1"
																},
																"nativeSrc": "8474:67:1",
																"nodeType": "YulFunctionCall",
																"src": "8474:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8467:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8467:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8639:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8639:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
																	"nativeSrc": "8550:88:1",
																	"nodeType": "YulIdentifier",
																	"src": "8550:88:1"
																},
																"nativeSrc": "8550:93:1",
																"nodeType": "YulFunctionCall",
																"src": "8550:93:1"
															},
															"nativeSrc": "8550:93:1",
															"nodeType": "YulExpressionStatement",
															"src": "8550:93:1"
														},
														{
															"nativeSrc": "8652:19:1",
															"nodeType": "YulAssignment",
															"src": "8652:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8663:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "8663:3:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8668:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8668:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8659:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8659:3:1"
																},
																"nativeSrc": "8659:12:1",
																"nodeType": "YulFunctionCall",
																"src": "8659:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8652:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8652:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8311:366:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8445:3:1",
														"nodeType": "YulTypedName",
														"src": "8445:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8453:3:1",
														"nodeType": "YulTypedName",
														"src": "8453:3:1",
														"type": ""
													}
												],
												"src": "8311:366:1"
											},
											{
												"body": {
													"nativeSrc": "8854:248:1",
													"nodeType": "YulBlock",
													"src": "8854:248:1",
													"statements": [
														{
															"nativeSrc": "8864:26:1",
															"nodeType": "YulAssignment",
															"src": "8864:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8876:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "8876:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8887:2:1",
																		"nodeType": "YulLiteral",
																		"src": "8887:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8872:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "8872:3:1"
																},
																"nativeSrc": "8872:18:1",
																"nodeType": "YulFunctionCall",
																"src": "8872:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8864:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8864:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8911:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8911:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8922:1:1",
																				"nodeType": "YulLiteral",
																				"src": "8922:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8907:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8907:3:1"
																		},
																		"nativeSrc": "8907:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8907:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8930:4:1",
																				"nodeType": "YulIdentifier",
																				"src": "8930:4:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8936:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "8936:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8926:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "8926:3:1"
																		},
																		"nativeSrc": "8926:20:1",
																		"nodeType": "YulFunctionCall",
																		"src": "8926:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8900:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8900:6:1"
																},
																"nativeSrc": "8900:47:1",
																"nodeType": "YulFunctionCall",
																"src": "8900:47:1"
															},
															"nativeSrc": "8900:47:1",
															"nodeType": "YulExpressionStatement",
															"src": "8900:47:1"
														},
														{
															"nativeSrc": "8956:139:1",
															"nodeType": "YulAssignment",
															"src": "8956:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9090:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9090:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8964:124:1",
																	"nodeType": "YulIdentifier",
																	"src": "8964:124:1"
																},
																"nativeSrc": "8964:131:1",
																"nodeType": "YulFunctionCall",
																"src": "8964:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8956:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "8956:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8683:419:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8834:9:1",
														"nodeType": "YulTypedName",
														"src": "8834:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8849:4:1",
														"nodeType": "YulTypedName",
														"src": "8849:4:1",
														"type": ""
													}
												],
												"src": "8683:419:1"
											},
											{
												"body": {
													"nativeSrc": "9136:152:1",
													"nodeType": "YulBlock",
													"src": "9136:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9153:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9153:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9156:77:1",
																		"nodeType": "YulLiteral",
																		"src": "9156:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9146:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9146:6:1"
																},
																"nativeSrc": "9146:88:1",
																"nodeType": "YulFunctionCall",
																"src": "9146:88:1"
															},
															"nativeSrc": "9146:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "9146:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9250:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9250:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9253:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9253:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9243:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9243:6:1"
																},
																"nativeSrc": "9243:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9243:15:1"
															},
															"nativeSrc": "9243:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9243:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9274:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9274:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9277:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9277:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9267:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9267:6:1"
																},
																"nativeSrc": "9267:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9267:15:1"
															},
															"nativeSrc": "9267:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9267:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "9108:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9108:180:1"
											},
											{
												"body": {
													"nativeSrc": "9339:149:1",
													"nodeType": "YulBlock",
													"src": "9339:149:1",
													"statements": [
														{
															"nativeSrc": "9349:25:1",
															"nodeType": "YulAssignment",
															"src": "9349:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9372:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9372:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9354:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9354:17:1"
																},
																"nativeSrc": "9354:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9354:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9349:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9349:1:1"
																}
															]
														},
														{
															"nativeSrc": "9383:25:1",
															"nodeType": "YulAssignment",
															"src": "9383:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9406:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9406:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9388:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "9388:17:1"
																},
																"nativeSrc": "9388:20:1",
																"nodeType": "YulFunctionCall",
																"src": "9388:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9383:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "9383:1:1"
																}
															]
														},
														{
															"nativeSrc": "9417:17:1",
															"nodeType": "YulAssignment",
															"src": "9417:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9429:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9429:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9432:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9432:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9425:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9425:3:1"
																},
																"nativeSrc": "9425:9:1",
																"nodeType": "YulFunctionCall",
																"src": "9425:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9417:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "9417:4:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9459:22:1",
																"nodeType": "YulBlock",
																"src": "9459:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9461:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9461:16:1"
																			},
																			"nativeSrc": "9461:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9461:18:1"
																		},
																		"nativeSrc": "9461:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9461:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9450:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9450:4:1"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9456:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "9456:1:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9447:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9447:2:1"
																},
																"nativeSrc": "9447:11:1",
																"nodeType": "YulFunctionCall",
																"src": "9447:11:1"
															},
															"nativeSrc": "9444:37:1",
															"nodeType": "YulIf",
															"src": "9444:37:1"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9294:194:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9325:1:1",
														"nodeType": "YulTypedName",
														"src": "9325:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9328:1:1",
														"nodeType": "YulTypedName",
														"src": "9328:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9334:4:1",
														"nodeType": "YulTypedName",
														"src": "9334:4:1",
														"type": ""
													}
												],
												"src": "9294:194:1"
											},
											{
												"body": {
													"nativeSrc": "9522:152:1",
													"nodeType": "YulBlock",
													"src": "9522:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9539:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9539:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9542:77:1",
																		"nodeType": "YulLiteral",
																		"src": "9542:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9532:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9532:6:1"
																},
																"nativeSrc": "9532:88:1",
																"nodeType": "YulFunctionCall",
																"src": "9532:88:1"
															},
															"nativeSrc": "9532:88:1",
															"nodeType": "YulExpressionStatement",
															"src": "9532:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9636:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9636:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9639:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9639:4:1",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9629:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9629:6:1"
																},
																"nativeSrc": "9629:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9629:15:1"
															},
															"nativeSrc": "9629:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9629:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9660:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9660:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9663:4:1",
																		"nodeType": "YulLiteral",
																		"src": "9663:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9653:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9653:6:1"
																},
																"nativeSrc": "9653:15:1",
																"nodeType": "YulFunctionCall",
																"src": "9653:15:1"
															},
															"nativeSrc": "9653:15:1",
															"nodeType": "YulExpressionStatement",
															"src": "9653:15:1"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9494:180:1",
												"nodeType": "YulFunctionDefinition",
												"src": "9494:180:1"
											},
											{
												"body": {
													"nativeSrc": "9731:269:1",
													"nodeType": "YulBlock",
													"src": "9731:269:1",
													"statements": [
														{
															"nativeSrc": "9741:22:1",
															"nodeType": "YulAssignment",
															"src": "9741:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9755:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9755:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9761:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9761:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9751:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9751:3:1"
																},
																"nativeSrc": "9751:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9751:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "9741:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9741:6:1"
																}
															]
														},
														{
															"nativeSrc": "9772:38:1",
															"nodeType": "YulVariableDeclaration",
															"src": "9772:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "9802:4:1",
																		"nodeType": "YulIdentifier",
																		"src": "9802:4:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9808:1:1",
																		"nodeType": "YulLiteral",
																		"src": "9808:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "9798:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "9798:3:1"
																},
																"nativeSrc": "9798:12:1",
																"nodeType": "YulFunctionCall",
																"src": "9798:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "9776:18:1",
																	"nodeType": "YulTypedName",
																	"src": "9776:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9849:51:1",
																"nodeType": "YulBlock",
																"src": "9849:51:1",
																"statements": [
																	{
																		"nativeSrc": "9863:27:1",
																		"nodeType": "YulAssignment",
																		"src": "9863:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "9877:6:1",
																					"nodeType": "YulIdentifier",
																					"src": "9877:6:1"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9885:4:1",
																					"nodeType": "YulLiteral",
																					"src": "9885:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "9873:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "9873:3:1"
																			},
																			"nativeSrc": "9873:17:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9873:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "9863:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9863:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9829:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "9829:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9822:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "9822:6:1"
																},
																"nativeSrc": "9822:26:1",
																"nodeType": "YulFunctionCall",
																"src": "9822:26:1"
															},
															"nativeSrc": "9819:81:1",
															"nodeType": "YulIf",
															"src": "9819:81:1"
														},
														{
															"body": {
																"nativeSrc": "9952:42:1",
																"nodeType": "YulBlock",
																"src": "9952:42:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "9966:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "9966:16:1"
																			},
																			"nativeSrc": "9966:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "9966:18:1"
																		},
																		"nativeSrc": "9966:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "9966:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "9916:18:1",
																		"nodeType": "YulIdentifier",
																		"src": "9916:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "9939:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "9939:6:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9947:2:1",
																				"nodeType": "YulLiteral",
																				"src": "9947:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "9936:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "9936:2:1"
																		},
																		"nativeSrc": "9936:14:1",
																		"nodeType": "YulFunctionCall",
																		"src": "9936:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "9913:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "9913:2:1"
																},
																"nativeSrc": "9913:38:1",
																"nodeType": "YulFunctionCall",
																"src": "9913:38:1"
															},
															"nativeSrc": "9910:84:1",
															"nodeType": "YulIf",
															"src": "9910:84:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "9680:320:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "9715:4:1",
														"nodeType": "YulTypedName",
														"src": "9715:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "9724:6:1",
														"nodeType": "YulTypedName",
														"src": "9724:6:1",
														"type": ""
													}
												],
												"src": "9680:320:1"
											},
											{
												"body": {
													"nativeSrc": "10160:288:1",
													"nodeType": "YulBlock",
													"src": "10160:288:1",
													"statements": [
														{
															"nativeSrc": "10170:26:1",
															"nodeType": "YulAssignment",
															"src": "10170:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10182:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "10182:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10193:2:1",
																		"nodeType": "YulLiteral",
																		"src": "10193:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10178:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10178:3:1"
																},
																"nativeSrc": "10178:18:1",
																"nodeType": "YulFunctionCall",
																"src": "10178:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10170:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "10170:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10250:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10250:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10263:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10263:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10274:1:1",
																				"nodeType": "YulLiteral",
																				"src": "10274:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10259:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10259:3:1"
																		},
																		"nativeSrc": "10259:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10259:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "10206:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10206:43:1"
																},
																"nativeSrc": "10206:71:1",
																"nodeType": "YulFunctionCall",
																"src": "10206:71:1"
															},
															"nativeSrc": "10206:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "10206:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "10331:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10331:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10344:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10344:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10355:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10355:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10340:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10340:3:1"
																		},
																		"nativeSrc": "10340:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10340:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10287:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10287:43:1"
																},
																"nativeSrc": "10287:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10287:72:1"
															},
															"nativeSrc": "10287:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10287:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "10413:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "10413:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10426:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "10426:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10437:2:1",
																				"nodeType": "YulLiteral",
																				"src": "10437:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10422:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "10422:3:1"
																		},
																		"nativeSrc": "10422:18:1",
																		"nodeType": "YulFunctionCall",
																		"src": "10422:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "10369:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "10369:43:1"
																},
																"nativeSrc": "10369:72:1",
																"nodeType": "YulFunctionCall",
																"src": "10369:72:1"
															},
															"nativeSrc": "10369:72:1",
															"nodeType": "YulExpressionStatement",
															"src": "10369:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "10006:442:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10116:9:1",
														"nodeType": "YulTypedName",
														"src": "10116:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "10128:6:1",
														"nodeType": "YulTypedName",
														"src": "10128:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10136:6:1",
														"nodeType": "YulTypedName",
														"src": "10136:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10144:6:1",
														"nodeType": "YulTypedName",
														"src": "10144:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10155:4:1",
														"nodeType": "YulTypedName",
														"src": "10155:4:1",
														"type": ""
													}
												],
												"src": "10006:442:1"
											},
											{
												"body": {
													"nativeSrc": "10498:147:1",
													"nodeType": "YulBlock",
													"src": "10498:147:1",
													"statements": [
														{
															"nativeSrc": "10508:25:1",
															"nodeType": "YulAssignment",
															"src": "10508:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10531:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10531:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10513:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10513:17:1"
																},
																"nativeSrc": "10513:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10513:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10508:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10508:1:1"
																}
															]
														},
														{
															"nativeSrc": "10542:25:1",
															"nodeType": "YulAssignment",
															"src": "10542:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10565:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10565:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10547:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "10547:17:1"
																},
																"nativeSrc": "10547:20:1",
																"nodeType": "YulFunctionCall",
																"src": "10547:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10542:1:1",
																	"nodeType": "YulIdentifier",
																	"src": "10542:1:1"
																}
															]
														},
														{
															"nativeSrc": "10576:16:1",
															"nodeType": "YulAssignment",
															"src": "10576:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10587:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10587:1:1"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10590:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10590:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10583:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10583:3:1"
																},
																"nativeSrc": "10583:9:1",
																"nodeType": "YulFunctionCall",
																"src": "10583:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "10576:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "10576:3:1"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10616:22:1",
																"nodeType": "YulBlock",
																"src": "10616:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10618:16:1",
																				"nodeType": "YulIdentifier",
																				"src": "10618:16:1"
																			},
																			"nativeSrc": "10618:18:1",
																			"nodeType": "YulFunctionCall",
																			"src": "10618:18:1"
																		},
																		"nativeSrc": "10618:18:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "10618:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10608:1:1",
																		"nodeType": "YulIdentifier",
																		"src": "10608:1:1"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "10611:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "10611:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10605:2:1",
																	"nodeType": "YulIdentifier",
																	"src": "10605:2:1"
																},
																"nativeSrc": "10605:10:1",
																"nodeType": "YulFunctionCall",
																"src": "10605:10:1"
															},
															"nativeSrc": "10602:36:1",
															"nodeType": "YulIf",
															"src": "10602:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "10454:191:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10485:1:1",
														"nodeType": "YulTypedName",
														"src": "10485:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10488:1:1",
														"nodeType": "YulTypedName",
														"src": "10488:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "10494:3:1",
														"nodeType": "YulTypedName",
														"src": "10494:3:1",
														"type": ""
													}
												],
												"src": "10454:191:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only owner can withdraw.\")\n\n    }\n\n    function abi_encode_t_stringliteral_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient funds.\")\n\n    }\n\n    function abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100fd575f3560e01c806370a0823111610095578063a9059cbb11610064578063a9059cbb14610285578063b69ef8a8146102b5578063dd62ed3e146102d3578063f2fde38b14610303576100fd565b806370a082311461020f578063715018a61461023f5780638da5cb5b1461024957806395d89b4114610267576100fd565b806323b872dd116100d157806323b872dd14610189578063313ce567146101b957806340c10f19146101d757806342966c68146101f3576100fd565b8062f714ce1461010157806306fdde031461011d578063095ea7b31461013b57806318160ddd1461016b575b5f5ffd5b61011b60048036038101906101169190610fe8565b61031f565b005b610125610439565b6040516101329190611096565b60405180910390f35b610155600480360381019061015091906110f1565b6104c9565b6040516101629190611149565b60405180910390f35b6101736104eb565b6040516101809190611171565b60405180910390f35b6101a3600480360381019061019e919061118a565b6104f4565b6040516101b09190611149565b60405180910390f35b6101c1610522565b6040516101ce91906111f5565b60405180910390f35b6101f160048036038101906101ec91906110f1565b61052a565b005b61020d6004803603810190610208919061120e565b610540565b005b61022960048036038101906102249190611239565b61054d565b6040516102369190611171565b60405180910390f35b610247610592565b005b6102516105a5565b60405161025e9190611273565b60405180910390f35b61026f6105cd565b60405161027c9190611096565b60405180910390f35b61029f600480360381019061029a91906110f1565b61065d565b6040516102ac9190611149565b60405180910390f35b6102bd61067f565b6040516102ca9190611171565b60405180910390f35b6102ed60048036038101906102e8919061128c565b610685565b6040516102fa9190611171565b60405180910390f35b61031d60048036038101906103189190611239565b610707565b005b6103276105a5565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610394576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161038b90611314565b60405180910390fd5b6006548211156103d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d09061137c565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc8390811502906040515f60405180830381858888f1935050505015801561041c573d5f5f3e3d5ffd5b508160065f82825461042e91906113c7565b925050819055505050565b60606003805461044890611427565b80601f016020809104026020016040519081016040528092919081815260200182805461047490611427565b80156104bf5780601f10610496576101008083540402835291602001916104bf565b820191905f5260205f20905b8154815290600101906020018083116104a257829003601f168201915b5050505050905090565b5f5f6104d361078b565b90506104e0818585610792565b600191505092915050565b5f600254905090565b5f5f6104fe61078b565b905061050b8582856107a4565b610516858585610837565b60019150509392505050565b5f6012905090565b610532610927565b61053c82826109ae565b5050565b61054a3382610a2d565b50565b5f5f5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b61059a610927565b6105a35f610aac565b565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546105dc90611427565b80601f016020809104026020016040519081016040528092919081815260200182805461060890611427565b80156106535780601f1061062a57610100808354040283529160200191610653565b820191905f5260205f20905b81548152906001019060200180831161063657829003601f168201915b5050505050905090565b5f5f61066761078b565b9050610674818585610837565b600191505092915050565b60065481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b61070f610927565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361077f575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016107769190611273565b60405180910390fd5b61078881610aac565b50565b5f33905090565b61079f8383836001610b6f565b505050565b5f6107af8484610685565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8110156108315781811015610822578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161081993929190611457565b60405180910390fd5b61083084848484035f610b6f565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036108a7575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161089e9190611273565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610917575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161090e9190611273565b60405180910390fd5b610922838383610d3e565b505050565b61092f61078b565b73ffffffffffffffffffffffffffffffffffffffff1661094d6105a5565b73ffffffffffffffffffffffffffffffffffffffff16146109ac5761097061078b565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016109a39190611273565b60405180910390fd5b565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a1e575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a159190611273565b60405180910390fd5b610a295f8383610d3e565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a9d575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610a949190611273565b60405180910390fd5b610aa8825f83610d3e565b5050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610bdf575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610bd69190611273565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610c4f575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610c469190611273565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610d38578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610d2f9190611171565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610d8e578060025f828254610d82919061148c565b92505081905550610e5c565b5f5f5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610e17578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610e0e93929190611457565b60405180910390fd5b8181035f5f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610ea3578060025f8282540392505081905550610eed565b805f5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610f4a9190611171565b60405180910390a3505050565b5f5ffd5b5f819050919050565b610f6d81610f5b565b8114610f77575f5ffd5b50565b5f81359050610f8881610f64565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610fb782610f8e565b9050919050565b610fc781610fad565b8114610fd1575f5ffd5b50565b5f81359050610fe281610fbe565b92915050565b5f5f60408385031215610ffe57610ffd610f57565b5b5f61100b85828601610f7a565b925050602061101c85828601610fd4565b9150509250929050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61106882611026565b6110728185611030565b9350611082818560208601611040565b61108b8161104e565b840191505092915050565b5f6020820190508181035f8301526110ae818461105e565b905092915050565b5f6110c082610f8e565b9050919050565b6110d0816110b6565b81146110da575f5ffd5b50565b5f813590506110eb816110c7565b92915050565b5f5f6040838503121561110757611106610f57565b5b5f611114858286016110dd565b925050602061112585828601610f7a565b9150509250929050565b5f8115159050919050565b6111438161112f565b82525050565b5f60208201905061115c5f83018461113a565b92915050565b61116b81610f5b565b82525050565b5f6020820190506111845f830184611162565b92915050565b5f5f5f606084860312156111a1576111a0610f57565b5b5f6111ae868287016110dd565b93505060206111bf868287016110dd565b92505060406111d086828701610f7a565b9150509250925092565b5f60ff82169050919050565b6111ef816111da565b82525050565b5f6020820190506112085f8301846111e6565b92915050565b5f6020828403121561122357611222610f57565b5b5f61123084828501610f7a565b91505092915050565b5f6020828403121561124e5761124d610f57565b5b5f61125b848285016110dd565b91505092915050565b61126d816110b6565b82525050565b5f6020820190506112865f830184611264565b92915050565b5f5f604083850312156112a2576112a1610f57565b5b5f6112af858286016110dd565b92505060206112c0858286016110dd565b9150509250929050565b7f4f6e6c79206f776e65722063616e2077697468647261772e00000000000000005f82015250565b5f6112fe601883611030565b9150611309826112ca565b602082019050919050565b5f6020820190508181035f83015261132b816112f2565b9050919050565b7f496e73756666696369656e742066756e64732e000000000000000000000000005f82015250565b5f611366601383611030565b915061137182611332565b602082019050919050565b5f6020820190508181035f8301526113938161135a565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6113d182610f5b565b91506113dc83610f5b565b92508282039050818111156113f4576113f361139a565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061143e57607f821691505b602082108103611451576114506113fa565b5b50919050565b5f60608201905061146a5f830186611264565b6114776020830185611162565b6114846040830184611162565b949350505050565b5f61149682610f5b565b91506114a183610f5b565b92508282019050808211156114b9576114b861139a565b5b9291505056fea26469706673582212204ae2b8f2f4082fd9c3a4c99dfac43b43db676a32e4f46c3a481c3ed53c9b1fa864736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xFD JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xB69EF8A8 EQ PUSH2 0x2B5 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x303 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x23F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x249 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x267 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x189 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B9 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1D7 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1F3 JUMPI PUSH2 0xFD JUMP JUMPDEST DUP1 PUSH3 0xF714CE EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11D JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x11B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xFE8 JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x125 PUSH2 0x439 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH2 0x4C9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x4EB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x180 SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x118A JUMP JUMPDEST PUSH2 0x4F4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1B0 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C1 PUSH2 0x522 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CE SWAP2 SWAP1 PUSH2 0x11F5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EC SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH2 0x52A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x120E JUMP JUMPDEST PUSH2 0x540 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x229 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x224 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x54D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x236 SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x247 PUSH2 0x592 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x251 PUSH2 0x5A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25E SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH2 0x5CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27C SWAP2 SWAP1 PUSH2 0x1096 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29A SWAP2 SWAP1 PUSH2 0x10F1 JUMP JUMPDEST PUSH2 0x65D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2AC SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2BD PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CA SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2ED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E8 SWAP2 SWAP1 PUSH2 0x128C JUMP JUMPDEST PUSH2 0x685 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FA SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x1239 JUMP JUMPDEST PUSH2 0x707 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x327 PUSH2 0x5A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x394 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x38B SWAP1 PUSH2 0x1314 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 SLOAD DUP3 GT ISZERO PUSH2 0x3D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3D0 SWAP1 PUSH2 0x137C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC DUP4 SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x41C JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP DUP2 PUSH1 0x6 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x42E SWAP2 SWAP1 PUSH2 0x13C7 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x448 SWAP1 PUSH2 0x1427 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x474 SWAP1 PUSH2 0x1427 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x4BF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x496 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x4BF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x4A2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4D3 PUSH2 0x78B JUMP JUMPDEST SWAP1 POP PUSH2 0x4E0 DUP2 DUP6 DUP6 PUSH2 0x792 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x4FE PUSH2 0x78B JUMP JUMPDEST SWAP1 POP PUSH2 0x50B DUP6 DUP3 DUP6 PUSH2 0x7A4 JUMP JUMPDEST PUSH2 0x516 DUP6 DUP6 DUP6 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x532 PUSH2 0x927 JUMP JUMPDEST PUSH2 0x53C DUP3 DUP3 PUSH2 0x9AE JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x54A CALLER DUP3 PUSH2 0xA2D JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59A PUSH2 0x927 JUMP JUMPDEST PUSH2 0x5A3 PUSH0 PUSH2 0xAAC JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5DC SWAP1 PUSH2 0x1427 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x608 SWAP1 PUSH2 0x1427 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x653 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x62A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x653 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x636 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH2 0x667 PUSH2 0x78B JUMP JUMPDEST SWAP1 POP PUSH2 0x674 DUP2 DUP6 DUP6 PUSH2 0x837 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x70F PUSH2 0x927 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x77F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x776 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x788 DUP2 PUSH2 0xAAC JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x79F DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xB6F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7AF DUP5 DUP5 PUSH2 0x685 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 LT ISZERO PUSH2 0x831 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x822 JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x819 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x830 DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0xB6F JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x8A7 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x89E SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x917 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90E SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x922 DUP4 DUP4 DUP4 PUSH2 0xD3E JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x92F PUSH2 0x78B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x94D PUSH2 0x5A5 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9AC JUMPI PUSH2 0x970 PUSH2 0x78B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A3 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA1E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA15 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA29 PUSH0 DUP4 DUP4 PUSH2 0xD3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA9D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA94 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAA8 DUP3 PUSH0 DUP4 PUSH2 0xD3E JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xBDF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBD6 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC4F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC46 SWAP2 SWAP1 PUSH2 0x1273 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xD38 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xD2F SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xD8E JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD82 SWAP2 SWAP1 PUSH2 0x148C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE5C JUMP JUMPDEST PUSH0 PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xE17 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE0E SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1457 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xEA3 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xEED JUMP JUMPDEST DUP1 PUSH0 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xF4A SWAP2 SWAP1 PUSH2 0x1171 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF6D DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP2 EQ PUSH2 0xF77 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF88 DUP2 PUSH2 0xF64 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xFB7 DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC7 DUP2 PUSH2 0xFAD JUMP JUMPDEST DUP2 EQ PUSH2 0xFD1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE2 DUP2 PUSH2 0xFBE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFFE JUMPI PUSH2 0xFFD PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x100B DUP6 DUP3 DUP7 ADD PUSH2 0xF7A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x101C DUP6 DUP3 DUP7 ADD PUSH2 0xFD4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1068 DUP3 PUSH2 0x1026 JUMP JUMPDEST PUSH2 0x1072 DUP2 DUP6 PUSH2 0x1030 JUMP JUMPDEST SWAP4 POP PUSH2 0x1082 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1040 JUMP JUMPDEST PUSH2 0x108B DUP2 PUSH2 0x104E JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x10AE DUP2 DUP5 PUSH2 0x105E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x10C0 DUP3 PUSH2 0xF8E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10D0 DUP2 PUSH2 0x10B6 JUMP JUMPDEST DUP2 EQ PUSH2 0x10DA JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10EB DUP2 PUSH2 0x10C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1107 JUMPI PUSH2 0x1106 PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1114 DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1125 DUP6 DUP3 DUP7 ADD PUSH2 0xF7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1143 DUP2 PUSH2 0x112F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x115C PUSH0 DUP4 ADD DUP5 PUSH2 0x113A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x116B DUP2 PUSH2 0xF5B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1184 PUSH0 DUP4 ADD DUP5 PUSH2 0x1162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x11A1 JUMPI PUSH2 0x11A0 PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11AE DUP7 DUP3 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x11BF DUP7 DUP3 DUP8 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x11D0 DUP7 DUP3 DUP8 ADD PUSH2 0xF7A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11EF DUP2 PUSH2 0x11DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1208 PUSH0 DUP4 ADD DUP5 PUSH2 0x11E6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1223 JUMPI PUSH2 0x1222 PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1230 DUP5 DUP3 DUP6 ADD PUSH2 0xF7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x124E JUMPI PUSH2 0x124D PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x125B DUP5 DUP3 DUP6 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x126D DUP2 PUSH2 0x10B6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1286 PUSH0 DUP4 ADD DUP5 PUSH2 0x1264 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x12A2 JUMPI PUSH2 0x12A1 PUSH2 0xF57 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12AF DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12C0 DUP6 DUP3 DUP7 ADD PUSH2 0x10DD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79206F776E65722063616E2077697468647261772E0000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x12FE PUSH1 0x18 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x1309 DUP3 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x132B DUP2 PUSH2 0x12F2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742066756E64732E00000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1366 PUSH1 0x13 DUP4 PUSH2 0x1030 JUMP JUMPDEST SWAP2 POP PUSH2 0x1371 DUP3 PUSH2 0x1332 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1393 DUP2 PUSH2 0x135A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x13D1 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x13DC DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x13F4 JUMPI PUSH2 0x13F3 PUSH2 0x139A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x143E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1451 JUMPI PUSH2 0x1450 PUSH2 0x13FA JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x146A PUSH0 DUP4 ADD DUP7 PUSH2 0x1264 JUMP JUMPDEST PUSH2 0x1477 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1162 JUMP JUMPDEST PUSH2 0x1484 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1162 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1496 DUP3 PUSH2 0xF5B JUMP JUMPDEST SWAP2 POP PUSH2 0x14A1 DUP4 PUSH2 0xF5B JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x14B9 JUMPI PUSH2 0x14B8 PUSH2 0x139A JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOBBASEFEE 0xE2 0xB8 CALLCODE DELEGATECALL ADDMOD 0x2F 0xD9 0xC3 LOG4 0xC9 SWAP14 STATICCALL 0xC4 EXTCODESIZE NUMBER 0xDB PUSH8 0x6A32E4F46C3A481C RETURNDATACOPY 0xD5 EXTCODECOPY SWAP12 0x1F 0xA8 PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "24932:677:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25345:262;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12679:89;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14898:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13749:97;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;15676:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13607:82;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;25157:93;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25260:79;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;13904:116;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24064:101;;;:::i;:::-;;23409:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12881:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14215:178;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24971:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14451:140;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;24314:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25345:262;25442:7;:5;:7::i;:::-;25430:19;;:10;:19;;;25422:56;;;;;;;;;;;;:::i;:::-;;;;;;;;;25506:7;;25496:6;:17;;25488:49;;;;;;;;;;;;:::i;:::-;;;;;;;;;25547:11;:20;;:28;25568:6;25547:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25594:6;25585:7;;:15;;;;;;;:::i;:::-;;;;;;;;25345:262;;:::o;12679:89::-;12724:13;12756:5;12749:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12679:89;:::o;14898:186::-;14971:4;14987:13;15003:12;:10;:12::i;:::-;14987:28;;15025:31;15034:5;15041:7;15050:5;15025:8;:31::i;:::-;15073:4;15066:11;;;14898:186;;;;:::o;13749:97::-;13801:7;13827:12;;13820:19;;13749:97;:::o;15676:244::-;15763:4;15779:15;15797:12;:10;:12::i;:::-;15779:30;;15819:37;15835:4;15841:7;15850:5;15819:15;:37::i;:::-;15866:26;15876:4;15882:2;15886:5;15866:9;:26::i;:::-;15909:4;15902:11;;;15676:244;;;;;:::o;13607:82::-;13656:5;13680:2;13673:9;;13607:82;:::o;25157:93::-;23302:13;:11;:13::i;:::-;25226:17:::1;25232:2;25236:6;25226:5;:17::i;:::-;25157:93:::0;;:::o;25260:79::-;25307:25;25313:10;25325:6;25307:5;:25::i;:::-;25260:79;:::o;13904:116::-;13969:7;13995:9;:18;14005:7;13995:18;;;;;;;;;;;;;;;;13988:25;;13904:116;;;:::o;24064:101::-;23302:13;:11;:13::i;:::-;24128:30:::1;24155:1;24128:18;:30::i;:::-;24064:101::o:0;23409:85::-;23455:7;23481:6;;;;;;;;;;;23474:13;;23409:85;:::o;12881:93::-;12928:13;12960:7;12953:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12881:93;:::o;14215:178::-;14284:4;14300:13;14316:12;:10;:12::i;:::-;14300:28;;14338:27;14348:5;14355:2;14359:5;14338:9;:27::i;:::-;14382:4;14375:11;;;14215:178;;;;:::o;24971:22::-;;;;:::o;14451:140::-;14531:7;14557:11;:18;14569:5;14557:18;;;;;;;;;;;;;;;:27;14576:7;14557:27;;;;;;;;;;;;;;;;14550:34;;14451:140;;;;:::o;24314:215::-;23302:13;:11;:13::i;:::-;24418:1:::1;24398:22;;:8;:22;;::::0;24394:91:::1;;24471:1;24443:31;;;;;;;;;;;:::i;:::-;;;;;;;;24394:91;24494:28;24513:8;24494:18;:28::i;:::-;24314:215:::0;:::o;4208:96::-;4261:7;4287:10;4280:17;;4208:96;:::o;19626:128::-;19710:37;19719:5;19726:7;19735:5;19742:4;19710:8;:37::i;:::-;19626:128;;;:::o;21315:476::-;21414:24;21441:25;21451:5;21458:7;21441:9;:25::i;:::-;21414:52;;21499:17;21480:16;:36;21476:309;;;21555:5;21536:16;:24;21532:130;;;21614:7;21623:16;21641:5;21587:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;21532:130;21703:57;21712:5;21719:7;21747:5;21728:16;:24;21754:5;21703:8;:57::i;:::-;21476:309;21404:387;21315:476;;;:::o;16293:300::-;16392:1;16376:18;;:4;:18;;;16372:86;;16444:1;16417:30;;;;;;;;;;;:::i;:::-;;;;;;;;16372:86;16485:1;16471:16;;:2;:16;;;16467:86;;16539:1;16510:32;;;;;;;;;;;:::i;:::-;;;;;;;;16467:86;16562:24;16570:4;16576:2;16580:5;16562:7;:24::i;:::-;16293:300;;;:::o;23567:162::-;23637:12;:10;:12::i;:::-;23626:23;;:7;:5;:7::i;:::-;:23;;;23622:101;;23699:12;:10;:12::i;:::-;23672:40;;;;;;;;;;;:::i;:::-;;;;;;;;23622:101;23567:162::o;18358:208::-;18447:1;18428:21;;:7;:21;;;18424:91;;18501:1;18472:32;;;;;;;;;;;:::i;:::-;;;;;;;;18424:91;18524:35;18540:1;18544:7;18553:5;18524:7;:35::i;:::-;18358:208;;:::o;18884:206::-;18973:1;18954:21;;:7;:21;;;18950:89;;19025:1;18998:30;;;;;;;;;;;:::i;:::-;;;;;;;;18950:89;19048:35;19056:7;19073:1;19077:5;19048:7;:35::i;:::-;18884:206;;:::o;24683:187::-;24756:16;24775:6;;;;;;;;;;;24756:25;;24800:8;24791:6;;:17;;;;;;;;;;;;;;;;;;24854:8;24823:40;;24844:8;24823:40;;;;;;;;;;;;24746:124;24683:187;:::o;20601:432::-;20730:1;20713:19;;:5;:19;;;20709:89;;20784:1;20755:32;;;;;;;;;;;:::i;:::-;;;;;;;;20709:89;20830:1;20811:21;;:7;:21;;;20807:90;;20883:1;20855:31;;;;;;;;;;;:::i;:::-;;;;;;;;20807:90;20936:5;20906:11;:18;20918:5;20906:18;;;;;;;;;;;;;;;:27;20925:7;20906:27;;;;;;;;;;;;;;;:35;;;;20955:9;20951:76;;;21001:7;20985:31;;20994:5;20985:31;;;21010:5;20985:31;;;;;;:::i;:::-;;;;;;;;20951:76;20601:432;;;;:::o;16908:1107::-;17013:1;16997:18;;:4;:18;;;16993:540;;17149:5;17133:12;;:21;;;;;;;:::i;:::-;;;;;;;;16993:540;;;17185:19;17207:9;:15;17217:4;17207:15;;;;;;;;;;;;;;;;17185:37;;17254:5;17240:11;:19;17236:115;;;17311:4;17317:11;17330:5;17286:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;17236:115;17503:5;17489:11;:19;17471:9;:15;17481:4;17471:15;;;;;;;;;;;;;;;:37;;;;17171:362;16993:540;17561:1;17547:16;;:2;:16;;;17543:425;;17726:5;17710:12;;:21;;;;;;;;;;;17543:425;;;17938:5;17921:9;:13;17931:2;17921:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;17543:425;17998:2;17983:25;;17992:4;17983:25;;;18002:5;17983:25;;;;;;:::i;:::-;;;;;;;;16908:1107;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:126::-;727:7;767:42;760:5;756:54;745:65;;690:126;;;:::o;822:104::-;867:7;896:24;914:5;896:24;:::i;:::-;885:35;;822:104;;;:::o;932:138::-;1013:32;1039:5;1013:32;:::i;:::-;1006:5;1003:43;993:71;;1060:1;1057;1050:12;993:71;932:138;:::o;1076:155::-;1130:5;1168:6;1155:20;1146:29;;1184:41;1219:5;1184:41;:::i;:::-;1076:155;;;;:::o;1237:490::-;1313:6;1321;1370:2;1358:9;1349:7;1345:23;1341:32;1338:119;;;1376:79;;:::i;:::-;1338:119;1496:1;1521:53;1566:7;1557:6;1546:9;1542:22;1521:53;:::i;:::-;1511:63;;1467:117;1623:2;1649:61;1702:7;1693:6;1682:9;1678:22;1649:61;:::i;:::-;1639:71;;1594:126;1237:490;;;;;:::o;1733:99::-;1785:6;1819:5;1813:12;1803:22;;1733:99;;;:::o;1838:169::-;1922:11;1956:6;1951:3;1944:19;1996:4;1991:3;1987:14;1972:29;;1838:169;;;;:::o;2013:139::-;2102:6;2097:3;2092;2086:23;2143:1;2134:6;2129:3;2125:16;2118:27;2013:139;;;:::o;2158:102::-;2199:6;2250:2;2246:7;2241:2;2234:5;2230:14;2226:28;2216:38;;2158:102;;;:::o;2266:377::-;2354:3;2382:39;2415:5;2382:39;:::i;:::-;2437:71;2501:6;2496:3;2437:71;:::i;:::-;2430:78;;2517:65;2575:6;2570:3;2563:4;2556:5;2552:16;2517:65;:::i;:::-;2607:29;2629:6;2607:29;:::i;:::-;2602:3;2598:39;2591:46;;2358:285;2266:377;;;;:::o;2649:313::-;2762:4;2800:2;2789:9;2785:18;2777:26;;2849:9;2843:4;2839:20;2835:1;2824:9;2820:17;2813:47;2877:78;2950:4;2941:6;2877:78;:::i;:::-;2869:86;;2649:313;;;;:::o;2968:96::-;3005:7;3034:24;3052:5;3034:24;:::i;:::-;3023:35;;2968:96;;;:::o;3070:122::-;3143:24;3161:5;3143:24;:::i;:::-;3136:5;3133:35;3123:63;;3182:1;3179;3172:12;3123:63;3070:122;:::o;3198:139::-;3244:5;3282:6;3269:20;3260:29;;3298:33;3325:5;3298:33;:::i;:::-;3198:139;;;;:::o;3343:474::-;3411:6;3419;3468:2;3456:9;3447:7;3443:23;3439:32;3436:119;;;3474:79;;:::i;:::-;3436:119;3594:1;3619:53;3664:7;3655:6;3644:9;3640:22;3619:53;:::i;:::-;3609:63;;3565:117;3721:2;3747:53;3792:7;3783:6;3772:9;3768:22;3747:53;:::i;:::-;3737:63;;3692:118;3343:474;;;;;:::o;3823:90::-;3857:7;3900:5;3893:13;3886:21;3875:32;;3823:90;;;:::o;3919:109::-;4000:21;4015:5;4000:21;:::i;:::-;3995:3;3988:34;3919:109;;:::o;4034:210::-;4121:4;4159:2;4148:9;4144:18;4136:26;;4172:65;4234:1;4223:9;4219:17;4210:6;4172:65;:::i;:::-;4034:210;;;;:::o;4250:118::-;4337:24;4355:5;4337:24;:::i;:::-;4332:3;4325:37;4250:118;;:::o;4374:222::-;4467:4;4505:2;4494:9;4490:18;4482:26;;4518:71;4586:1;4575:9;4571:17;4562:6;4518:71;:::i;:::-;4374:222;;;;:::o;4602:619::-;4679:6;4687;4695;4744:2;4732:9;4723:7;4719:23;4715:32;4712:119;;;4750:79;;:::i;:::-;4712:119;4870:1;4895:53;4940:7;4931:6;4920:9;4916:22;4895:53;:::i;:::-;4885:63;;4841:117;4997:2;5023:53;5068:7;5059:6;5048:9;5044:22;5023:53;:::i;:::-;5013:63;;4968:118;5125:2;5151:53;5196:7;5187:6;5176:9;5172:22;5151:53;:::i;:::-;5141:63;;5096:118;4602:619;;;;;:::o;5227:86::-;5262:7;5302:4;5295:5;5291:16;5280:27;;5227:86;;;:::o;5319:112::-;5402:22;5418:5;5402:22;:::i;:::-;5397:3;5390:35;5319:112;;:::o;5437:214::-;5526:4;5564:2;5553:9;5549:18;5541:26;;5577:67;5641:1;5630:9;5626:17;5617:6;5577:67;:::i;:::-;5437:214;;;;:::o;5657:329::-;5716:6;5765:2;5753:9;5744:7;5740:23;5736:32;5733:119;;;5771:79;;:::i;:::-;5733:119;5891:1;5916:53;5961:7;5952:6;5941:9;5937:22;5916:53;:::i;:::-;5906:63;;5862:117;5657:329;;;;:::o;5992:::-;6051:6;6100:2;6088:9;6079:7;6075:23;6071:32;6068:119;;;6106:79;;:::i;:::-;6068:119;6226:1;6251:53;6296:7;6287:6;6276:9;6272:22;6251:53;:::i;:::-;6241:63;;6197:117;5992:329;;;;:::o;6327:118::-;6414:24;6432:5;6414:24;:::i;:::-;6409:3;6402:37;6327:118;;:::o;6451:222::-;6544:4;6582:2;6571:9;6567:18;6559:26;;6595:71;6663:1;6652:9;6648:17;6639:6;6595:71;:::i;:::-;6451:222;;;;:::o;6679:474::-;6747:6;6755;6804:2;6792:9;6783:7;6779:23;6775:32;6772:119;;;6810:79;;:::i;:::-;6772:119;6930:1;6955:53;7000:7;6991:6;6980:9;6976:22;6955:53;:::i;:::-;6945:63;;6901:117;7057:2;7083:53;7128:7;7119:6;7108:9;7104:22;7083:53;:::i;:::-;7073:63;;7028:118;6679:474;;;;;:::o;7159:174::-;7299:26;7295:1;7287:6;7283:14;7276:50;7159:174;:::o;7339:366::-;7481:3;7502:67;7566:2;7561:3;7502:67;:::i;:::-;7495:74;;7578:93;7667:3;7578:93;:::i;:::-;7696:2;7691:3;7687:12;7680:19;;7339:366;;;:::o;7711:419::-;7877:4;7915:2;7904:9;7900:18;7892:26;;7964:9;7958:4;7954:20;7950:1;7939:9;7935:17;7928:47;7992:131;8118:4;7992:131;:::i;:::-;7984:139;;7711:419;;;:::o;8136:169::-;8276:21;8272:1;8264:6;8260:14;8253:45;8136:169;:::o;8311:366::-;8453:3;8474:67;8538:2;8533:3;8474:67;:::i;:::-;8467:74;;8550:93;8639:3;8550:93;:::i;:::-;8668:2;8663:3;8659:12;8652:19;;8311:366;;;:::o;8683:419::-;8849:4;8887:2;8876:9;8872:18;8864:26;;8936:9;8930:4;8926:20;8922:1;8911:9;8907:17;8900:47;8964:131;9090:4;8964:131;:::i;:::-;8956:139;;8683:419;;;:::o;9108:180::-;9156:77;9153:1;9146:88;9253:4;9250:1;9243:15;9277:4;9274:1;9267:15;9294:194;9334:4;9354:20;9372:1;9354:20;:::i;:::-;9349:25;;9388:20;9406:1;9388:20;:::i;:::-;9383:25;;9432:1;9429;9425:9;9417:17;;9456:1;9450:4;9447:11;9444:37;;;9461:18;;:::i;:::-;9444:37;9294:194;;;;:::o;9494:180::-;9542:77;9539:1;9532:88;9639:4;9636:1;9629:15;9663:4;9660:1;9653:15;9680:320;9724:6;9761:1;9755:4;9751:12;9741:22;;9808:1;9802:4;9798:12;9829:18;9819:81;;9885:4;9877:6;9873:17;9863:27;;9819:81;9947:2;9939:6;9936:14;9916:18;9913:38;9910:84;;9966:18;;:::i;:::-;9910:84;9731:269;9680:320;;;:::o;10006:442::-;10155:4;10193:2;10182:9;10178:18;10170:26;;10206:71;10274:1;10263:9;10259:17;10250:6;10206:71;:::i;:::-;10287:72;10355:2;10344:9;10340:18;10331:6;10287:72;:::i;:::-;10369;10437:2;10426:9;10422:18;10413:6;10369:72;:::i;:::-;10006:442;;;;;;:::o;10454:191::-;10494:3;10513:20;10531:1;10513:20;:::i;:::-;10508:25;;10547:20;10565:1;10547:20;:::i;:::-;10542:25;;10590:1;10587;10583:9;10576:16;;10611:3;10608:1;10605:10;10602:36;;;10618:18;;:::i;:::-;10602:36;10454:191;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1073000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balance()": "2469",
								"balanceOf(address)": "2851",
								"burn(uint256)": "infinite",
								"decimals()": "383",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"owner()": "2582",
								"renounceOwnership()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2522",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"withdraw(uint256,address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24932,
									"end": 25609,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25000,
									"end": 25147,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25067,
									"end": 25077,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "46434F4445000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "PUSH",
									"source": 0,
									"value": "46434F4445000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12575,
									"end": 12580,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12572,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12567,
									"end": 12580,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12567,
									"end": 12580,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12600,
									"end": 12607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 12590,
									"end": 12597,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 12590,
									"end": 12607,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 12590,
									"end": 12607,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 12501,
									"end": 12614,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 23068,
									"end": 23069,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23044,
									"end": 23070,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23044,
									"end": 23070,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23044,
									"end": 23056,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23044,
									"end": 23070,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 23044,
									"end": 23070,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 23044,
									"end": 23070,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23040,
									"end": 23135,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23040,
									"end": 23135,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 23121,
									"end": 23122,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 23093,
									"end": 23124,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 23093,
									"end": 23124,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 23040,
									"end": 23135,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 23040,
									"end": 23135,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 23144,
									"end": 23176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23163,
									"end": 23175,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 23144,
									"end": 23162,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 23144,
									"end": 23162,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23144,
									"end": 23162,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 23144,
									"end": 23176,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 23144,
									"end": 23176,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 23144,
									"end": 23176,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 23144,
									"end": 23176,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 23144,
									"end": 23176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 22996,
									"end": 23183,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25089,
									"end": 25140,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25095,
									"end": 25105,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 25129,
									"end": 25139,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25129,
									"end": 25137,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25129,
									"end": 25137,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25129,
									"end": 25137,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 25129,
									"end": 25139,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25129,
									"end": 25139,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 25129,
									"end": 25139,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25129,
									"end": 25139,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 25129,
									"end": 25139,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25123,
									"end": 25125,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "A"
								},
								{
									"begin": 25123,
									"end": 25139,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 25123,
									"end": 25139,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25123,
									"end": 25139,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25123,
									"end": 25139,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 25123,
									"end": 25139,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25123,
									"end": 25139,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 25123,
									"end": 25139,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25120,
									"modifierDepth": 2,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25139,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 25107,
									"end": 25139,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25139,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25139,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 25107,
									"end": 25139,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25107,
									"end": 25139,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 25107,
									"end": 25139,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25089,
									"end": 25094,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 25089,
									"end": 25094,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25089,
									"end": 25094,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 25089,
									"end": 25140,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25089,
									"end": 25140,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 25089,
									"end": 25140,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25089,
									"end": 25140,
									"modifierDepth": 2,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 25089,
									"end": 25140,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25000,
									"end": 25147,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 24683,
									"end": 24870,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 24683,
									"end": 24870,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24756,
									"end": 24772,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24775,
									"end": 24781,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24756,
									"end": 24781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24756,
									"end": 24781,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24800,
									"end": 24808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24797,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 24791,
									"end": 24797,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 24791,
									"end": 24808,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24854,
									"end": 24862,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24844,
									"end": 24852,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 24823,
									"end": 24863,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 24746,
									"end": 24870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24683,
									"end": 24870,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24683,
									"end": 24870,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 13607,
									"end": 13689,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 13607,
									"end": 13689,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 13656,
									"end": 13661,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 13680,
									"end": 13682,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 13673,
									"end": 13682,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13673,
									"end": 13682,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 13607,
									"end": 13689,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 13607,
									"end": 13689,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18358,
									"end": 18566,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 18358,
									"end": 18566,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18447,
									"end": 18448,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18428,
									"end": 18449,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18428,
									"end": 18449,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18428,
									"end": 18435,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18428,
									"end": 18449,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 18428,
									"end": 18449,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18428,
									"end": 18449,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18424,
									"end": 18515,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 18424,
									"end": 18515,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 18501,
									"end": 18502,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "PUSH",
									"source": 0,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 18472,
									"end": 18504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "tag",
									"source": 0,
									"value": "31"
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18472,
									"end": 18504,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 18424,
									"end": 18515,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 18424,
									"end": 18515,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18524,
									"end": 18559,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 18540,
									"end": 18541,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 18544,
									"end": 18551,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18553,
									"end": 18558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 18524,
									"end": 18531,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 18524,
									"end": 18531,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18524,
									"end": 18531,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 18524,
									"end": 18559,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18524,
									"end": 18559,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 18524,
									"end": 18559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 18524,
									"end": 18559,
									"name": "tag",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 18524,
									"end": 18559,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 18358,
									"end": 18566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18358,
									"end": 18566,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 18358,
									"end": 18566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16908,
									"end": 18015,
									"name": "tag",
									"source": 0,
									"value": "33"
								},
								{
									"begin": 16908,
									"end": 18015,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17013,
									"end": 17014,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16997,
									"end": 17015,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16997,
									"end": 17015,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16997,
									"end": 17001,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 16997,
									"end": 17015,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 16997,
									"end": 17015,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 16997,
									"end": 17015,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17149,
									"end": 17154,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17145,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17133,
									"end": 17145,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "37"
								},
								{
									"begin": 17133,
									"end": 17154,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "tag",
									"source": 0,
									"value": "36"
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17133,
									"end": 17154,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "tag",
									"source": 0,
									"value": "35"
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17185,
									"end": 17204,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17207,
									"end": 17216,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17217,
									"end": 17221,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17207,
									"end": 17222,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17185,
									"end": 17222,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17185,
									"end": 17222,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17254,
									"end": 17259,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17240,
									"end": 17251,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17240,
									"end": 17259,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17351,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17236,
									"end": 17351,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17311,
									"end": 17315,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17317,
									"end": 17328,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17330,
									"end": 17335,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "PUSH",
									"source": 0,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "41"
								},
								{
									"begin": 17286,
									"end": 17336,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "tag",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17286,
									"end": 17336,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17236,
									"end": 17351,
									"name": "tag",
									"source": 0,
									"value": "39"
								},
								{
									"begin": 17236,
									"end": 17351,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17503,
									"end": 17508,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17489,
									"end": 17500,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17489,
									"end": 17508,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17480,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17481,
									"end": 17485,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17471,
									"end": 17486,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17508,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17508,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17508,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17471,
									"end": 17508,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17171,
									"end": 17533,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "tag",
									"source": 0,
									"value": "38"
								},
								{
									"begin": 16993,
									"end": 17533,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17561,
									"end": 17562,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17547,
									"end": 17563,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17547,
									"end": 17563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17547,
									"end": 17549,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17547,
									"end": 17563,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17547,
									"end": 17563,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17547,
									"end": 17563,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17726,
									"end": 17731,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17722,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17710,
									"end": 17722,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17710,
									"end": 17731,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "tag",
									"source": 0,
									"value": "42"
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17938,
									"end": 17943,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17930,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17931,
									"end": 17933,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17934,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17921,
									"end": 17943,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "tag",
									"source": 0,
									"value": "43"
								},
								{
									"begin": 17543,
									"end": 17968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17998,
									"end": 18000,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17992,
									"end": 17996,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 18002,
									"end": 18007,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "45"
								},
								{
									"begin": 17983,
									"end": 18008,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "tag",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17983,
									"end": 18008,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 16908,
									"end": 18015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16908,
									"end": 18015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16908,
									"end": 18015,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 16908,
									"end": 18015,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 1,
									"value": "86"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 1,
									"value": "87"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "89"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 1,
									"value": "92"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 1,
									"value": "91"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "51"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 1,
									"value": "93"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1103,
									"end": 1109,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1137,
									"end": 1142,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1131,
									"end": 1143,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1121,
									"end": 1143,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1150,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 1156,
									"end": 1336,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1204,
									"end": 1281,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1201,
									"end": 1202,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1194,
									"end": 1282,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1301,
									"end": 1305,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 1298,
									"end": 1299,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1291,
									"end": 1306,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1325,
									"end": 1329,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1322,
									"end": 1323,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1315,
									"end": 1330,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1342,
									"end": 1522,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1467,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1387,
									"end": 1388,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1380,
									"end": 1468,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1487,
									"end": 1491,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1484,
									"end": 1485,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1477,
									"end": 1492,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1511,
									"end": 1515,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1516,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1572,
									"end": 1578,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1609,
									"end": 1610,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 1603,
									"end": 1607,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1599,
									"end": 1611,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1589,
									"end": 1611,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1656,
									"end": 1657,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1650,
									"end": 1654,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1646,
									"end": 1658,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1677,
									"end": 1695,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1733,
									"end": 1737,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1725,
									"end": 1731,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1721,
									"end": 1738,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1711,
									"end": 1738,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "tag",
									"source": 1,
									"value": "98"
								},
								{
									"begin": 1667,
									"end": 1748,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 1797,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1787,
									"end": 1793,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1784,
									"end": 1798,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1764,
									"end": 1782,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1761,
									"end": 1799,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 1814,
									"end": 1832,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "tag",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1814,
									"end": 1832,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "tag",
									"source": 1,
									"value": "99"
								},
								{
									"begin": 1758,
									"end": 1842,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1579,
									"end": 1848,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1528,
									"end": 1848,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 1,
									"value": "105"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "58"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 1,
									"value": "106"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 1
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 1,
									"value": "111"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 1,
									"value": "110"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 1,
									"value": "109"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "61"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 1,
									"value": "114"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "62"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 1,
									"value": "116"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "59"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 1,
									"value": "115"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3248,
									"end": 3249,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3241,
									"end": 3249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "64"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 1,
									"value": "119"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "63"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 1,
									"value": "120"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "65"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 1,
									"value": "125"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "122"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 1,
									"value": "124"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 1,
									"value": "128"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 1,
									"value": "129"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 1,
									"value": "130"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "57"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 1,
									"value": "132"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "66"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 1,
									"value": "131"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 1,
									"value": "127"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "68"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 1,
									"value": "135"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 1,
									"value": "137"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 1,
									"value": "139"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 1,
									"value": "141"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 1,
									"value": "140"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 1,
									"value": "142"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "67"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 1,
									"value": "143"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 1,
									"value": "146"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "70"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 1,
									"value": "147"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 1,
									"value": "145"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "56"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 1,
									"value": "148"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "149"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 1,
									"value": "151"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 1
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "69"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 1,
									"value": "153"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 1,
									"value": "152"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 1,
									"value": "144"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "tag",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6232,
									"end": 6239,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6314,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6265,
									"end": 6270,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6261,
									"end": 6315,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6195,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "tag",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "71"
								},
								{
									"begin": 6393,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "tag",
									"source": 1,
									"value": "156"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6327,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "72"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 1,
									"value": "158"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 1,
									"value": "160"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "tag",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7009,
									"end": 7017,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7056,
									"end": 7061,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7053,
									"end": 7054,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7049,
									"end": 7062,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7028,
									"end": 7062,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6967,
									"end": 7069,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "tag",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7136,
									"end": 7141,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7143,
									"end": 7147,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7167,
									"end": 7173,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7158,
									"end": 7173,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7191,
									"end": 7196,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7182,
									"end": 7196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7226,
									"end": 7227,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7216,
									"end": 7224,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7213,
									"end": 7228,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7321,
									"end": 7325,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7316,
									"end": 7319,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 7312,
									"end": 7326,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7306,
									"end": 7310,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7303,
									"end": 7327,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 7330,
									"end": 7348,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "tag",
									"source": 1,
									"value": "168"
								},
								{
									"begin": 7330,
									"end": 7348,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "tag",
									"source": 1,
									"value": "167"
								},
								{
									"begin": 7300,
									"end": 7350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7380,
									"end": 7381,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 7370,
									"end": 7378,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7366,
									"end": 7382,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7795,
									"end": 7799,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7788,
									"end": 7793,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7784,
									"end": 7800,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7775,
									"end": 7800,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "tag",
									"source": 1,
									"value": "169"
								},
								{
									"begin": 7363,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7845,
									"end": 7849,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7839,
									"end": 7843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7835,
									"end": 7850,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7827,
									"end": 7850,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 7898,
									"end": 7906,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "75"
								},
								{
									"begin": 7875,
									"end": 7907,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "tag",
									"source": 1,
									"value": "170"
								},
								{
									"begin": 7875,
									"end": 7907,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7863,
									"end": 7907,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "164"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "tag",
									"source": 1,
									"value": "166"
								},
								{
									"begin": 7205,
									"end": 7917,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7075,
									"end": 7923,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7983,
									"end": 7988,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8174,
									"end": 8182,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8195,
									"end": 8196,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8186,
									"end": 8196,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8197,
									"end": 8202,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "tag",
									"source": 1,
									"value": "172"
								},
								{
									"begin": 8164,
									"end": 8204,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8223,
									"end": 8227,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8240,
									"end": 8241,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8231,
									"end": 8241,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8242,
									"end": 8247,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "tag",
									"source": 1,
									"value": "173"
								},
								{
									"begin": 8213,
									"end": 8249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8309,
									"end": 8313,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8357,
									"end": 8358,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8393,
									"end": 8394,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "tag",
									"source": 1,
									"value": "175"
								},
								{
									"begin": 8352,
									"end": 8379,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8370,
									"end": 8371,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8361,
									"end": 8371,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8372,
									"end": 8377,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "tag",
									"source": 1,
									"value": "176"
								},
								{
									"begin": 8388,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8433,
									"end": 8436,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 8423,
									"end": 8431,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8420,
									"end": 8437,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 8440,
									"end": 8458,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "tag",
									"source": 1,
									"value": "178"
								},
								{
									"begin": 8440,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "tag",
									"source": 1,
									"value": "177"
								},
								{
									"begin": 8417,
									"end": 8460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8489,
									"end": 8497,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8486,
									"end": 8487,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 8482,
									"end": 8498,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8473,
									"end": 8498,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8524,
									"end": 8527,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8517,
									"end": 8522,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8514,
									"end": 8528,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 8531,
									"end": 8549,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "tag",
									"source": 1,
									"value": "180"
								},
								{
									"begin": 8531,
									"end": 8549,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "tag",
									"source": 1,
									"value": "179"
								},
								{
									"begin": 8511,
									"end": 8551,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8564,
									"end": 8569,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "tag",
									"source": 1,
									"value": "174"
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8302,
									"end": 8579,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8688,
									"end": 8690,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 8678,
									"end": 8686,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8675,
									"end": 8691,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8669,
									"end": 8672,
									"name": "PUSH",
									"source": 1,
									"value": "133"
								},
								{
									"begin": 8663,
									"end": 8667,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8660,
									"end": 8673,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8656,
									"end": 8692,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8638,
									"end": 8640,
									"name": "PUSH",
									"source": 1,
									"value": "4E"
								},
								{
									"begin": 8628,
									"end": 8636,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8625,
									"end": 8641,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8620,
									"end": 8622,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 8614,
									"end": 8618,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8611,
									"end": 8623,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 8607,
									"end": 8642,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 8591,
									"end": 8702,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8744,
									"end": 8752,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8738,
									"end": 8742,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8734,
									"end": 8753,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8725,
									"end": 8753,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8779,
									"end": 8782,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 8772,
									"end": 8777,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8769,
									"end": 8783,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 8786,
									"end": 8804,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "tag",
									"source": 1,
									"value": "183"
								},
								{
									"begin": 8786,
									"end": 8804,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "tag",
									"source": 1,
									"value": "182"
								},
								{
									"begin": 8766,
									"end": 8806,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 8819,
									"end": 8824,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "tag",
									"source": 1,
									"value": "181"
								},
								{
									"begin": 8588,
									"end": 8834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 8897,
									"end": 8900,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8887,
									"end": 8895,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8881,
									"end": 8885,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8878,
									"end": 8879,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "76"
								},
								{
									"begin": 8859,
									"end": 8901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "tag",
									"source": 1,
									"value": "184"
								},
								{
									"begin": 8859,
									"end": 8901,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8844,
									"end": 8901,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 8933,
									"end": 8937,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8928,
									"end": 8931,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 8924,
									"end": 8938,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 8917,
									"end": 8922,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8914,
									"end": 8939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 8942,
									"end": 8960,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "tag",
									"source": 1,
									"value": "186"
								},
								{
									"begin": 8942,
									"end": 8960,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "tag",
									"source": 1,
									"value": "185"
								},
								{
									"begin": 8911,
									"end": 8962,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8991,
									"end": 8995,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8984,
									"end": 8989,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8980,
									"end": 8996,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8971,
									"end": 8996,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "tag",
									"source": 1,
									"value": "171"
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7929,
									"end": 9002,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "tag",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9043,
									"end": 9050,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9083,
									"end": 9087,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 9076,
									"end": 9081,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9072,
									"end": 9088,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9061,
									"end": 9088,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9008,
									"end": 9094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9158,
									"end": 9163,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "189"
								},
								{
									"begin": 9200,
									"end": 9204,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 9182,
									"end": 9205,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "tag",
									"source": 1,
									"value": "189"
								},
								{
									"begin": 9182,
									"end": 9205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9174,
									"end": 9205,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 9242,
									"end": 9250,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "78"
								},
								{
									"begin": 9226,
									"end": 9251,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "tag",
									"source": 1,
									"value": "190"
								},
								{
									"begin": 9226,
									"end": 9251,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9214,
									"end": 9251,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 9307,
									"end": 9373,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 9297,
									"end": 9305,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9291,
									"end": 9295,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "77"
								},
								{
									"begin": 9270,
									"end": 9374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "tag",
									"source": 1,
									"value": "191"
								},
								{
									"begin": 9270,
									"end": 9374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9261,
									"end": 9374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9100,
									"end": 9381,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9427,
									"end": 9434,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 9468,
									"end": 9469,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 9450,
									"end": 9470,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "tag",
									"source": 1,
									"value": "193"
								},
								{
									"begin": 9450,
									"end": 9470,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9445,
									"end": 9470,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 9502,
									"end": 9503,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 9484,
									"end": 9504,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "tag",
									"source": 1,
									"value": "194"
								},
								{
									"begin": 9484,
									"end": 9504,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9479,
									"end": 9504,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9539,
									"end": 9540,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9536,
									"end": 9537,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9532,
									"end": 9541,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 9579,
									"end": 9590,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 9561,
									"end": 9591,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "tag",
									"source": 1,
									"value": "195"
								},
								{
									"begin": 9561,
									"end": 9591,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9550,
									"end": 9591,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9740,
									"end": 9741,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9731,
									"end": 9738,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9727,
									"end": 9742,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 9724,
									"end": 9725,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 9721,
									"end": 9743,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 9701,
									"end": 9702,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9694,
									"end": 9703,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9674,
									"end": 9757,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 9770,
									"end": 9788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "tag",
									"source": 1,
									"value": "197"
								},
								{
									"begin": 9770,
									"end": 9788,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "tag",
									"source": 1,
									"value": "196"
								},
								{
									"begin": 9651,
									"end": 9790,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9435,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9387,
									"end": 9797,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9843,
									"end": 9846,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 9880,
									"end": 9881,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 9862,
									"end": 9882,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "tag",
									"source": 1,
									"value": "199"
								},
								{
									"begin": 9862,
									"end": 9882,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9857,
									"end": 9882,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 9914,
									"end": 9915,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 9896,
									"end": 9916,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "tag",
									"source": 1,
									"value": "200"
								},
								{
									"begin": 9896,
									"end": 9916,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9891,
									"end": 9916,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9939,
									"end": 9940,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9936,
									"end": 9937,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9932,
									"end": 9941,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 9925,
									"end": 9941,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9960,
									"end": 9963,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 9957,
									"end": 9958,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 9954,
									"end": 9964,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "74"
								},
								{
									"begin": 9967,
									"end": 9985,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "tag",
									"source": 1,
									"value": "202"
								},
								{
									"begin": 9967,
									"end": 9985,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "tag",
									"source": 1,
									"value": "201"
								},
								{
									"begin": 9951,
									"end": 9987,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 9803,
									"end": 9994,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "tag",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 10105,
									"end": 10110,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 10087,
									"end": 10111,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "tag",
									"source": 1,
									"value": "204"
								},
								{
									"begin": 10087,
									"end": 10111,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10082,
									"end": 10085,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10075,
									"end": 10112,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10000,
									"end": 10118,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10273,
									"end": 10277,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10311,
									"end": 10313,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 10300,
									"end": 10309,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10296,
									"end": 10314,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10288,
									"end": 10314,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 10392,
									"end": 10393,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10381,
									"end": 10390,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10377,
									"end": 10394,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10368,
									"end": 10374,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 10324,
									"end": 10395,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "tag",
									"source": 1,
									"value": "206"
								},
								{
									"begin": 10324,
									"end": 10395,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 10473,
									"end": 10475,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10462,
									"end": 10471,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10458,
									"end": 10476,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10449,
									"end": 10455,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 10405,
									"end": 10477,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "tag",
									"source": 1,
									"value": "207"
								},
								{
									"begin": 10405,
									"end": 10477,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 10555,
									"end": 10557,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 10544,
									"end": 10553,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10540,
									"end": 10558,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10531,
									"end": 10537,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 10487,
									"end": 10559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "tag",
									"source": 1,
									"value": "208"
								},
								{
									"begin": 10487,
									"end": 10559,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10124,
									"end": 10566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10665,
									"end": 10669,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10703,
									"end": 10705,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 10692,
									"end": 10701,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 10688,
									"end": 10706,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 10680,
									"end": 10706,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10784,
									"end": 10785,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 10773,
									"end": 10782,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 10769,
									"end": 10786,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 10760,
									"end": 10766,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "79"
								},
								{
									"begin": 10716,
									"end": 10787,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "tag",
									"source": 1,
									"value": "210"
								},
								{
									"begin": 10716,
									"end": 10787,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 10572,
									"end": 10794,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24932,
									"end": 25609,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204ae2b8f2f4082fd9c3a4c99dfac43b43db676a32e4f46c3a481c3ed53c9b1fa864736f6c634300081c0033",
									".code": [
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "B69EF8A8"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "40C10F19"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "42966C68"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "F714CE"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24932,
											"end": 25609,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25345,
											"end": 25607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25345,
											"end": 25607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12679,
											"end": 12768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12679,
											"end": 12768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14898,
											"end": 15084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14898,
											"end": 15084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14898,
											"end": 15084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13749,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13749,
											"end": 13846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 15676,
											"end": 15920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15676,
											"end": 15920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 15676,
											"end": 15920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13607,
											"end": 13689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 13607,
											"end": 13689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25157,
											"end": 25250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 25157,
											"end": 25250,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 25260,
											"end": 25339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25260,
											"end": 25339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 13904,
											"end": 14020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13904,
											"end": 14020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 13904,
											"end": 14020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 24064,
											"end": 24165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23409,
											"end": 23494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23409,
											"end": 23494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 12881,
											"end": 12974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 12881,
											"end": 12974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14215,
											"end": 14393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14215,
											"end": 14393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 14215,
											"end": 14393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24971,
											"end": 24993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 24971,
											"end": 24993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 14451,
											"end": 14591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14451,
											"end": 14591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 14451,
											"end": 14591,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 24314,
											"end": 24529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24314,
											"end": 24529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25442,
											"end": 25447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 25442,
											"end": 25449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25449,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 25442,
											"end": 25449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25430,
											"end": 25449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25430,
											"end": 25449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25430,
											"end": 25440,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25430,
											"end": 25449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25430,
											"end": 25449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25430,
											"end": 25449,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 25422,
											"end": 25478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 25422,
											"end": 25478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25506,
											"end": 25513,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25506,
											"end": 25513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25496,
											"end": 25502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25496,
											"end": 25513,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 25496,
											"end": 25513,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 25488,
											"end": 25537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25488,
											"end": 25537,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25558,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25567,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25547,
											"end": 25567,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "PUSH",
											"source": 0,
											"value": "8FC"
										},
										{
											"begin": 25568,
											"end": 25574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25547,
											"end": 25575,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25594,
											"end": 25600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25592,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 25585,
											"end": 25592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 25585,
											"end": 25600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25585,
											"end": 25600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25345,
											"end": 25607,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12724,
											"end": 12737,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12756,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12749,
											"end": 12761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12749,
											"end": 12761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12749,
											"end": 12761,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12679,
											"end": 12768,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14971,
											"end": 14975,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14987,
											"end": 15000,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15003,
											"end": 15015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 15003,
											"end": 15013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 15003,
											"end": 15015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15003,
											"end": 15015,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 15003,
											"end": 15015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14987,
											"end": 15015,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14987,
											"end": 15015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15025,
											"end": 15056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 15034,
											"end": 15039,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15041,
											"end": 15048,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15050,
											"end": 15055,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15025,
											"end": 15033,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 15025,
											"end": 15056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15025,
											"end": 15056,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 15025,
											"end": 15056,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15073,
											"end": 15077,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15066,
											"end": 15077,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15066,
											"end": 15077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15066,
											"end": 15077,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14898,
											"end": 15084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13801,
											"end": 13808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13827,
											"end": 13839,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13827,
											"end": 13839,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13839,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13820,
											"end": 13839,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13749,
											"end": 13846,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15763,
											"end": 15767,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15779,
											"end": 15794,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15797,
											"end": 15809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15797,
											"end": 15807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 15797,
											"end": 15809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15797,
											"end": 15809,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 15797,
											"end": 15809,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15779,
											"end": 15809,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15835,
											"end": 15839,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15841,
											"end": 15848,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15850,
											"end": 15855,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15819,
											"end": 15834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 15819,
											"end": 15856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 15819,
											"end": 15856,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15866,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15876,
											"end": 15880,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15882,
											"end": 15884,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15886,
											"end": 15891,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 15866,
											"end": 15875,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 15866,
											"end": 15892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 15866,
											"end": 15892,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 15866,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15909,
											"end": 15913,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 15902,
											"end": 15913,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 15913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15902,
											"end": 15913,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15676,
											"end": 15920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13656,
											"end": 13661,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13680,
											"end": 13682,
											"name": "PUSH",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 13673,
											"end": 13682,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13673,
											"end": 13682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13607,
											"end": 13689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23302,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23302,
											"end": 23315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25243,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25232,
											"end": 25234,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25236,
											"end": 25242,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 25226,
											"end": 25243,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25226,
											"end": 25243,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 25226,
											"end": 25243,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25157,
											"end": 25250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25307,
											"end": 25332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25313,
											"end": 25323,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 25325,
											"end": 25331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25307,
											"end": 25312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 25307,
											"end": 25332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25307,
											"end": 25332,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 25307,
											"end": 25332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25260,
											"end": 25339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13969,
											"end": 13976,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13995,
											"end": 14004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14005,
											"end": 14012,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13995,
											"end": 14013,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13988,
											"end": 14013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13988,
											"end": 14013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13904,
											"end": 14020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 24064,
											"end": 24165,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 23302,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23302,
											"end": 23315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24128,
											"end": 24158,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24155,
											"end": 24156,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24128,
											"end": 24146,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24128,
											"end": 24158,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24128,
											"end": 24158,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 24128,
											"end": 24158,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24064,
											"end": 24165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23455,
											"end": 23462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23481,
											"end": 23487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23474,
											"end": 23487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23474,
											"end": 23487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23409,
											"end": 23494,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12928,
											"end": 12941,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 12960,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12953,
											"end": 12967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 12953,
											"end": 12967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12953,
											"end": 12967,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12881,
											"end": 12974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14284,
											"end": 14288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14300,
											"end": 14313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14316,
											"end": 14328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 14316,
											"end": 14326,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 14316,
											"end": 14328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14316,
											"end": 14328,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 14316,
											"end": 14328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14328,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14300,
											"end": 14328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14365,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 14348,
											"end": 14353,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14355,
											"end": 14357,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14359,
											"end": 14364,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 14338,
											"end": 14365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14338,
											"end": 14365,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 14338,
											"end": 14365,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14382,
											"end": 14386,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14375,
											"end": 14386,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14375,
											"end": 14386,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14215,
											"end": 14393,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24971,
											"end": 24993,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14531,
											"end": 14538,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14557,
											"end": 14568,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14569,
											"end": 14574,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14557,
											"end": 14575,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14576,
											"end": 14583,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14557,
											"end": 14584,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14584,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14550,
											"end": 14584,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 14451,
											"end": 14591,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 23302,
											"end": 23313,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23302,
											"end": 23315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 23302,
											"end": 23315,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24418,
											"end": 24419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24398,
											"end": 24420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24398,
											"end": 24420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24398,
											"end": 24406,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24398,
											"end": 24420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24398,
											"end": 24420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24398,
											"end": 24420,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24394,
											"end": 24485,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 24394,
											"end": 24485,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24471,
											"end": 24472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 24443,
											"end": 24474,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24443,
											"end": 24474,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24394,
											"end": 24485,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 24394,
											"end": 24485,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24494,
											"end": 24522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 24513,
											"end": 24521,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24494,
											"end": 24512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24494,
											"end": 24522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24494,
											"end": 24522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 24494,
											"end": 24522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24314,
											"end": 24529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4304,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 4208,
											"end": 4304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4261,
											"end": 4268,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4287,
											"end": 4297,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4297,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4280,
											"end": 4297,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4304,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4208,
											"end": 4304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19754,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 19626,
											"end": 19754,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19710,
											"end": 19747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 19719,
											"end": 19724,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19726,
											"end": 19733,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19735,
											"end": 19740,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19742,
											"end": 19746,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 19710,
											"end": 19718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 19710,
											"end": 19747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19710,
											"end": 19747,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 19710,
											"end": 19747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19754,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 19626,
											"end": 19754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21791,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 21315,
											"end": 21791,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21414,
											"end": 21438,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21441,
											"end": 21466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 21451,
											"end": 21456,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21458,
											"end": 21465,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21441,
											"end": 21450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 21441,
											"end": 21466,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21441,
											"end": 21466,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 21441,
											"end": 21466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21414,
											"end": 21466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21414,
											"end": 21466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21499,
											"end": 21516,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21480,
											"end": 21496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21480,
											"end": 21516,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21785,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21785,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 21476,
											"end": 21785,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21555,
											"end": 21560,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21536,
											"end": 21552,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21536,
											"end": 21560,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21532,
											"end": 21662,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21532,
											"end": 21662,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 21532,
											"end": 21662,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21614,
											"end": 21621,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21623,
											"end": 21639,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21641,
											"end": 21646,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "PUSH",
											"source": 0,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 21587,
											"end": 21647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21587,
											"end": 21647,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21532,
											"end": 21662,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 21532,
											"end": 21662,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21703,
											"end": 21760,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21712,
											"end": 21717,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21719,
											"end": 21726,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21747,
											"end": 21752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21744,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21728,
											"end": 21752,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21754,
											"end": 21759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21703,
											"end": 21711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 21703,
											"end": 21760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 21703,
											"end": 21760,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 21703,
											"end": 21760,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21476,
											"end": 21785,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 21476,
											"end": 21785,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21404,
											"end": 21791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21791,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 21315,
											"end": 21791,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16593,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 16293,
											"end": 16593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16392,
											"end": 16393,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16376,
											"end": 16394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16376,
											"end": 16394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16376,
											"end": 16380,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16376,
											"end": 16394,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16376,
											"end": 16394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16376,
											"end": 16394,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16444,
											"end": 16445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 16417,
											"end": 16447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16417,
											"end": 16447,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 16372,
											"end": 16458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16485,
											"end": 16486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16473,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16471,
											"end": 16487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16467,
											"end": 16553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 16467,
											"end": 16553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16539,
											"end": 16540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 16510,
											"end": 16542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16510,
											"end": 16542,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16467,
											"end": 16553,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 16467,
											"end": 16553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 16570,
											"end": 16574,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16576,
											"end": 16578,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16580,
											"end": 16585,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16569,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 16562,
											"end": 16586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16562,
											"end": 16586,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 16562,
											"end": 16586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16293,
											"end": 16593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23567,
											"end": 23729,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 23567,
											"end": 23729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23637,
											"end": 23649,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23637,
											"end": 23647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23637,
											"end": 23649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23637,
											"end": 23649,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 23637,
											"end": 23649,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 23626,
											"end": 23631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23626,
											"end": 23633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23633,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 23626,
											"end": 23633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23626,
											"end": 23649,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 23622,
											"end": 23723,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 23699,
											"end": 23709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 23699,
											"end": 23711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23699,
											"end": 23711,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 23699,
											"end": 23711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 23672,
											"end": 23712,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23672,
											"end": 23712,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23622,
											"end": 23723,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 23622,
											"end": 23723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23567,
											"end": 23729,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18358,
											"end": 18566,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 18358,
											"end": 18566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18447,
											"end": 18448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18428,
											"end": 18449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18428,
											"end": 18449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18435,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18449,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18428,
											"end": 18449,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18449,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18424,
											"end": 18515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18424,
											"end": 18515,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18501,
											"end": 18502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "PUSH",
											"source": 0,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 18472,
											"end": 18504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18472,
											"end": 18504,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18424,
											"end": 18515,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 18424,
											"end": 18515,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18524,
											"end": 18559,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18540,
											"end": 18541,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18544,
											"end": 18551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18553,
											"end": 18558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18524,
											"end": 18531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 18524,
											"end": 18559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18524,
											"end": 18559,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 18524,
											"end": 18559,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18358,
											"end": 18566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18358,
											"end": 18566,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18358,
											"end": 18566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18884,
											"end": 19090,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 18884,
											"end": 19090,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18973,
											"end": 18974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18954,
											"end": 18975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18954,
											"end": 18975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18954,
											"end": 18961,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18954,
											"end": 18975,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18954,
											"end": 18975,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18954,
											"end": 18975,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18950,
											"end": 19039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 18950,
											"end": 19039,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19025,
											"end": 19026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "PUSH",
											"source": 0,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 18998,
											"end": 19028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18998,
											"end": 19028,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18950,
											"end": 19039,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 18950,
											"end": 19039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19048,
											"end": 19083,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 19056,
											"end": 19063,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19073,
											"end": 19074,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19077,
											"end": 19082,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 19048,
											"end": 19055,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 19048,
											"end": 19083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 19048,
											"end": 19083,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 19048,
											"end": 19083,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18884,
											"end": 19090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18884,
											"end": 19090,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18884,
											"end": 19090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24870,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 24683,
											"end": 24870,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24756,
											"end": 24772,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24775,
											"end": 24781,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24756,
											"end": 24781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24756,
											"end": 24781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24800,
											"end": 24808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24797,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24791,
											"end": 24797,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 24791,
											"end": 24808,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24854,
											"end": 24862,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24844,
											"end": 24852,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 24823,
											"end": 24863,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 24746,
											"end": 24870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24870,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24683,
											"end": 24870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20730,
											"end": 20731,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20713,
											"end": 20732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20713,
											"end": 20732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20713,
											"end": 20718,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20713,
											"end": 20732,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20713,
											"end": 20732,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20713,
											"end": 20732,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20709,
											"end": 20798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20709,
											"end": 20798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20784,
											"end": 20785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "PUSH",
											"source": 0,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 20755,
											"end": 20787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20755,
											"end": 20787,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20709,
											"end": 20798,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 20709,
											"end": 20798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20830,
											"end": 20831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20811,
											"end": 20832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20811,
											"end": 20832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20818,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20832,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20811,
											"end": 20832,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20811,
											"end": 20832,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20807,
											"end": 20897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20807,
											"end": 20897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20883,
											"end": 20884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "PUSH",
											"source": 0,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 20855,
											"end": 20886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20855,
											"end": 20886,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20807,
											"end": 20897,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 20807,
											"end": 20897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20936,
											"end": 20941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20917,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20918,
											"end": 20923,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20906,
											"end": 20924,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20925,
											"end": 20932,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20906,
											"end": 20933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20941,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 20906,
											"end": 20941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20955,
											"end": 20964,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20951,
											"end": 21027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21001,
											"end": 21008,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20994,
											"end": 20999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 21010,
											"end": 21015,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 20985,
											"end": 21016,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 21016,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 20951,
											"end": 21027,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 20951,
											"end": 21027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20601,
											"end": 21033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 18015,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 16908,
											"end": 18015,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17013,
											"end": 17014,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16997,
											"end": 17001,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16997,
											"end": 17015,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17149,
											"end": 17154,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17145,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17133,
											"end": 17145,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 17133,
											"end": 17154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17133,
											"end": 17154,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17204,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17207,
											"end": 17216,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17217,
											"end": 17221,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17207,
											"end": 17222,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17185,
											"end": 17222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17254,
											"end": 17259,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17251,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17240,
											"end": 17259,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17351,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17351,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 17236,
											"end": 17351,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17311,
											"end": 17315,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17317,
											"end": 17328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17330,
											"end": 17335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 17286,
											"end": 17336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17286,
											"end": 17336,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17236,
											"end": 17351,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 17236,
											"end": 17351,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17503,
											"end": 17508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17489,
											"end": 17508,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17481,
											"end": 17485,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17471,
											"end": 17486,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17508,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17508,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17508,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17471,
											"end": 17508,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17171,
											"end": 17533,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 16993,
											"end": 17533,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17561,
											"end": 17562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17547,
											"end": 17563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17547,
											"end": 17563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17547,
											"end": 17549,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17547,
											"end": 17563,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17547,
											"end": 17563,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17547,
											"end": 17563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17726,
											"end": 17731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17722,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17710,
											"end": 17722,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17710,
											"end": 17731,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17938,
											"end": 17943,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17930,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17931,
											"end": 17933,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 17921,
											"end": 17943,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 17543,
											"end": 17968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17998,
											"end": 18000,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17992,
											"end": 17996,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 18002,
											"end": 18007,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 17983,
											"end": 18008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17983,
											"end": 18008,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 18015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 18015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 18015,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16908,
											"end": 18015,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 816,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 690,
											"end": 816,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 727,
											"end": 734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 767,
											"end": 809,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 760,
											"end": 765,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 756,
											"end": 810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 745,
											"end": 810,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 745,
											"end": 810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 816,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 690,
											"end": 816,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 690,
											"end": 816,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 926,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 822,
											"end": 926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 867,
											"end": 874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 896,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 914,
											"end": 919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 896,
											"end": 920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 896,
											"end": 920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 896,
											"end": 920,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 896,
											"end": 920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 885,
											"end": 920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 885,
											"end": 920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 926,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 822,
											"end": 926,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 822,
											"end": 926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 822,
											"end": 926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 932,
											"end": 1070,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 932,
											"end": 1070,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1039,
											"end": 1044,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 1013,
											"end": 1045,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1013,
											"end": 1045,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1013,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1011,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1046,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1064,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 993,
											"end": 1064,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1050,
											"end": 1062,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 993,
											"end": 1064,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 993,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 932,
											"end": 1070,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 932,
											"end": 1070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1231,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1076,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1130,
											"end": 1135,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1174,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1155,
											"end": 1175,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1146,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1219,
											"end": 1224,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1184,
											"end": 1225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 1184,
											"end": 1225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1231,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1231,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1231,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1076,
											"end": 1231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1313,
											"end": 1319,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1321,
											"end": 1327,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1370,
											"end": 1372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1358,
											"end": 1367,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1349,
											"end": 1356,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1345,
											"end": 1368,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1373,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1457,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1457,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1338,
											"end": 1457,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1376,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 1376,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1455,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 1376,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1338,
											"end": 1457,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 1338,
											"end": 1457,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1496,
											"end": 1497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1521,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1566,
											"end": 1573,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1563,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1555,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1564,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 1521,
											"end": 1574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1574,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 1521,
											"end": 1574,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1574,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1511,
											"end": 1574,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1467,
											"end": 1584,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1623,
											"end": 1625,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1649,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1702,
											"end": 1709,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1693,
											"end": 1699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1682,
											"end": 1691,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1678,
											"end": 1700,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1649,
											"end": 1710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1649,
											"end": 1710,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 1649,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1639,
											"end": 1710,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1594,
											"end": 1720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1727,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1727,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1832,
											"name": "tag",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 1733,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1785,
											"end": 1791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1813,
											"end": 1825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1803,
											"end": 1825,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1832,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1832,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1832,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2007,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1838,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1922,
											"end": 1933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1956,
											"end": 1962,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1951,
											"end": 1954,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1944,
											"end": 1963,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2000,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 1994,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1987,
											"end": 2001,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 2001,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2007,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2007,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2007,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1838,
											"end": 2007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2152,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2013,
											"end": 2152,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2102,
											"end": 2108,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2097,
											"end": 2100,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2095,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2109,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2144,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2140,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2129,
											"end": 2132,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2125,
											"end": 2141,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2118,
											"end": 2145,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2152,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2260,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2158,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2199,
											"end": 2205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2250,
											"end": 2252,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2246,
											"end": 2253,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 2241,
											"end": 2243,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2234,
											"end": 2239,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2230,
											"end": 2244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2226,
											"end": 2254,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2254,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2216,
											"end": 2254,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2260,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2260,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2260,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2158,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2643,
											"name": "tag",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2266,
											"end": 2643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2354,
											"end": 2357,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2382,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2415,
											"end": 2420,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "209"
										},
										{
											"begin": 2382,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2382,
											"end": 2421,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 2382,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2501,
											"end": 2507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2496,
											"end": 2499,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 2437,
											"end": 2508,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2437,
											"end": 2508,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2437,
											"end": 2508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2508,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2575,
											"end": 2581,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2573,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2563,
											"end": 2567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2556,
											"end": 2561,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2552,
											"end": 2568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2582,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 2517,
											"end": 2582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2582,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2517,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2629,
											"end": 2635,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 2607,
											"end": 2636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2636,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2607,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2605,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2637,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2637,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2591,
											"end": 2637,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2643,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2643,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2643,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2266,
											"end": 2643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2962,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 2649,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2762,
											"end": 2766,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2802,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2789,
											"end": 2798,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2785,
											"end": 2803,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2803,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2777,
											"end": 2803,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2849,
											"end": 2858,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2843,
											"end": 2847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2839,
											"end": 2859,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2836,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2833,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2837,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2813,
											"end": 2860,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2950,
											"end": 2954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2941,
											"end": 2947,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 2877,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2877,
											"end": 2955,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 2877,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2955,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2955,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2962,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3064,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 2968,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3005,
											"end": 3012,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3034,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3052,
											"end": 3057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 3034,
											"end": 3058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3058,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3034,
											"end": 3058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3023,
											"end": 3058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3064,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3192,
											"name": "tag",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3070,
											"end": 3192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3161,
											"end": 3166,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 3143,
											"end": 3167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3143,
											"end": 3167,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3143,
											"end": 3167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3136,
											"end": 3141,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3133,
											"end": 3168,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3123,
											"end": 3186,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3183,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3179,
											"end": 3180,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3172,
											"end": 3184,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3123,
											"end": 3186,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 3123,
											"end": 3186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3192,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3337,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3198,
											"end": 3337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3244,
											"end": 3249,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3282,
											"end": 3288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3269,
											"end": 3289,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3289,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3325,
											"end": 3330,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "215"
										},
										{
											"begin": 3298,
											"end": 3331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3298,
											"end": 3331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3337,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3198,
											"end": 3337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3411,
											"end": 3417,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3425,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3468,
											"end": 3470,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3456,
											"end": 3465,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3447,
											"end": 3454,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3443,
											"end": 3466,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3471,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3555,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3436,
											"end": 3555,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3474,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 3474,
											"end": 3553,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3553,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 3474,
											"end": 3553,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3436,
											"end": 3555,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 3436,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3594,
											"end": 3595,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3619,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3664,
											"end": 3671,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3655,
											"end": 3661,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3640,
											"end": 3662,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 3619,
											"end": 3672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3619,
											"end": 3672,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 3619,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3609,
											"end": 3672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3565,
											"end": 3682,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3721,
											"end": 3723,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3792,
											"end": 3799,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3783,
											"end": 3789,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3772,
											"end": 3781,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3768,
											"end": 3790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 3747,
											"end": 3800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 3747,
											"end": 3800,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3800,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3737,
											"end": 3800,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3810,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3817,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3343,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3913,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 3823,
											"end": 3913,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3905,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3893,
											"end": 3906,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3886,
											"end": 3907,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3913,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3913,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3913,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3913,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 4028,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 3919,
											"end": 4028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4015,
											"end": 4020,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 4000,
											"end": 4021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4000,
											"end": 4021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3995,
											"end": 3998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3988,
											"end": 4022,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 4028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 4028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3919,
											"end": 4028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4244,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4034,
											"end": 4244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4121,
											"end": 4125,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4162,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4136,
											"end": 4162,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4234,
											"end": 4235,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4223,
											"end": 4232,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4219,
											"end": 4236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4216,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 4172,
											"end": 4237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4172,
											"end": 4237,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4172,
											"end": 4237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4244,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4244,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4034,
											"end": 4244,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4368,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4250,
											"end": 4368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4355,
											"end": 4360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4361,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 4337,
											"end": 4361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4337,
											"end": 4361,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 4337,
											"end": 4361,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4325,
											"end": 4362,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4368,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4250,
											"end": 4368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4596,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4374,
											"end": 4596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4467,
											"end": 4471,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4505,
											"end": 4507,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4494,
											"end": 4503,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4490,
											"end": 4508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4508,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4482,
											"end": 4508,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4586,
											"end": 4587,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 4584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4571,
											"end": 4588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4562,
											"end": 4568,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4589,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 4518,
											"end": 4589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4518,
											"end": 4589,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 4518,
											"end": 4589,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4596,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4374,
											"end": 4596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 5221,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 4602,
											"end": 5221,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4679,
											"end": 4685,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4687,
											"end": 4693,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4695,
											"end": 4701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4744,
											"end": 4746,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4730,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4719,
											"end": 4742,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4715,
											"end": 4747,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4831,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4831,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 4712,
											"end": 4831,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4750,
											"end": 4829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 4750,
											"end": 4829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4750,
											"end": 4829,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 4750,
											"end": 4829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4712,
											"end": 4831,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 4712,
											"end": 4831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4870,
											"end": 4871,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 4940,
											"end": 4947,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4929,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4916,
											"end": 4938,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 4895,
											"end": 4948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 4895,
											"end": 4948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4948,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4885,
											"end": 4948,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4841,
											"end": 4958,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4997,
											"end": 4999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5068,
											"end": 5075,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5059,
											"end": 5065,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5048,
											"end": 5057,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5044,
											"end": 5066,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 5023,
											"end": 5076,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5023,
											"end": 5076,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5076,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5076,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 5086,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5127,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5196,
											"end": 5203,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5187,
											"end": 5193,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5176,
											"end": 5185,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5172,
											"end": 5194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5151,
											"end": 5204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 5151,
											"end": 5204,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5141,
											"end": 5204,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5141,
											"end": 5204,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5096,
											"end": 5214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 5221,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 5221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 5221,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 5221,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 5221,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4602,
											"end": 5221,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5313,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5227,
											"end": 5313,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5269,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5302,
											"end": 5306,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5295,
											"end": 5300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5291,
											"end": 5307,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5307,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5280,
											"end": 5307,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5313,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5227,
											"end": 5313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5431,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5319,
											"end": 5431,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5418,
											"end": 5423,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5402,
											"end": 5424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5402,
											"end": 5424,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5397,
											"end": 5400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5425,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5431,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5319,
											"end": 5431,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5651,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 5437,
											"end": 5651,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5526,
											"end": 5530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5564,
											"end": 5566,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5553,
											"end": 5562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5549,
											"end": 5567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5541,
											"end": 5567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5541,
											"end": 5567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 5641,
											"end": 5642,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5630,
											"end": 5639,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5643,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5617,
											"end": 5623,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5644,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 5577,
											"end": 5644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5577,
											"end": 5644,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 5577,
											"end": 5644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5651,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5651,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5651,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5986,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5657,
											"end": 5986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5722,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5765,
											"end": 5767,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5753,
											"end": 5762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5744,
											"end": 5751,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5740,
											"end": 5763,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5736,
											"end": 5768,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5852,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 5733,
											"end": 5852,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5771,
											"end": 5850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 5771,
											"end": 5850,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5771,
											"end": 5850,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 5771,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5852,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 5733,
											"end": 5852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5892,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5916,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5961,
											"end": 5968,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5952,
											"end": 5958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5941,
											"end": 5950,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5937,
											"end": 5959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 5916,
											"end": 5969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5969,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 5916,
											"end": 5969,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5969,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5906,
											"end": 5969,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5862,
											"end": 5979,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5986,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5986,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5986,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5992,
											"end": 6321,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5992,
											"end": 6321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6051,
											"end": 6057,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6100,
											"end": 6102,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6088,
											"end": 6097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6079,
											"end": 6086,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6075,
											"end": 6098,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6071,
											"end": 6103,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6187,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6187,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6068,
											"end": 6187,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6106,
											"end": 6185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 6106,
											"end": 6185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6185,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6106,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6068,
											"end": 6187,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 6068,
											"end": 6187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6226,
											"end": 6227,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6251,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6296,
											"end": 6303,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6287,
											"end": 6293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6285,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6294,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6304,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6251,
											"end": 6304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6251,
											"end": 6304,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6251,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6304,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6304,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6314,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5992,
											"end": 6321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5992,
											"end": 6321,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5992,
											"end": 6321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5992,
											"end": 6321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5992,
											"end": 6321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6327,
											"end": 6445,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 6327,
											"end": 6445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6432,
											"end": 6437,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6438,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6414,
											"end": 6438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6414,
											"end": 6438,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 6414,
											"end": 6438,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6412,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6402,
											"end": 6439,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6327,
											"end": 6445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6327,
											"end": 6445,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6327,
											"end": 6445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6673,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6451,
											"end": 6673,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6548,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6582,
											"end": 6584,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6559,
											"end": 6585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6559,
											"end": 6585,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6663,
											"end": 6664,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6652,
											"end": 6661,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6639,
											"end": 6645,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6666,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 6595,
											"end": 6666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6595,
											"end": 6666,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 6595,
											"end": 6666,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6673,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6673,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6673,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6451,
											"end": 6673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 7153,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 6679,
											"end": 7153,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6747,
											"end": 6753,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6755,
											"end": 6761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6804,
											"end": 6806,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6792,
											"end": 6801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6783,
											"end": 6790,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 6802,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6775,
											"end": 6807,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6891,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6891,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6772,
											"end": 6891,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6810,
											"end": 6889,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 6810,
											"end": 6889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6889,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 6810,
											"end": 6889,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6891,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 6772,
											"end": 6891,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 6931,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6955,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7000,
											"end": 7007,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6991,
											"end": 6997,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6980,
											"end": 6989,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6976,
											"end": 6998,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 6955,
											"end": 7008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6955,
											"end": 7008,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 6955,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 7008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6945,
											"end": 7008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 7018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7057,
											"end": 7059,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7083,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7128,
											"end": 7135,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7119,
											"end": 7125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7108,
											"end": 7117,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7104,
											"end": 7126,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7136,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 7083,
											"end": 7136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7083,
											"end": 7136,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7083,
											"end": 7136,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7136,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7073,
											"end": 7136,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7028,
											"end": 7146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 7153,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 7153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 7153,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 7153,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 7153,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 7153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7333,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 7159,
											"end": 7333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7325,
											"name": "PUSH",
											"source": 1,
											"value": "4F6E6C79206F776E65722063616E2077697468647261772E0000000000000000"
										},
										{
											"begin": 7295,
											"end": 7296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7287,
											"end": 7293,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7283,
											"end": 7297,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7326,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7159,
											"end": 7333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7705,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 7339,
											"end": 7705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7481,
											"end": 7484,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7502,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7566,
											"end": 7568,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 7561,
											"end": 7564,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 7502,
											"end": 7569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7502,
											"end": 7569,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 7502,
											"end": 7569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7495,
											"end": 7569,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7495,
											"end": 7569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 7667,
											"end": 7670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 7578,
											"end": 7671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7578,
											"end": 7671,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 7578,
											"end": 7671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7696,
											"end": 7698,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7691,
											"end": 7694,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7699,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7699,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7680,
											"end": 7699,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7339,
											"end": 7705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 8130,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 7711,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7877,
											"end": 7881,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7915,
											"end": 7917,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7904,
											"end": 7913,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7900,
											"end": 7918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7973,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7958,
											"end": 7962,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7954,
											"end": 7974,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7950,
											"end": 7951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7939,
											"end": 7948,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7935,
											"end": 7952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7928,
											"end": 7975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8118,
											"end": 8122,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 8123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 7992,
											"end": 8123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7992,
											"end": 8123,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 7992,
											"end": 8123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8123,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7984,
											"end": 8123,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 8130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 8130,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 8130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7711,
											"end": 8130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8136,
											"end": 8305,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8136,
											"end": 8305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8276,
											"end": 8297,
											"name": "PUSH",
											"source": 1,
											"value": "496E73756666696369656E742066756E64732E00000000000000000000000000"
										},
										{
											"begin": 8272,
											"end": 8273,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8264,
											"end": 8270,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8253,
											"end": 8298,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8136,
											"end": 8305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8136,
											"end": 8305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8677,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 8311,
											"end": 8677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8453,
											"end": 8456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8474,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 8538,
											"end": 8540,
											"name": "PUSH",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 8533,
											"end": 8536,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8474,
											"end": 8541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 8474,
											"end": 8541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8474,
											"end": 8541,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 8474,
											"end": 8541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8467,
											"end": 8541,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8467,
											"end": 8541,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8550,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 8639,
											"end": 8642,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8550,
											"end": 8643,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 8550,
											"end": 8643,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8550,
											"end": 8643,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 8550,
											"end": 8643,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8668,
											"end": 8670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8663,
											"end": 8666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8659,
											"end": 8671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8652,
											"end": 8671,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8677,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8677,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8677,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8311,
											"end": 8677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 9102,
											"name": "tag",
											"source": 1,
											"value": "92"
										},
										{
											"begin": 8683,
											"end": 9102,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8853,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8887,
											"end": 8889,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8876,
											"end": 8885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8872,
											"end": 8890,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8890,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8864,
											"end": 8890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8945,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8930,
											"end": 8934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8926,
											"end": 8946,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8923,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8911,
											"end": 8920,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8907,
											"end": 8924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8900,
											"end": 8947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8964,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 9090,
											"end": 9094,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8964,
											"end": 9095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 8964,
											"end": 9095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8964,
											"end": 9095,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 8964,
											"end": 9095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8956,
											"end": 9095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8956,
											"end": 9095,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 9102,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 9102,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 9102,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8683,
											"end": 9102,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9108,
											"end": 9288,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9108,
											"end": 9288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9156,
											"end": 9233,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9153,
											"end": 9154,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9146,
											"end": 9234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9253,
											"end": 9257,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9250,
											"end": 9251,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9243,
											"end": 9258,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9277,
											"end": 9281,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9274,
											"end": 9275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9267,
											"end": 9282,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9488,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 9294,
											"end": 9488,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9334,
											"end": 9338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9354,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 9372,
											"end": 9373,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9374,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9354,
											"end": 9374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9374,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 9354,
											"end": 9374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9349,
											"end": 9374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 9406,
											"end": 9407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 9388,
											"end": 9408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9388,
											"end": 9408,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 9388,
											"end": 9408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9408,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9408,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9425,
											"end": 9434,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9417,
											"end": 9434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9456,
											"end": 9457,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9447,
											"end": 9458,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9461,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9461,
											"end": 9479,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 9461,
											"end": 9479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9461,
											"end": 9479,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 9461,
											"end": 9479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 9444,
											"end": 9481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9488,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9488,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9488,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9294,
											"end": 9488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9494,
											"end": 9674,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9494,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9619,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9539,
											"end": 9540,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9532,
											"end": 9620,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9639,
											"end": 9643,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 9636,
											"end": 9637,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9629,
											"end": 9644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9663,
											"end": 9667,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9660,
											"end": 9661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9653,
											"end": 9668,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 10000,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 9680,
											"end": 10000,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9724,
											"end": 9730,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9761,
											"end": 9762,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9755,
											"end": 9759,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9751,
											"end": 9763,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 9741,
											"end": 9763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9741,
											"end": 9763,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9808,
											"end": 9809,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9802,
											"end": 9806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9798,
											"end": 9810,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9819,
											"end": 9900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9885,
											"end": 9889,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 9877,
											"end": 9883,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9873,
											"end": 9890,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9863,
											"end": 9890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9863,
											"end": 9890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9819,
											"end": 9900,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 9819,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9947,
											"end": 9949,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9939,
											"end": 9945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9936,
											"end": 9950,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9916,
											"end": 9934,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9913,
											"end": 9951,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9994,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9910,
											"end": 9994,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9966,
											"end": 9984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 9966,
											"end": 9984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9910,
											"end": 9994,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 9910,
											"end": 9994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9731,
											"end": 10000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 10000,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 10000,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 10000,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9680,
											"end": 10000,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10448,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 10006,
											"end": 10448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10159,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10193,
											"end": 10195,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10182,
											"end": 10191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10170,
											"end": 10196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10170,
											"end": 10196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10206,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 10274,
											"end": 10275,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10263,
											"end": 10272,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10259,
											"end": 10276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10250,
											"end": 10256,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10206,
											"end": 10277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10206,
											"end": 10277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10206,
											"end": 10277,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 10206,
											"end": 10277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 10355,
											"end": 10357,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10344,
											"end": 10353,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10340,
											"end": 10358,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10331,
											"end": 10337,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10359,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 10287,
											"end": 10359,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10287,
											"end": 10359,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 10287,
											"end": 10359,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 10437,
											"end": 10439,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10426,
											"end": 10435,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10422,
											"end": 10440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10419,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 10369,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10369,
											"end": 10441,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 10369,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10448,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10448,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10448,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10645,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 10454,
											"end": 10645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10494,
											"end": 10497,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10513,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 10531,
											"end": 10532,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10513,
											"end": 10533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 10513,
											"end": 10533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10513,
											"end": 10533,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 10513,
											"end": 10533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10508,
											"end": 10533,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10508,
											"end": 10533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 10565,
											"end": 10566,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 10547,
											"end": 10567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 10547,
											"end": 10567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10542,
											"end": 10567,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10542,
											"end": 10567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10590,
											"end": 10591,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10587,
											"end": 10588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10583,
											"end": 10592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10592,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10576,
											"end": 10592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10611,
											"end": 10614,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10608,
											"end": 10609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10605,
											"end": 10615,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10638,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10638,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10602,
											"end": 10638,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 10618,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 10618,
											"end": 10636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10618,
											"end": 10636,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 10618,
											"end": 10636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10602,
											"end": 10638,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 10602,
											"end": 10638,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10645,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10454,
											"end": 10645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/FCODE_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balance()": "b69ef8a8",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256,address)": "00f714ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"destAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FCODE_flattened.sol\":\"FCODE\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FCODE_flattened.sol\":{\"keccak256\":\"0x0c74ffbbb1f8f3173359cd185e8c74000ccbc4a653e34b46c82853c3da09065f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66b87a5e218b05fa1dd040690b592c2edc6900d930f6250464d461c3e029572a\",\"dweb:/ipfs/Qme7ykacraz5pzTCetyALnMRoAc4mTaYHEfwi4fRSjsZoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 279,
								"contract": "contracts/FCODE_flattened.sol:FCODE",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 285,
								"contract": "contracts/FCODE_flattened.sol:FCODE",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 287,
								"contract": "contracts/FCODE_flattened.sol:FCODE",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 289,
								"contract": "contracts/FCODE_flattened.sol:FCODE",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 291,
								"contract": "contracts/FCODE_flattened.sol:FCODE",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 777,
								"contract": "contracts/FCODE_flattened.sol:FCODE",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 923,
								"contract": "contracts/FCODE_flattened.sol:FCODE",
								"label": "balance",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FCODE_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FCODE_flattened.sol\":{\"keccak256\":\"0x0c74ffbbb1f8f3173359cd185e8c74000ccbc4a653e34b46c82853c3da09065f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66b87a5e218b05fa1dd040690b592c2edc6900d930f6250464d461c3e029572a\",\"dweb:/ipfs/Qme7ykacraz5pzTCetyALnMRoAc4mTaYHEfwi4fRSjsZoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FCODE_flattened.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FCODE_flattened.sol\":{\"keccak256\":\"0x0c74ffbbb1f8f3173359cd185e8c74000ccbc4a653e34b46c82853c3da09065f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66b87a5e218b05fa1dd040690b592c2edc6900d930f6250464d461c3e029572a\",\"dweb:/ipfs/Qme7ykacraz5pzTCetyALnMRoAc4mTaYHEfwi4fRSjsZoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FCODE_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FCODE_flattened.sol\":{\"keccak256\":\"0x0c74ffbbb1f8f3173359cd185e8c74000ccbc4a653e34b46c82853c3da09065f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66b87a5e218b05fa1dd040690b592c2edc6900d930f6250464d461c3e029572a\",\"dweb:/ipfs/Qme7ykacraz5pzTCetyALnMRoAc4mTaYHEfwi4fRSjsZoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FCODE_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FCODE_flattened.sol\":{\"keccak256\":\"0x0c74ffbbb1f8f3173359cd185e8c74000ccbc4a653e34b46c82853c3da09065f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66b87a5e218b05fa1dd040690b592c2edc6900d930f6250464d461c3e029572a\",\"dweb:/ipfs/Qme7ykacraz5pzTCetyALnMRoAc4mTaYHEfwi4fRSjsZoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FCODE_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FCODE_flattened.sol\":{\"keccak256\":\"0x0c74ffbbb1f8f3173359cd185e8c74000ccbc4a653e34b46c82853c3da09065f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66b87a5e218b05fa1dd040690b592c2edc6900d930f6250464d461c3e029572a\",\"dweb:/ipfs/Qme7ykacraz5pzTCetyALnMRoAc4mTaYHEfwi4fRSjsZoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FCODE_flattened.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FCODE_flattened.sol\":{\"keccak256\":\"0x0c74ffbbb1f8f3173359cd185e8c74000ccbc4a653e34b46c82853c3da09065f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://66b87a5e218b05fa1dd040690b592c2edc6900d930f6250464d461c3e029572a\",\"dweb:/ipfs/Qme7ykacraz5pzTCetyALnMRoAc4mTaYHEfwi4fRSjsZoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 777,
								"contract": "contracts/FCODE_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/FCODE_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/FCODE_flattened.sol",
					"exportedSymbols": {
						"Context": [
							129
						],
						"ERC20": [
							771
						],
						"FCODE": [
							1010
						],
						"IERC1155Errors": [
							265
						],
						"IERC20": [
							77
						],
						"IERC20Errors": [
							170
						],
						"IERC20Metadata": [
							100
						],
						"IERC721Errors": [
							218
						],
						"Ownable": [
							916
						]
					},
					"id": 1011,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "164:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "190:71:0",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 77,
							"linearizedBaseContracts": [
								77
							],
							"name": "IERC20",
							"nameLocation": "272:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "285:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 11,
									"name": "Transfer",
									"nameLocation": "454:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "479:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "463:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "501:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "485:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "513:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "505:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "462:57:0"
									},
									"src": "448:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "526:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 20,
									"name": "Approval",
									"nameLocation": "685:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "710:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "694:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "694:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "733:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "717:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "750:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "742:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 17,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "693:63:0"
									},
									"src": "679:78:0"
								},
								{
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "763:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 26,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "842:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 22,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "853:2:0"
									},
									"returnParameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "879:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "878:9:0"
									},
									"scope": 77,
									"src": "833:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "894:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "979:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "997:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "989:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "988:17:0"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 32,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1029:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 31,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1029:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1028:9:0"
									},
									"scope": 77,
									"src": "970:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 35,
										"nodeType": "StructuredDocumentation",
										"src": "1044:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 44,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1271:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1288:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1280:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1300:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1292:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1279:27:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 44,
												"src": "1325:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 41,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:6:0"
									},
									"scope": 77,
									"src": "1262:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 45,
										"nodeType": "StructuredDocumentation",
										"src": "1337:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 54,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1615:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1633:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1625:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1625:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1648:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1640:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 48,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1640:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1624:32:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "1680:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1679:9:0"
									},
									"scope": 77,
									"src": "1606:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1695:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 64,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2376:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2392:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2384:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 56,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2409:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 58,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2383:32:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "2434:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 61,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2433:6:0"
									},
									"scope": 77,
									"src": "2367:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 65,
										"nodeType": "StructuredDocumentation",
										"src": "2446:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 76,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2757:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2778:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2770:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 66,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2770:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2792:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2784:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2804:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2796:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 70,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:41:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 76,
												"src": "2829:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 73,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2829:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2828:6:0"
									},
									"scope": 77,
									"src": "2748:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1011,
							"src": "262:2575:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 78,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3009:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 80,
										"name": "IERC20",
										"nameLocations": [
											"3152:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "3152:6:0"
									},
									"id": 81,
									"nodeType": "InheritanceSpecifier",
									"src": "3152:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 79,
								"nodeType": "StructuredDocumentation",
								"src": "3036:87:0",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 100,
							"linearizedBaseContracts": [
								100,
								77
							],
							"name": "IERC20Metadata",
							"nameLocation": "3134:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 82,
										"nodeType": "StructuredDocumentation",
										"src": "3165:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 87,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "3233:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3237:2:0"
									},
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 87,
												"src": "3263:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 84,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3262:15:0"
									},
									"scope": 100,
									"src": "3224:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "3284:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 93,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "3354:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3360:2:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 93,
												"src": "3386:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 90,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:15:0"
									},
									"scope": 100,
									"src": "3345:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 94,
										"nodeType": "StructuredDocumentation",
										"src": "3407:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 99,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3486:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3494:2:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 99,
												"src": "3520:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 96,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3520:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3519:7:0"
									},
									"scope": 100,
									"src": "3477:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1011,
							"src": "3124:405:0",
							"usedErrors": [],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 101,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "3653:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 102,
								"nodeType": "StructuredDocumentation",
								"src": "3679:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 129,
							"linearizedBaseContracts": [
								129
							],
							"name": "Context",
							"nameLocation": "4194:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "4270:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 107,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4287:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4291:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "4287:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 106,
												"id": 109,
												"nodeType": "Return",
												"src": "4280:17:0"
											}
										]
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "4217:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4227:2:0"
									},
									"returnParameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "4261:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4260:9:0"
									},
									"scope": 129,
									"src": "4208:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "4377:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 116,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "4394:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4398:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "4394:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 115,
												"id": 118,
												"nodeType": "Return",
												"src": "4387:15:0"
											}
										]
									},
									"id": 120,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "4319:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4327:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 120,
												"src": "4361:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 113,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4361:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4360:16:0"
									},
									"scope": 129,
									"src": "4310:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "4487:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4504:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 124,
												"id": 126,
												"nodeType": "Return",
												"src": "4497:8:0"
											}
										]
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "4424:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4444:2:0"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "4478:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 122,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4477:9:0"
									},
									"scope": 129,
									"src": "4415:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1011,
							"src": "4176:338:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 130,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "4661:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 131,
								"nodeType": "StructuredDocumentation",
								"src": "4687:141:0",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 170,
							"linearizedBaseContracts": [
								170
							],
							"name": "IERC20Errors",
							"nameLocation": "4839:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4858:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 140,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "5178:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5211:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5203:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5227:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5219:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5219:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "5244:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "5236:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5202:49:0"
									},
									"src": "5172:80:0"
								},
								{
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "5258:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 145,
									"name": "ERC20InvalidSender",
									"nameLocation": "5421:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 144,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5448:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 145,
												"src": "5440:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 142,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5440:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5439:16:0"
									},
									"src": "5415:41:0"
								},
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "5462:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 150,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "5632:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5661:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "5653:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 147,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5653:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5652:18:0"
									},
									"src": "5626:45:0"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "5677:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 159,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "6033:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6068:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6060:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "6085:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6077:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6077:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "6104:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "6096:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:52:0"
									},
									"src": "6027:85:0"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "6118:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 164,
									"name": "ERC20InvalidApprover",
									"nameLocation": "6303:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "6332:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "6324:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6324:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6323:18:0"
									},
									"src": "6297:45:0"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "6348:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 169,
									"name": "ERC20InvalidSpender",
									"nameLocation": "6554:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "6582:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "6574:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6574:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6573:17:0"
									},
									"src": "6548:43:0"
								}
							],
							"scope": 1011,
							"src": "4829:1764:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 171,
								"nodeType": "StructuredDocumentation",
								"src": "6595:143:0",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 218,
							"linearizedBaseContracts": [
								218
							],
							"name": "IERC721Errors",
							"nameLocation": "6749:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "6769:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 176,
									"name": "ERC721InvalidOwner",
									"nameLocation": "6999:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7026:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 176,
												"src": "7018:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 173,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7018:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7017:15:0"
									},
									"src": "6993:40:0"
								},
								{
									"documentation": {
										"id": 177,
										"nodeType": "StructuredDocumentation",
										"src": "7039:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 181,
									"name": "ERC721NonexistentToken",
									"nameLocation": "7182:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 179,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7213:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "7205:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 178,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7205:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7204:17:0"
									},
									"src": "7176:46:0"
								},
								{
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "7228:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 190,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "7528:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7557:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7549:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 183,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7573:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7565:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 188,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "7590:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "7582:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 187,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7548:48:0"
									},
									"src": "7522:75:0"
								},
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "7603:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 195,
									"name": "ERC721InvalidSender",
									"nameLocation": "7766:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "7794:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "7786:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7786:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7785:16:0"
									},
									"src": "7760:42:0"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "7808:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 200,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "7978:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "8008:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8000:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 197,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7999:18:0"
									},
									"src": "7972:46:0"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "8024:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 207,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "8282:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8317:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8309:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8309:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8335:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "8327:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8308:35:0"
									},
									"src": "8276:68:0"
								},
								{
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "8350:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 212,
									"name": "ERC721InvalidApprover",
									"nameLocation": "8535:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "8565:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "8557:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8556:18:0"
									},
									"src": "8529:46:0"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "8581:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 217,
									"name": "ERC721InvalidOperator",
									"nameLocation": "8789:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8819:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 217,
												"src": "8811:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8811:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8810:18:0"
									},
									"src": "8783:46:0"
								}
							],
							"scope": 1011,
							"src": "6739:2092:0",
							"usedErrors": [
								176,
								181,
								190,
								195,
								200,
								207,
								212,
								217
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 219,
								"nodeType": "StructuredDocumentation",
								"src": "8833:145:0",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 265,
							"linearizedBaseContracts": [
								265
							],
							"name": "IERC1155Errors",
							"nameLocation": "8989:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "9010:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 230,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "9382:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9409:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9409:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "9433:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9425:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "9450:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9442:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9442:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9466:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "9458:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 227,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9458:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9408:66:0"
									},
									"src": "9376:99:0"
								},
								{
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "9481:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 235,
									"name": "ERC1155InvalidSender",
									"nameLocation": "9644:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "9673:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 235,
												"src": "9665:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 232,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9665:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9664:16:0"
									},
									"src": "9638:43:0"
								},
								{
									"documentation": {
										"id": 236,
										"nodeType": "StructuredDocumentation",
										"src": "9687:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 240,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "9857:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "9888:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 240,
												"src": "9880:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 237,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9880:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9879:18:0"
									},
									"src": "9851:47:0"
								},
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "9904:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 247,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "10171:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10208:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10200:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 247,
												"src": "10218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 244,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10218:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10199:33:0"
									},
									"src": "10165:68:0"
								},
								{
									"documentation": {
										"id": 248,
										"nodeType": "StructuredDocumentation",
										"src": "10239:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 252,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "10424:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 250,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "10455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 252,
												"src": "10447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10446:18:0"
									},
									"src": "10418:47:0"
								},
								{
									"documentation": {
										"id": 253,
										"nodeType": "StructuredDocumentation",
										"src": "10471:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 257,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "10679:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "10710:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "10702:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 254,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10701:18:0"
									},
									"src": "10673:47:0"
								},
								{
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "10726:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 264,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "11017:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "11051:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11043:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11043:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "11070:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 264,
												"src": "11062:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11042:41:0"
									},
									"src": "11011:73:0"
								}
							],
							"scope": 1011,
							"src": "8979:2107:0",
							"usedErrors": [
								230,
								235,
								240,
								247,
								252,
								257,
								264
							],
							"usedEvents": []
						},
						{
							"id": 266,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "11218:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 268,
										"name": "Context",
										"nameLocations": [
											"12033:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "12033:7:0"
									},
									"id": 269,
									"nodeType": "InheritanceSpecifier",
									"src": "12033:7:0"
								},
								{
									"baseName": {
										"id": 270,
										"name": "IERC20",
										"nameLocations": [
											"12042:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 77,
										"src": "12042:6:0"
									},
									"id": 271,
									"nodeType": "InheritanceSpecifier",
									"src": "12042:6:0"
								},
								{
									"baseName": {
										"id": 272,
										"name": "IERC20Metadata",
										"nameLocations": [
											"12050:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 100,
										"src": "12050:14:0"
									},
									"id": 273,
									"nodeType": "InheritanceSpecifier",
									"src": "12050:14:0"
								},
								{
									"baseName": {
										"id": 274,
										"name": "IERC20Errors",
										"nameLocations": [
											"12066:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 170,
										"src": "12066:12:0"
									},
									"id": 275,
									"nodeType": "InheritanceSpecifier",
									"src": "12066:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 267,
								"nodeType": "StructuredDocumentation",
								"src": "11248:757:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 771,
							"linearizedBaseContracts": [
								771,
								170,
								100,
								77,
								129
							],
							"name": "ERC20",
							"nameLocation": "12024:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 279,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "12129:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12085:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 278,
										"keyName": "account",
										"keyNameLocation": "12101:7:0",
										"keyType": {
											"id": 276,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12093:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12085:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 277,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "12112:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 285,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "12217:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12145:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 284,
										"keyName": "account",
										"keyNameLocation": "12161:7:0",
										"keyType": {
											"id": 280,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "12153:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "12145:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 283,
											"keyName": "spender",
											"keyNameLocation": "12188:7:0",
											"keyType": {
												"id": 281,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "12180:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "12172:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 282,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "12199:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 287,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "12251:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12235:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 286,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "12235:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 289,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "12285:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12270:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 288,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12270:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 291,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "12311:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 771,
									"src": "12296:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 290,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "12296:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 307,
										"nodeType": "Block",
										"src": "12557:57:0",
										"statements": [
											{
												"expression": {
													"id": 301,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 299,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "12567:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 300,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 294,
														"src": "12575:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12567:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 302,
												"nodeType": "ExpressionStatement",
												"src": "12567:13:0"
											},
											{
												"expression": {
													"id": 305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 303,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 291,
														"src": "12590:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 304,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 296,
														"src": "12600:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "12590:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 306,
												"nodeType": "ExpressionStatement",
												"src": "12590:17:0"
											}
										]
									},
									"documentation": {
										"id": 292,
										"nodeType": "StructuredDocumentation",
										"src": "12325:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 308,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "12527:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12513:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 293,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12513:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "12548:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "12534:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 295,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12534:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12512:44:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12557:0:0"
									},
									"scope": 771,
									"src": "12501:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										87
									],
									"body": {
										"id": 316,
										"nodeType": "Block",
										"src": "12739:29:0",
										"statements": [
											{
												"expression": {
													"id": 314,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 289,
													"src": "12756:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 313,
												"id": 315,
												"nodeType": "Return",
												"src": "12749:12:0"
											}
										]
									},
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "12620:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 317,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "12688:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12692:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 317,
												"src": "12724:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12724:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12723:15:0"
									},
									"scope": 771,
									"src": "12679:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										93
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "12943:31:0",
										"statements": [
											{
												"expression": {
													"id": 323,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 291,
													"src": "12960:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 322,
												"id": 324,
												"nodeType": "Return",
												"src": "12953:14:0"
											}
										]
									},
									"documentation": {
										"id": 318,
										"nodeType": "StructuredDocumentation",
										"src": "12774:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "12890:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12896:2:0"
									},
									"returnParameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "12928:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 320,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12928:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12927:15:0"
									},
									"scope": 771,
									"src": "12881:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										99
									],
									"body": {
										"id": 334,
										"nodeType": "Block",
										"src": "13663:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 332,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13680:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 331,
												"id": 333,
												"nodeType": "Return",
												"src": "13673:9:0"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "12980:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "13616:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13624:2:0"
									},
									"returnParameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 335,
												"src": "13656:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 329,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "13656:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13655:7:0"
									},
									"scope": 771,
									"src": "13607:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										26
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "13810:36:0",
										"statements": [
											{
												"expression": {
													"id": 341,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 287,
													"src": "13827:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 342,
												"nodeType": "Return",
												"src": "13820:19:0"
											}
										]
									},
									"documentation": {
										"id": 336,
										"nodeType": "StructuredDocumentation",
										"src": "13695:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "13758:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13769:2:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "13801:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13801:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13800:9:0"
									},
									"scope": 771,
									"src": "13749:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "13978:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 352,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "13995:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 354,
													"indexExpression": {
														"id": 353,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "14005:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13995:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 351,
												"id": 355,
												"nodeType": "Return",
												"src": "13988:25:0"
											}
										]
									},
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "13852:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "13913:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "13931:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13923:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 346,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13922:17:0"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "13969:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13969:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13968:9:0"
									},
									"scope": 771,
									"src": "13904:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										44
									],
									"body": {
										"id": 380,
										"nodeType": "Block",
										"src": "14290:103:0",
										"statements": [
											{
												"assignments": [
													368
												],
												"declarations": [
													{
														"constant": false,
														"id": 368,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14308:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 380,
														"src": "14300:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 367,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14300:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 371,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 369,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "14316:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14316:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14300:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 373,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "14348:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 374,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 360,
															"src": "14355:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 362,
															"src": "14359:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 372,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "14338:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14338:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "14338:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 378,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "14382:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 366,
												"id": 379,
												"nodeType": "Return",
												"src": "14375:11:0"
											}
										]
									},
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "14026:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 381,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "14224:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "14241:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14233:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 362,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14253:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14245:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 361,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14232:27:0"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 381,
												"src": "14284:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 364,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14284:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14283:6:0"
									},
									"scope": 771,
									"src": "14215:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										54
									],
									"body": {
										"id": 397,
										"nodeType": "Block",
										"src": "14540:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 391,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 285,
															"src": "14557:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 393,
														"indexExpression": {
															"id": 392,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 384,
															"src": "14569:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "14557:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 395,
													"indexExpression": {
														"id": 394,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 386,
														"src": "14576:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14557:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 390,
												"id": 396,
												"nodeType": "Return",
												"src": "14550:34:0"
											}
										]
									},
									"documentation": {
										"id": 382,
										"nodeType": "StructuredDocumentation",
										"src": "14399:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "14460:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "14478:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14470:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14470:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14493:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14485:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14485:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14469:32:0"
									},
									"returnParameters": {
										"id": 390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 389,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 398,
												"src": "14531:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14531:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14530:9:0"
									},
									"scope": 771,
									"src": "14451:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										64
									],
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "14977:107:0",
										"statements": [
											{
												"assignments": [
													409
												],
												"declarations": [
													{
														"constant": false,
														"id": 409,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "14995:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 421,
														"src": "14987:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 408,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "14987:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 412,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 410,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15003:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15003:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14987:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 414,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 409,
															"src": "15034:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 415,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 401,
															"src": "15041:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 416,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "15050:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 413,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 662,
														"src": "15025:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15025:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 418,
												"nodeType": "ExpressionStatement",
												"src": "15025:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15073:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 407,
												"id": 420,
												"nodeType": "Return",
												"src": "15066:11:0"
											}
										]
									},
									"documentation": {
										"id": 399,
										"nodeType": "StructuredDocumentation",
										"src": "14597:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "14907:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "14923:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14940:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14932:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14932:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14914:32:0"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "14971:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 405,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14971:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14970:6:0"
									},
									"scope": 771,
									"src": "14898:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										76
									],
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "15769:151:0",
										"statements": [
											{
												"assignments": [
													435
												],
												"declarations": [
													{
														"constant": false,
														"id": 435,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "15787:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 453,
														"src": "15779:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 434,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "15779:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 438,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 436,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "15797:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 437,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15797:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15779:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15835:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "15841:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15850:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 770,
														"src": "15819:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15819:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "15819:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 446,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 425,
															"src": "15876:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 447,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 427,
															"src": "15882:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 448,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 429,
															"src": "15886:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 445,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 501,
														"src": "15866:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15866:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 450,
												"nodeType": "ExpressionStatement",
												"src": "15866:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "15909:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 433,
												"id": 452,
												"nodeType": "Return",
												"src": "15902:11:0"
											}
										]
									},
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "15090:581:0",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "15685:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "15706:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15698:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "15720:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15712:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 426,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15712:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15732:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15724:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 428,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15697:41:0"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "15763:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 431,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15763:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15762:6:0"
									},
									"scope": 771,
									"src": "15676:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "16362:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 464,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 457,
														"src": "16376:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 467,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16392:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16384:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 465,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16384:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 468,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16384:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16376:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 478,
												"nodeType": "IfStatement",
												"src": "16372:86:0",
												"trueBody": {
													"id": 477,
													"nodeType": "Block",
													"src": "16396:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 473,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16444:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16436:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 471,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16436:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16436:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 470,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "16417:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16417:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 476,
															"nodeType": "RevertStatement",
															"src": "16410:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 479,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 459,
														"src": "16471:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16485:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 481,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16477:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 480,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16477:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 483,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16477:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16471:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 493,
												"nodeType": "IfStatement",
												"src": "16467:86:0",
												"trueBody": {
													"id": 492,
													"nodeType": "Block",
													"src": "16489:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "16539:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "16531:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 486,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "16531:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 489,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "16531:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 485,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "16510:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16510:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 491,
															"nodeType": "RevertStatement",
															"src": "16503:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 495,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "16570:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "16576:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 497,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "16580:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 494,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "16562:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16562:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "16562:24:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "15926:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 501,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "16302:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16320:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16312:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16334:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16326:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16346:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "16338:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 460,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16338:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16311:41:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16362:0:0"
									},
									"scope": 771,
									"src": "16293:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 577,
										"nodeType": "Block",
										"src": "16983:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 511,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 504,
														"src": "16997:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17013:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17005:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 512,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17005:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17005:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16997:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 548,
													"nodeType": "Block",
													"src": "17171:362:0",
													"statements": [
														{
															"assignments": [
																523
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 523,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "17193:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 548,
																	"src": "17185:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 522,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "17185:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 527,
															"initialValue": {
																"baseExpression": {
																	"id": 524,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 279,
																	"src": "17207:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 526,
																"indexExpression": {
																	"id": 525,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 504,
																	"src": "17217:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17207:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "17185:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 528,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 523,
																	"src": "17240:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 529,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17254:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17240:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 538,
															"nodeType": "IfStatement",
															"src": "17236:115:0",
															"trueBody": {
																"id": 537,
																"nodeType": "Block",
																"src": "17261:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 532,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 504,
																					"src": "17311:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 533,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 523,
																					"src": "17317:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 534,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 508,
																					"src": "17330:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 531,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 140,
																				"src": "17286:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 535,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "17286:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 536,
																		"nodeType": "RevertStatement",
																		"src": "17279:57:0"
																	}
																]
															}
														},
														{
															"id": 547,
															"nodeType": "UncheckedBlock",
															"src": "17364:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 539,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17471:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 541,
																			"indexExpression": {
																				"id": 540,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 504,
																				"src": "17481:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17471:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 542,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 523,
																				"src": "17489:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 543,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 508,
																				"src": "17503:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "17489:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17471:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 546,
																	"nodeType": "ExpressionStatement",
																	"src": "17471:37:0"
																}
															]
														}
													]
												},
												"id": 549,
												"nodeType": "IfStatement",
												"src": "16993:540:0",
												"trueBody": {
													"id": 521,
													"nodeType": "Block",
													"src": "17017:148:0",
													"statements": [
														{
															"expression": {
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 517,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 287,
																	"src": "17133:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 518,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 508,
																	"src": "17149:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17133:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 520,
															"nodeType": "ExpressionStatement",
															"src": "17133:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 550,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 506,
														"src": "17547:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "17561:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17553:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 551,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "17553:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17553:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "17547:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 569,
													"nodeType": "Block",
													"src": "17762:206:0",
													"statements": [
														{
															"id": 568,
															"nodeType": "UncheckedBlock",
															"src": "17776:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 562,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 279,
																				"src": "17921:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 564,
																			"indexExpression": {
																				"id": 563,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 506,
																				"src": "17931:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "17921:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 565,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17938:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17921:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 567,
																	"nodeType": "ExpressionStatement",
																	"src": "17921:22:0"
																}
															]
														}
													]
												},
												"id": 570,
												"nodeType": "IfStatement",
												"src": "17543:425:0",
												"trueBody": {
													"id": 561,
													"nodeType": "Block",
													"src": "17565:191:0",
													"statements": [
														{
															"id": 560,
															"nodeType": "UncheckedBlock",
															"src": "17579:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 556,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 287,
																			"src": "17710:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 557,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 508,
																			"src": "17726:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "17710:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 559,
																	"nodeType": "ExpressionStatement",
																	"src": "17710:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 572,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 504,
															"src": "17992:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 573,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 506,
															"src": "17998:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 574,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 508,
															"src": "18002:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 571,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "17983:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17983:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 576,
												"nodeType": "EmitStatement",
												"src": "17978:30:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "16599:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 578,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "16917:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 504,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "16933:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16925:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 503,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "16947:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16939:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16939:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 508,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16959:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "16951:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16924:41:0"
									},
									"returnParameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16983:0:0"
									},
									"scope": 771,
									"src": "16908:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "18414:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 591,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 586,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 581,
														"src": "18428:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 589,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18447:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 588,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18439:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 587,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18439:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 590,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18439:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18428:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 600,
												"nodeType": "IfStatement",
												"src": "18424:91:0",
												"trueBody": {
													"id": 599,
													"nodeType": "Block",
													"src": "18451:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 595,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "18501:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "18493:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 593,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "18493:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "18493:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 592,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "18472:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18472:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 598,
															"nodeType": "RevertStatement",
															"src": "18465:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 604,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "18540:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "18532:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 602,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "18532:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18532:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 581,
															"src": "18544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 607,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 583,
															"src": "18553:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 601,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "18524:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18524:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "18524:35:0"
											}
										]
									},
									"documentation": {
										"id": 579,
										"nodeType": "StructuredDocumentation",
										"src": "18021:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "18367:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18381:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18373:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18373:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18398:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "18390:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18372:32:0"
									},
									"returnParameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18414:0:0"
									},
									"scope": 771,
									"src": "18358:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 643,
										"nodeType": "Block",
										"src": "18940:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "18954:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "18973:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18965:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "18965:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18965:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "18954:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "18950:89:0",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "18977:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19025:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "19017:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "19017:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "19017:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 145,
																	"src": "18998:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18998:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "18991:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 635,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 614,
															"src": "19056:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 638,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "19073:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "19065:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 636,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "19065:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19065:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 640,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "19077:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 634,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "19048:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 641,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19048:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 642,
												"nodeType": "ExpressionStatement",
												"src": "19048:35:0"
											}
										]
									},
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "18572:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 644,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "18893:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "18907:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18899:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18899:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18924:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 644,
												"src": "18916:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18898:32:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18940:0:0"
									},
									"scope": 771,
									"src": "18884:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 661,
										"nodeType": "Block",
										"src": "19700:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 655,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 647,
															"src": "19719:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 656,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 649,
															"src": "19726:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 657,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 651,
															"src": "19735:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "19742:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 654,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															662,
															722
														],
														"referencedDeclaration": 722,
														"src": "19710:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19710:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 660,
												"nodeType": "ExpressionStatement",
												"src": "19710:37:0"
											}
										]
									},
									"documentation": {
										"id": 645,
										"nodeType": "StructuredDocumentation",
										"src": "19096:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 662,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "19635:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 652,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19652:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19644:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 646,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "19667:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19659:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 648,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19659:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 651,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19684:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 662,
												"src": "19676:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 650,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19676:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19643:47:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19700:0:0"
									},
									"scope": 771,
									"src": "19626:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 721,
										"nodeType": "Block",
										"src": "20699:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 674,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 665,
														"src": "20713:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 677,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20730:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 676,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20722:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 675,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20722:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 678,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20722:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20713:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 688,
												"nodeType": "IfStatement",
												"src": "20709:89:0",
												"trueBody": {
													"id": 687,
													"nodeType": "Block",
													"src": "20734:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20784:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 682,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20776:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 681,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20776:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20776:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 680,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "20755:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 685,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20755:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 686,
															"nodeType": "RevertStatement",
															"src": "20748:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 689,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 667,
														"src": "20811:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 692,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20830:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 691,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20822:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 690,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "20822:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 693,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20822:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "20811:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 703,
												"nodeType": "IfStatement",
												"src": "20807:90:0",
												"trueBody": {
													"id": 702,
													"nodeType": "Block",
													"src": "20834:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 698,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "20883:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 697,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "20875:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 696,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "20875:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 699,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20875:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 695,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "20855:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20855:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 701,
															"nodeType": "RevertStatement",
															"src": "20848:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 704,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "20906:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 707,
															"indexExpression": {
																"id": 705,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 665,
																"src": "20918:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "20906:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 708,
														"indexExpression": {
															"id": 706,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 667,
															"src": "20925:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "20906:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 709,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 669,
														"src": "20936:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20906:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "20906:35:0"
											},
											{
												"condition": {
													"id": 712,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 671,
													"src": "20955:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 720,
												"nodeType": "IfStatement",
												"src": "20951:76:0",
												"trueBody": {
													"id": 719,
													"nodeType": "Block",
													"src": "20966:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 714,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 665,
																		"src": "20994:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 715,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 667,
																		"src": "21001:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 716,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 669,
																		"src": "21010:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 713,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 20,
																	"src": "20985:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 717,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20985:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 718,
															"nodeType": "EmitStatement",
															"src": "20980:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 663,
										"nodeType": "StructuredDocumentation",
										"src": "19760:836:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 722,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "20610:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20619:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 664,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20619:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "20642:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20634:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20659:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20651:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20651:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "20671:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 722,
												"src": "20666:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 670,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20666:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20618:63:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20699:0:0"
									},
									"scope": 771,
									"src": "20601:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "21404:387:0",
										"statements": [
											{
												"assignments": [
													733
												],
												"declarations": [
													{
														"constant": false,
														"id": 733,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "21422:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 769,
														"src": "21414:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 732,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21414:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 738,
												"initialValue": {
													"arguments": [
														{
															"id": 735,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 725,
															"src": "21451:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 736,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "21458:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 734,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "21441:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21441:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21414:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 739,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "21480:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "21504:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 741,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "21504:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 740,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "21499:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21499:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 744,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "21513:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "21499:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "21480:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 768,
												"nodeType": "IfStatement",
												"src": "21476:309:0",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "21518:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 748,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 746,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 733,
																	"src": "21536:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 747,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 729,
																	"src": "21555:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "21536:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 756,
															"nodeType": "IfStatement",
															"src": "21532:130:0",
															"trueBody": {
																"id": 755,
																"nodeType": "Block",
																"src": "21562:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 750,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 727,
																					"src": "21614:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 751,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21623:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 752,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21641:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 749,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "21587:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21587:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 754,
																		"nodeType": "RevertStatement",
																		"src": "21580:67:0"
																	}
																]
															}
														},
														{
															"id": 766,
															"nodeType": "UncheckedBlock",
															"src": "21675:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 758,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 725,
																				"src": "21712:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 759,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 727,
																				"src": "21719:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 760,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 733,
																					"src": "21728:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 761,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 729,
																					"src": "21747:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "21728:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "21754:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 757,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				662,
																				722
																			],
																			"referencedDeclaration": 722,
																			"src": "21703:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 764,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21703:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 765,
																	"nodeType": "ExpressionStatement",
																	"src": "21703:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 723,
										"nodeType": "StructuredDocumentation",
										"src": "21039:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "21324:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 730,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "21348:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21340:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 724,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "21363:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21355:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21355:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21380:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "21372:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 728,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21339:47:0"
									},
									"returnParameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21404:0:0"
									},
									"scope": 771,
									"src": "21315:476:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1011,
							"src": "12006:9787:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169
							],
							"usedEvents": [
								11,
								20
							]
						},
						{
							"id": 772,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "21919:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 774,
										"name": "Context",
										"nameLocations": [
											"22463:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 129,
										"src": "22463:7:0"
									},
									"id": 775,
									"nodeType": "InheritanceSpecifier",
									"src": "22463:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 773,
								"nodeType": "StructuredDocumentation",
								"src": "21946:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								129
							],
							"name": "Ownable",
							"nameLocation": "22452:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 777,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "22493:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 916,
									"src": "22477:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 776,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "22477:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 778,
										"nodeType": "StructuredDocumentation",
										"src": "22506:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 782,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "22602:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 780,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22637:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 782,
												"src": "22629:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 779,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22629:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22628:17:0"
									},
									"src": "22596:50:0"
								},
								{
									"documentation": {
										"id": 783,
										"nodeType": "StructuredDocumentation",
										"src": "22652:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 787,
									"name": "OwnableInvalidOwner",
									"nameLocation": "22745:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "22773:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "22765:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 784,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22765:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22764:15:0"
									},
									"src": "22739:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 793,
									"name": "OwnershipTransferred",
									"nameLocation": "22792:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 789,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "22829:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22813:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 788,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 791,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "22860:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "22844:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 790,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22844:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22812:57:0"
									},
									"src": "22786:84:0"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "23030:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 804,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 799,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "23044:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23068:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23060:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 800,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "23060:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 803,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23060:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23044:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 813,
												"nodeType": "IfStatement",
												"src": "23040:95:0",
												"trueBody": {
													"id": 812,
													"nodeType": "Block",
													"src": "23072:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 808,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "23121:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 807,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "23113:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 806,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "23113:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 809,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23113:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 805,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "23093:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23093:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 811,
															"nodeType": "RevertStatement",
															"src": "23086:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 815,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "23163:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 814,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "23144:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23144:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "23144:32:0"
											}
										]
									},
									"documentation": {
										"id": 794,
										"nodeType": "StructuredDocumentation",
										"src": "22876:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 819,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "23016:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "23008:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23007:22:0"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23030:0:0"
									},
									"scope": 916,
									"src": "22996:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "23292:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 822,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 853,
														"src": "23302:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23302:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 824,
												"nodeType": "ExpressionStatement",
												"src": "23302:13:0"
											},
											{
												"id": 825,
												"nodeType": "PlaceholderStatement",
												"src": "23325:1:0"
											}
										]
									},
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "23189:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 827,
									"name": "onlyOwner",
									"nameLocation": "23280:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23289:2:0"
									},
									"src": "23271:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 835,
										"nodeType": "Block",
										"src": "23464:30:0",
										"statements": [
											{
												"expression": {
													"id": 833,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "23481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 832,
												"id": 834,
												"nodeType": "Return",
												"src": "23474:13:0"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "23339:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 836,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "23418:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23423:2:0"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "23455:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23454:9:0"
									},
									"scope": 916,
									"src": "23409:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "23612:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 840,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 836,
															"src": "23626:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 841,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23626:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 842,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 111,
															"src": "23637:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 843,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23637:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "23626:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 851,
												"nodeType": "IfStatement",
												"src": "23622:101:0",
												"trueBody": {
													"id": 850,
													"nodeType": "Block",
													"src": "23651:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 846,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 111,
																			"src": "23699:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 847,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "23699:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 845,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 782,
																	"src": "23672:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 848,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23672:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 849,
															"nodeType": "RevertStatement",
															"src": "23665:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "23500:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "23576:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23587:2:0"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23612:0:0"
									},
									"scope": 916,
									"src": "23567:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 866,
										"nodeType": "Block",
										"src": "24118:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 862,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24155:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24147:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 860,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24147:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 863,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24147:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 859,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24128:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 864,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24128:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 865,
												"nodeType": "ExpressionStatement",
												"src": "24128:30:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "23735:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 867,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 857,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 856,
												"name": "onlyOwner",
												"nameLocations": [
													"24108:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24108:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24108:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "24073:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24090:2:0"
									},
									"returnParameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24118:0:0"
									},
									"scope": 916,
									"src": "24064:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 894,
										"nodeType": "Block",
										"src": "24384:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "24398:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24418:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24410:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "24410:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24410:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24398:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "24394:91:0",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "24422:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "24471:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "24463:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "24463:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "24463:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 787,
																	"src": "24443:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24443:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "24436:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 891,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 870,
															"src": "24513:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 890,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 915,
														"src": "24494:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24494:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 893,
												"nodeType": "ExpressionStatement",
												"src": "24494:28:0"
											}
										]
									},
									"documentation": {
										"id": 868,
										"nodeType": "StructuredDocumentation",
										"src": "24171:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 895,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 873,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 872,
												"name": "onlyOwner",
												"nameLocations": [
													"24374:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "24374:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "24374:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "24323:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24349:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "24341:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24341:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24340:18:0"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24384:0:0"
									},
									"scope": 916,
									"src": "24314:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 914,
										"nodeType": "Block",
										"src": "24746:124:0",
										"statements": [
											{
												"assignments": [
													902
												],
												"declarations": [
													{
														"constant": false,
														"id": 902,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "24764:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 914,
														"src": "24756:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 901,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "24756:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 904,
												"initialValue": {
													"id": 903,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 777,
													"src": "24775:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24756:25:0"
											},
											{
												"expression": {
													"id": 907,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 905,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 777,
														"src": "24791:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 906,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 898,
														"src": "24800:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "24791:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 908,
												"nodeType": "ExpressionStatement",
												"src": "24791:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 910,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "24844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 911,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 898,
															"src": "24854:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 909,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 793,
														"src": "24823:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24823:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "EmitStatement",
												"src": "24818:45:0"
											}
										]
									},
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "24535:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 915,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "24692:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "24719:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 915,
												"src": "24711:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24710:18:0"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24746:0:0"
									},
									"scope": 916,
									"src": "24683:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1011,
							"src": "22434:2438:0",
							"usedErrors": [
								782,
								787
							],
							"usedEvents": [
								793
							]
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "24905:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 918,
										"name": "ERC20",
										"nameLocations": [
											"24950:5:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 771,
										"src": "24950:5:0"
									},
									"id": 919,
									"nodeType": "InheritanceSpecifier",
									"src": "24950:5:0"
								},
								{
									"baseName": {
										"id": 920,
										"name": "Ownable",
										"nameLocations": [
											"24957:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 916,
										"src": "24957:7:0"
									},
									"id": 921,
									"nodeType": "InheritanceSpecifier",
									"src": "24957:7:0"
								}
							],
							"canonicalName": "FCODE",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1010,
							"linearizedBaseContracts": [
								1010,
								916,
								771,
								170,
								100,
								77,
								129
							],
							"name": "FCODE",
							"nameLocation": "24941:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "b69ef8a8",
									"id": 923,
									"mutability": "mutable",
									"name": "balance",
									"nameLocation": "24986:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 1010,
									"src": "24971:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 922,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "24971:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 947,
										"nodeType": "Block",
										"src": "25079:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 937,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "25095:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 938,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25099:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "25095:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 939,
																"name": "initialSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 925,
																"src": "25107:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "25123:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 941,
																		"name": "decimals",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 335,
																		"src": "25129:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint8_$",
																			"typeString": "function () view returns (uint8)"
																		}
																	},
																	"id": 942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25129:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "25123:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25107:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 936,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25089:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 945,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25089:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 946,
												"nodeType": "ExpressionStatement",
												"src": "25089:51:0"
											}
										]
									},
									"id": 948,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "46434f4445",
													"id": 928,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8e17477ec0fd39a4725c7b8cef41f2fccb277482d9147b2bcfe3ab6553b96338",
														"typeString": "literal_string \"FCODE\""
													},
													"value": "FCODE"
												},
												{
													"hexValue": "46434f4445",
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "25050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_8e17477ec0fd39a4725c7b8cef41f2fccb277482d9147b2bcfe3ab6553b96338",
														"typeString": "literal_string \"FCODE\""
													},
													"value": "FCODE"
												}
											],
											"id": 930,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 927,
												"name": "ERC20",
												"nameLocations": [
													"25035:5:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 771,
												"src": "25035:5:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25035:23:0"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 932,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "25067:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "25071:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "25067:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 934,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 931,
												"name": "Ownable",
												"nameLocations": [
													"25059:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 916,
												"src": "25059:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25059:19:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "25020:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 948,
												"src": "25012:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25011:23:0"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25079:0:0"
									},
									"scope": 1010,
									"src": "25000:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 962,
										"nodeType": "Block",
										"src": "25216:34:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 958,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "25232:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 959,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 952,
															"src": "25236:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 957,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 611,
														"src": "25226:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25226:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 961,
												"nodeType": "ExpressionStatement",
												"src": "25226:17:0"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 963,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 955,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 954,
												"name": "onlyOwner",
												"nameLocations": [
													"25206:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 827,
												"src": "25206:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "25206:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "25166:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25179:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "25171:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25191:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 963,
												"src": "25183:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25170:28:0"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25216:0:0"
									},
									"scope": 1010,
									"src": "25157:93:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "25297:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 969,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "25313:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25317:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "25313:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 971,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "25325:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 968,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 644,
														"src": "25307:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25307:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 973,
												"nodeType": "ExpressionStatement",
												"src": "25307:25:0"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 975,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "25269:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25282:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "25274:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 964,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25273:16:0"
									},
									"returnParameters": {
										"id": 967,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25297:0:0"
									},
									"scope": 1010,
									"src": "25260:79:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1008,
										"nodeType": "Block",
										"src": "25412:195:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 983,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "25430:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "25434:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "25430:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 985,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 836,
																	"src": "25442:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25442:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "25430:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f6e6c79206f776e65722063616e2077697468647261772e",
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25451:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91",
																"typeString": "literal_string \"Only owner can withdraw.\""
															},
															"value": "Only owner can withdraw."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f01ac8af0590322d7bd91c0689d92bfcb0fa04f0a51a6a0f1b59cf783ba7ce91",
																"typeString": "literal_string \"Only owner can withdraw.\""
															}
														],
														"id": 982,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25422:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25422:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 990,
												"nodeType": "ExpressionStatement",
												"src": "25422:56:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 994,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 992,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 977,
																"src": "25496:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 993,
																"name": "balance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 923,
																"src": "25506:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "25496:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742066756e64732e",
															"id": 995,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25515:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
																"typeString": "literal_string \"Insufficient funds.\""
															},
															"value": "Insufficient funds."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fca62076c3a45d0949d1fcf939a62c62bdad002a0531066a7de3bc7823459ddb",
																"typeString": "literal_string \"Insufficient funds.\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25488:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25488:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "25488:49:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1001,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "25568:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 998,
															"name": "destAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "25547:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1000,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "25559:8:0",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "25547:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1002,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25547:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1003,
												"nodeType": "ExpressionStatement",
												"src": "25547:28:0"
											},
											{
												"expression": {
													"id": 1006,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1004,
														"name": "balance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 923,
														"src": "25585:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1005,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 977,
														"src": "25594:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25585:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1007,
												"nodeType": "ExpressionStatement",
												"src": "25585:15:0"
											}
										]
									},
									"functionSelector": "00f714ce",
									"id": 1009,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "25354:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "25368:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "25363:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 976,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "25363:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "destAddress",
												"nameLocation": "25392:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1009,
												"src": "25376:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25376:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25362:42:0"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25412:0:0"
									},
									"scope": 1010,
									"src": "25345:262:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 1011,
							"src": "24932:677:0",
							"usedErrors": [
								140,
								145,
								150,
								159,
								164,
								169,
								782,
								787
							],
							"usedEvents": [
								11,
								20,
								793
							]
						}
					],
					"src": "164:25445:0"
				},
				"id": 0
			}
		}
	}
}